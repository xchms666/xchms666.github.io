<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>专题笔记 | 数字图像处理 | ch03 灰度变换与空间滤波</title>
      <link href="/2024/03/30/%E4%B8%93%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-ch03-%E7%81%B0%E5%BA%A6%E5%8F%98%E6%8D%A2%E4%B8%8E%E7%A9%BA%E9%97%B4%E6%BB%A4%E6%B3%A2/"/>
      <url>/2024/03/30/%E4%B8%93%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-ch03-%E7%81%B0%E5%BA%A6%E5%8F%98%E6%8D%A2%E4%B8%8E%E7%A9%BA%E9%97%B4%E6%BB%A4%E6%B3%A2/</url>
      
        <content type="html"><![CDATA[<h1><span id="专题笔记-数字图像处理-ch03-灰度变换与空间滤波">专题笔记 | 数字图像处理 | ch03 灰度变换与空间滤波</span></h1><h2><span id="前言">前言</span></h2><p>所用教材为冈萨雷斯的《数字图像处理（第四版）》</p><p>以下图片绝大多数来自浙江大学信息与电子工程学院开设的《数字图像处理》课程项志宇老师的教学课件，这里仅做本人复习整理用，转载请备注出处。</p><h2><span id="目录">目录</span></h2><!-- toc --><ul><li><a href="#31-%E5%9B%BE%E5%83%8F%E5%A2%9E%E5%BC%BA">3.1 图像增强</a><ul><li><a href="#%E7%A9%BA%E9%97%B4%E5%9F%9F%E5%A4%84%E7%90%86">空间域处理</a></li></ul></li><li><a href="#32-%E5%9F%BA%E6%9C%AC%E7%9A%84%E7%81%B0%E5%BA%A6%E5%8F%98%E6%8D%A2%E5%A2%9E%E5%BC%BA%E5%A4%84%E7%90%86">3.2 基本的灰度变换增强处理</a><ul><li><a href="#1-%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2">1. 线性变换</a></li><li><a href="#2-%E5%AF%B9%E6%95%B0%E5%8F%98%E6%8D%A2">2. 对数变换</a></li><li><a href="#3-%E5%B9%82%E5%BE%8B%E5%8F%98%E6%8D%A2gamma%E5%8F%98%E6%8D%A2">3. 幂律变换（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span>变换）</a></li><li><a href="#4-%E5%88%86%E6%AE%B5%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2">4. 分段线性变换</a></li></ul></li><li><a href="#33-%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%A4%84%E7%90%86">3.3 直方图处理</a><ul><li><a href="#%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%9D%87%E8%A1%A1">直方图均衡</a></li><li><a href="#%E7%9B%B4%E6%96%B9%E5%9B%BE%E8%A7%84%E5%AE%9A%E5%8C%96%E7%9B%B4%E6%96%B9%E5%9B%BE%E6%8C%87%E5%AE%9A">直方图规定化（直方图指定）</a></li><li><a href="#%E5%B1%80%E9%83%A8%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%A4%84%E7%90%86">局部直方图处理</a></li></ul></li><li><a href="#34-%E7%A9%BA%E9%97%B4%E6%BB%A4%E6%B3%A2%E5%9F%BA%E7%A1%80">3.4 空间滤波基础</a><ul><li><a href="#%E7%A9%BA%E9%97%B4%E7%9B%B8%E5%85%B3%E4%B8%8E%E5%8D%B7%E7%A7%AF"><strong>空间相关与卷积</strong></a></li><li><a href="#%E5%8D%B7%E7%A7%AF%E7%9A%84%E6%80%A7%E8%B4%A8">卷积的性质</a></li><li><a href="#%E7%BA%BF%E6%80%A7%E6%BB%A4%E6%B3%A2%E7%9A%84%E5%90%91%E9%87%8F%E8%A1%A8%E7%A4%BA">线性滤波的向量表示</a></li><li><a href="#%E5%8F%AF%E5%88%86%E7%A6%BB%E5%8D%B7%E7%A7%AF%E6%A0%B8">可分离卷积核</a></li><li><a href="#%E7%A9%BA%E9%97%B4%E6%BB%A4%E6%B3%A2%E4%B8%8E%E9%A2%91%E7%8E%87%E5%9F%9F%E6%BB%A4%E6%B3%A2%E7%9A%84%E6%AF%94%E8%BE%83">空间滤波与频率域滤波的比较</a></li><li><a href="#%E6%9E%84%E5%BB%BA%E7%A9%BA%E9%97%B4%E6%BB%A4%E6%B3%A2%E5%99%A8%E6%A0%B8%E5%BF%83%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95">构建空间滤波器核心的几种方法</a></li></ul></li><li><a href="#35-%E5%B9%B3%E6%BB%91%E7%A9%BA%E9%97%B4%E6%BB%A4%E6%B3%A2%E5%99%A8">3.5 平滑空间滤波器</a><ul><li><a href="#%E9%9D%9E%E5%8A%A0%E6%9D%83%E9%82%BB%E5%9F%9F%E5%B9%B3%E5%9D%87%E7%AE%97%E6%9C%AF%E5%B9%B3%E5%9D%87">非加权邻域平均——算术平均</a></li><li><a href="#%E4%BD%8E%E9%80%9A%E9%AB%98%E6%96%AF%E6%BB%A4%E6%B3%A2%E5%99%A8%E6%A0%B8">低通高斯滤波器核</a></li><li><a href="#%E7%BB%9F%E8%AE%A1%E6%8E%92%E5%BA%8F%E9%9D%9E%E7%BA%BF%E6%80%A7%E6%BB%A4%E6%B3%A2%E5%99%A8">统计排序（非线性）滤波器</a></li></ul></li><li><a href="#36-%E9%94%90%E5%8C%96%E9%AB%98%E9%80%9A%E7%A9%BA%E9%97%B4%E6%BB%A4%E6%B3%A2%E5%99%A8">3.6 锐化（高通）空间滤波器</a></li><li><a href="#%E4%BD%9C%E4%B8%9A">作业</a></li></ul><!-- tocstop --><p>[TOC]</p><h2><span id="31-图像增强">3.1 图像增强</span></h2><p><strong>定义</strong>：突出其中某些信息，使得图像更有利于被利用的图像处理方法</p><p><strong>目的</strong>：1. 改善图像的视觉效果 2. 将图像转换成更适合于人或者机器进行分析处理的形式。</p><p><strong>注意</strong>：图像增强面向特定的应用，没有通用的理论，应用不同，采用的图像增强方法也不同。</p><p><strong>分类</strong>：</p><ul><li>空间域处理 与 变换域处理</li><li>​    全局处理 与 局部处理</li><li>​    彩色图像 与 黑白图像</li></ul><blockquote><p>本章所讨论的所有图像处理技术都是在空间域中实现的。</p></blockquote><h3><span id="空间域处理">空间域处理</span></h3><p>分为两类：</p><ul><li>灰度变换<ul><li>在图像<mark>单个像素</mark>上操作，主要以对比度和阈值处理为目的</li></ul></li><li>空间滤波<ul><li>改善性能的操作，如通过<mark>领域处理</mark>锐化图像</li><li>当领域大小为1时，滤波成为灰度变换</li></ul></li></ul><h2><span id="32-基本的灰度变换增强处理">3.2 基本的灰度变换增强处理</span></h2><h3><span id="1-线性变换">1. 线性变换</span></h3><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330112200.png" alt></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">g(x,y)=T[f(x,y)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p><h4><span id="线性灰度变换">线性灰度变换</span></h4><p>其中，<strong>线性灰度变换</strong>可表示为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>d</mi><mo>−</mo><mi>c</mi></mrow><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>a</mi><mo stretchy="false">]</mo><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">g(x,y)=\frac{d-c}{b-a}[f(x,y)-a]+c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span></span></p><p>通常，图像用8bits表示，最大灰度范围则为[0,255]，希望变换后的最小灰度c为0，最大灰度d为255，则：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>255</mn><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>a</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">g(x,y)=\frac{255}{b-a}[f(x,y)-a]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">]</span></span></span></span></span></p><p>这个过程也称<strong>图像拉伸，比例变换</strong>。</p><h4><span id="灰度倒置变换图像求反">灰度倒置变换——图像求反</span></h4><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">s=L-1-r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 或者<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)=L-1-f(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330113708.png" alt></p><h3><span id="2-对数变换">2. 对数变换</span></h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s=clog(1+r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></span></p><p>c为常数，且r&gt;=0</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330113804.png" alt></p><p>对数变换可用于<strong>压缩像素值较大的图像的动态范围</strong></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330114223.png" alt></p><p>原来的图像归一化处理导致亮点太小，进行暗区提亮后视觉效果变好。</p><h4><span id="反对数变换指数变换">反对数变换（指数变换）</span></h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>r</mi><mi mathvariant="normal">/</mi><mi>c</mi></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s=10^{r/c}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight">/</span><span class="mord mathdefault mtight">c</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>常见图像的变换曲线</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330114114.png" alt></p><h3><span id="3-幂律变换γgammaγ变换">3. 幂律变换（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span>变换）</span></h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>c</mi><msup><mi>r</mi><mi>γ</mi></msup></mrow><annotation encoding="application/x-tex">s=cr^{\gamma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.714392em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><p>具有<strong>局部</strong>动态范围的压缩或者放大功能</p></li><li><p>指数大于1和小于1效果完全相反</p></li><li><p>指数为1时简化成恒等变换</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330114424.png" alt></p><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span>​矫正</strong></p><ul><li>对于CCD和氧化铅等摄像管, 成像是接近线性的</li><li>CRT显像管的发光特性呈非线性<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>=</mo><mi>K</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">B=K 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord">1</span></span></span></span> * <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">E</mi><mi mathvariant="normal">r</mi></msup></mrow><annotation encoding="application/x-tex">\mathrm{E}^{\mathrm{r}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">E</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">r</span></span></span></span></span></span></span></span></span></span></span></span></span><ul><li>B:显像管上的光像亮度</li><li>K1:系数</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">E</mi></mrow><annotation encoding="application/x-tex">\mathrm{E}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">E</span></span></span></span></span> :显像管棚极上的信号电压</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\mathrm{\gamma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span></span> : 显像管的转换非线性系数; 一般 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn mathvariant="bold">2.2</mn></mrow><annotation encoding="application/x-tex">\mathrm{y}=\mathbf{2 . 2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">2</span><span class="mord mathbf">.</span><span class="mord mathbf">2</span></span></span></span></span></li><li>采用CRT的系统中需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Y</mi></mrow><annotation encoding="application/x-tex">\mathrm{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.025em;">Y</span></span></span></span></span> 校正<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">y</mi></mrow><annotation encoding="application/x-tex">\mathrm{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span></span></span></span></span> 校正可以在提像机电路中进行, 或电视机中进行</li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Y</mi></mrow><annotation encoding="application/x-tex">\mathrm{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.025em;">Y</span></span></span></span></span> 校正: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">F</mi><mo>=</mo><mi mathvariant="normal">K</mi><mn>2</mn><msup><mrow></mrow><mtext>* </mtext></msup><msup><mi mathvariant="normal">E</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi mathvariant="normal">Y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathrm{F}=\mathrm{K} 2{ }^{\text {* }} \mathrm{E}^{1 / \mathrm{Y}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">F</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">K</span></span><span class="mord">2</span><span class="mord"><span class="mord"></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">* </span></span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathrm">E</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.025em;">Y</span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li>LCD显示器发光特性呈线性<br>不需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Y</mi></mrow><annotation encoding="application/x-tex">\mathrm{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.025em;">Y</span></span></span></span></span> 校正</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330114632.png" alt></p><p><strong>幂律变换例子</strong></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330114710.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330114741.png" alt></p><h3><span id="4-分段线性变换">4. 分段线性变换</span></h3><h4><span id="对比度拉伸">对比度拉伸</span></h4><p>进一步，如果希望变换后灰度范围[a,b]对应到[c,d]，[0,a]对应到c，[b,M~f~]对应到d，则</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mo separator="true">,</mo><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mn>0</mn><mo>≤</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>d</mi><mo>−</mo><mi>c</mi></mrow><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>a</mi><mo stretchy="false">]</mo><mo>+</mo><mi>c</mi><mo separator="true">,</mo><mtext> </mtext><mtext> </mtext><mi>a</mi><mo>≤</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mo separator="true">,</mo><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mi>b</mi><mo>≤</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>&lt;</mo><msub><mi>M</mi><mi>f</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">g(x,y)=  \begin{cases} c,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,0\le f(x)&lt;a\\ \frac{d-c}{b-a}[f(x,y)-a]+c,\,\,a\le f(x)\le b\\ d,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,b\le f(x,y)&lt;M_f \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330112655.png" alt></p><p>通常取c=0， d=255</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330113451.png" alt></p><h4><span id="灰度级分层">灰度级分层</span></h4><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330115346.png" alt></p><p>(b)突出指定灰度，其他灰度降低一级,©突出指定灰度，其他灰度不变</p><h4><span id="比特平面分层">比特平面分层</span></h4><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330115544.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330115443.png" alt></p><h2><span id="33-直方图处理">3.3 直方图处理</span></h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><msub><mi>n</mi><mi>k</mi></msub><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">p(s_k)=\frac{n_k}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935599999999998em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>s~k~：图像第k个灰度级， k=0，1，……，L-1</p><p>p(s~k~)：该灰度级在图像上出现的频度</p><p>n~k~：图像中灰度值为s~k~的像素个数</p><p>n：图像中的像素总数</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330130052.png" alt></p><p><strong>直观感受</strong></p><p>若一幅图像的像素灰度倾向于<strong>占据整个可能的灰度级</strong>，并且<strong>分布均匀</strong>，则该图像会有<strong>高对比度</strong>的外观，并展示灰色调的较大变化。</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330130149.png" alt></p><h3><span id="直方图均衡">直方图均衡</span></h3><p><strong>目标</strong>：</p><p>对图像进行灰度变换，使直方图成为<strong>均匀灰度</strong>分布的图像</p><h4><span id="1-连续随机变量的情况"><strong>1. 连续随机变量的情况</strong></span></h4><p>利用概率密度函数的“归一性”</p><p>设原概率密度函数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_r(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>​，其中r表示连续灰度，作灰度映射s=T® ，则根据概率密度函数的性质，有</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mfrac><mrow><mi>d</mi><mi>r</mi></mrow><mrow><mi>d</mi><mi>s</mi></mrow></mfrac><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">p_s(s)=p_r(r)|\frac{dr}{ds}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣</span></span></span></span></span></p><p>当同时给定目标分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_s(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>时，解此微分方程可得灰度变换函数s=T®</p><p>若希望<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_s(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>为均匀分布，则</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">p_s(s)=\frac{1}{L-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>此时满足要求的灰度变换为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msubsup><mo>∫</mo><mn>0</mn><mi>r</mi></msubsup><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mi>d</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">s=T(r)=(L-1)\int_0^rp_r(w)dw</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.326242em;vertical-align:-0.9119499999999999em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mi>r</mi></msubsup><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mi>d</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">\int_0^rp_r(w)dw</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.215112em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>为<strong>累积分布函数CDF</strong></p><h4><span id="2-离散灰度情况">2. 离散灰度情况</span></h4><p><strong>方法：<strong>用离散概率值与</strong>求和</strong>处理来代替连续情况下的概率密度函数与积分处理。</p><p>设第k灰度级r~k~出现概率为p~r~(r~k~)=n~k~/n此时的累积分布函数（CDF）为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></munderover><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></munderover><mfrac><msub><mi>n</mi><mi>i</mi></msub><mi>n</mi></mfrac><mo>=</mo><msub><mover accent="true"><mi>P</mi><mo>^</mo></mover><mi>r</mi></msub><mo stretchy="false">{</mo><mi>r</mi><mo>≤</mo><msub><mi>r</mi><mi>k</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\sum_{i=0}^kp_r(r_i)=\sum_{i=0}^k\frac{n_i}{n}=\hat P_{r}\{r\le r_k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p><p>若变换后灰度范围为[0，L-1]，共L级，则变换函数为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></munderover><mfrac><msub><mi>n</mi><mi>i</mi></msub><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">s_k=T(r_k)=(L-1)\sum_{i=0}^k\frac{n_i}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>例子</strong></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330132220.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330132538.png" alt></p><h3><span id="直方图规定化直方图指定">直方图规定化（直方图指定）</span></h3><p>使得处理后图像的直方图具有规定的形状，不一定是平均分布</p><h4><span id="1-连续分布情况">1. 连续分布情况</span></h4><p>设灰度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 是一个随机变量, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_r(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> 为原图灰度密度函数, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_z(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>​ 为增强后图像的灰度密度函数</p><p>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_r(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_z(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> 分别作直方图均衡(设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span> 为 1 )</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mi>r</mi></msubsup><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>≤</mo><mi>r</mi><mo>≤</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>v</mi><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mi>z</mi></msubsup><msub><mi>p</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>≤</mo><mi>z</mi><mo>≤</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ll}s=T(r)=\int_0^r p_r(x) d x &amp; 0 \leq r \leq 1 \\v=G(z)=\int_0^z p_z(x) d x &amp; 0 \leq z \leq 1\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4385840000000005em;vertical-align:-0.9692920000000005em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.469292em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span><span style="top:-2.3907079999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9692920000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.469292em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.3907079999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9692920000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>因为对原始图像和目标图像都做了直方图均衡化（变成一样的均衡分布），所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo separator="true">,</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">s, v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 的密度是相同的, 故 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">s=v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><br>只要先对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 作均衡化得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>, 由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_z(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> 已知, 可求得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">v=G(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>, 故可得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">z</mi><mo>=</mo><msup><mi mathvariant="bold">G</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi mathvariant="normal">v</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="bold">G</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi mathvariant="normal">r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathbf{z}=\mathbf{G}^{-1}(\mathrm{v})=\mathbf{G}^{-1}(\mathrm{r})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">z</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">G</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">v</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">G</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">r</span></span><span class="mclose">)</span></span></span></span><br>思想: 以直方图均衡变换为桥梁, 拓展为直方图规定化</p><h4><span id="2-离散分布情况">2. 离散分布情况</span></h4><p>指定的直方图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> 可用一个可积函数表示</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> 不能表示成可积函数的形式<br>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 分别为原图和直方图指定的灰度级数, 且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>≤</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">N \leq M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span><br>(1) 计算原图的累积直方图</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub><mo>=</mo><mi>T</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">r</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">r</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow><mspace width="1em"><mi mathvariant="bold">k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi mathvariant="bold">M</mi><mo>−</mo><mi mathvariant="bold">l</mi></mspace></mrow><annotation encoding="application/x-tex">s_k=T\left(\mathbf{r}_k\right)=\sum_{i=0}^k p_i\left(\mathbf{r}_k\right) \quad \mathbf{k}=0,1, \ldots, \mathbf{M}-\mathbf{l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathbf">k</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8805499999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">M</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">l</span></span></span></span></span></span></p><p>(2) 计算能使规定的直方图均衡化的变换</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>l</mi></msub><mo>=</mo><mi>G</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>t</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow><mspace width="1em"><mi mathvariant="bold">l</mi><mo>=</mo><mn mathvariant="bold">0</mn><mo separator="true">,</mo><mn mathvariant="bold">1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi mathvariant="normal">N</mi><mo>−</mo><mn mathvariant="bold">1</mn></mspace></mrow><annotation encoding="application/x-tex">v_l=G\left(z_i\right)=\sum_{j=0}^t p_i\left(z_j\right) \quad \mathbf{l}=\mathbf{0}, \mathbf{1}, \ldots, \mathrm{N}-\mathbf{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.194338em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7805610000000005em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathbf">l</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbf">0</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">1</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathrm">N</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">1</span></span></span></span></span></span></p><p>(3)由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">s</mi><mi mathvariant="normal">k</mi></msub></mrow><annotation encoding="application/x-tex">\mathrm{s}_{\mathrm{k}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">s</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">k</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">v</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\mathrm{v}_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都应接近均匀分布, 只要找到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">s</mi><mi mathvariant="normal">k</mi></msub><mo>≈</mo><msub><mi mathvariant="normal">v</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\mathrm{s}_{\mathrm{k}} \approx \mathrm{v}_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63312em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">s</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">k</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">k</mi></mrow><annotation encoding="application/x-tex">\mathrm{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">k</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo stretchy="false">(</mo><mi mathvariant="normal">k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1(\mathrm{k})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">k</span></span><span class="mclose">)</span></span></span></span>, 就可找到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">r</mi><mi mathvariant="normal">k</mi></msub></mrow><annotation encoding="application/x-tex">\mathrm{r}_{\mathrm{k}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">k</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">z</mi><mi mathvariant="normal">k</mi></msub></mrow><annotation encoding="application/x-tex">\mathrm{z}_{\mathrm{k}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">k</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的对应关系</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330141054.png" alt></p><blockquote><p>没太看明白直方图指定</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330141338.png" alt></p><h3><span id="局部直方图处理">局部直方图处理</span></h3><p>全局直方图处理中，一些小区域的细节可能并没有得到有效增强，因为在全局的变换中小区域被忽略了。</p><p>解决方法：以图像中每个像素的<strong>邻域中的灰度分布</strong>为基础设计变换函数。</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330143923.png" alt></p><p><strong>直方图统计量</strong></p><ul><li>直方图用于计算均值和方差, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">n</mi></mrow><annotation encoding="application/x-tex">\mathrm{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">n</span></span></span></span></span> 阶矩定义</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>μ</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo>−</mo><mi>m</mi><mo fence="true">)</mo></mrow><mi>n</mi></msup><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>m</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>r</mi><mi>i</mi></msub><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\mu_n(r) &amp; =\sum_{i=0}^{L-1}\left(r_i-m\right)^n p\left(r_i\right) \\m &amp; =\sum_{i=0}^{L-1} r_i p\left(r_i\right)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.812010000000001em;vertical-align:-3.1560050000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6560050000000004em;"><span style="top:-5.656005em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1560050000000004em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6560050000000004em;"><span style="top:-5.656005em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">m</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1560050000000004em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>也可以从取样值直接计算</p><ul><li>取样均值</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>M</mi><mi>N</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=\frac{1}{M N} \sum_{x=0}^{M-1} \sum_{y=0}^{N-1} f(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2315570000000005em;vertical-align:-1.403221em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><ul><li>取样方差<br>2阶矩: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace width="1em"><msub><mi>μ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msup><mrow><mo fence="true">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo>−</mo><mi>m</mi><mo fence="true">)</mo></mrow><mn>2</mn></msup><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mspace></mrow><annotation encoding="application/x-tex">\quad \mu_2(r)=\sum_{i=0}^{L-1}\left(r_i-m\right)^2 p\left(r_i\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">m</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mrow><mi>M</mi><mi>N</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>m</mi><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^2=\frac{1}{M N} \sum_{x=0}^{M-1} \sum_{y=0}^{N-1}[f(x, y)-m]^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2315570000000005em;vertical-align:-1.403221em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>基于直方图统计量的局部增强</strong></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330144603.png" alt></p><blockquote><p>如上图，不分析了wwww</p></blockquote><h2><span id="34-空间滤波基础">3.4 空间滤波基础</span></h2><ul><li>“滤波”借用于频域处理, 指接受或者拒绝一定的频率分量。</li><li><strong>线性空间滤波</strong>和频域滤波存在一一对应的关系。</li><li>空间滤波还可以用于非线性滤波,这在<strong>频率域是做不到</strong>的。</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mi>a</mi></mrow><mi>a</mi></munderover><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><mi>b</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>s</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)=\sum_{s=-a}^a \sum_{t=-b}^b w(s, t) f(x+s, y+t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1965570000000003em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p><h3><span id="空间相关与卷积"><strong>空间相关与卷积</strong></span></h3><ul><li>1 维情况</li><li>函数与离散单位冲击<strong>相关运算</strong>时, 在该冲击位置产生该函数的<strong>翻转版本</strong>;</li><li>卷积的基本特性是函数与单位冲击<strong>卷积</strong>，在该冲击处得到这个函数的<strong>拷贝。</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330145048.png" alt></p><ul><li><p>2维情况</p></li><li><p>相关</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>◃</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mi>a</mi></mrow><mi>a</mi></munderover><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><mi>b</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>s</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w(x, y) \triangleleft f(x, y)=\sum_{s=-a}^a \sum_{t=-b}^b w(s, t) f(x+s, y+t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">◃</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1965570000000003em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p></li><li><p>卷积</p></li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⋆</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mi>a</mi></mrow><mi>a</mi></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mi>b</mi></mrow><mi>b</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>s</mi><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w(x, y) \star f(x, y)=\sum_{s=a}^a \sum_{k=b}^b w(s, t) f(x-s, y-t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1382260000000004em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p><ul><li>卷积满足交换律</li><li>在图像处理中, <strong>卷积</strong>泛指<strong>滑动乘积求和</strong>的处理, 通常不严格区分相关与卷积的差别。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330145242.png" alt></p><h3><span id="卷积的性质">卷积的性质</span></h3><blockquote><p>悲，写到这mathpix额度用完了，后面只能先贴照片了</p></blockquote><ul><li><p>卷积满足交换律、结合律和分配率；相关只满足分配率。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Property </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Convolution </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Correlation </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Commutative </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo>⋆</mo><mi>g</mi><mo>=</mo><mi>g</mi><mo>⋆</mo><mi>f</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">−</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Associative </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo>⋆</mo><mo stretchy="false">(</mo><mi>g</mi><mo>⋆</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>f</mi><mo>⋆</mo><mi>g</mi><mo stretchy="false">)</mo><mo>⋆</mo><mi>h</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">−</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Distributive </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo>⋆</mo><mo stretchy="false">(</mo><mi>g</mi><mo>+</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>f</mi><mo>⋆</mo><mi>g</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>f</mi><mo>⋆</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>g</mi><mo>+</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>f</mi><mo>⋆</mo><mi>g</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>f</mi><mo>⋆</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{lcc}\text { Property } &amp; \text { Convolution } &amp; \text { Correlation } \\\text { Commutative } &amp; f \star g=g \star f &amp; - \\\text { Associative } &amp; f \star(g \star h)=(f \star g) \star h &amp; - \\\text { Distributive } &amp; f \star(g+h)=(f \star g)+(f \star h) &amp; f *(g+h)=(f \star g)+(f \star h)\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.800000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> Property </span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> Commutative </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> Associative </span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> Distributive </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> Convolution </span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">h</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> Correlation </span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p></li><li><p>当一幅图像f先被核w1滤波，得到结果又被w2滤波，直到被Q个核滤波。由于卷积满足交换律，因此滤波可以在单次滤波运算中完成，其中</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo>⋆</mo><msub><mi>w</mi><mn>2</mn></msub><mo>⋆</mo><msub><mi>w</mi><mn>3</mn></msub><mo>⋆</mo><mo>⋯</mo><mo>⋆</mo><msub><mi>w</mi><mi>Q</mi></msub></mrow><annotation encoding="application/x-tex">w=w_1 \star w_2 \star w_3 \star \cdots \star w_Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p></li></ul><h3><span id="线性滤波的向量表示">线性滤波的向量表示</span></h3><ul><li><p>相关或者卷积可以表示成为两个向量的内积 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>z</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>z</mi><mn>2</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>w</mi><mrow><mi>m</mi><mi>n</mi></mrow></msub><msub><mi>z</mi><mrow><mi>m</mi><mi>n</mi></mrow></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msub><mi>w</mi><mi>k</mi></msub><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><msup><mi mathvariant="bold-italic">w</mi><mi mathvariant="normal">T</mi></msup><mi>z</mi></mrow><annotation encoding="application/x-tex">R=w_1 z_1+w_2 z_2+\cdots+w_{m n} z_{m n}=\sum_{k=1}^m w_k z_k=\boldsymbol{w}^{\mathrm{T}} z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span></p></li><li><p>卷积操作也是卷积深度神经网络（CNN）的基本操作之一<img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330152517.png" alt></p></li><li><p>卷积网络的滤波器核是自己学习的</p></li></ul><h3><span id="可分离卷积核">可分离卷积核</span></h3><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330150935.png" alt></p><p><strong>如何确定核是否可分离？</strong></p><ul><li><p>一个列向量与一个行向量乘积得到的矩阵的秩总为1。因此，若一个矩阵的秩为1，就可以被分解为两个一维向量的乘积。分离过程如下：</p><ul><li><p>在核中找到任意一个非零元素E</p></li><li><p>设该元素所在的列和行向量分别为c 和r，则得到分解结果向量</p></li><li><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">v</mi><mo>=</mo><mi mathvariant="bold">c</mi><mtext> and </mtext><msup><mi mathvariant="bold">w</mi><mi>T</mi></msup><mo>=</mo><mi mathvariant="bold">r</mi><mi mathvariant="normal">/</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">\mathbf{v}=\mathbf{c} \text { and } \mathbf{w}^T=\mathbf{r} / E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">c</span></span><span class="mord text"><span class="mord"> and </span></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">r</span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span></span></p></li></ul></li></ul><h3><span id="空间滤波与频率域滤波的比较">空间滤波与频率域滤波的比较</span></h3><ul><li>图像的外观依赖于组成该图像的多个不同频率正弦分量的幅度；</li><li>线性滤波就是找到合适的方法来<strong>修改图像的频率分量组成</strong>。空域中通过卷积实现，频域中可通过乘以滤波器实现</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330152843.png" alt></p><ul><li>理想低通的<a href="https://blog.csdn.net/qq_33590958/article/details/108609290">振铃效应</a>明显</li><li>数字滤波器设计的核心主题之一是在<strong>降低理想频率滤波器的振铃特性</strong>的同时，得到理想频率滤波器<strong>锐利截止特性</strong>的可靠近似。</li></ul><h3><span id="构建空间滤波器核心的几种方法">构建空间滤波器核心的几种方法</span></h3><ul><li>根据其<strong>数学性质</strong>：如取平均会平滑图像, 取导数会锐化图像;</li><li>对具有所需性质的<strong>二维空间函数进行取样</strong>：如高斯函数;</li><li>设计具有<strong>规定频率响应的空间滤波器</strong>：如一维空间滤波器绕其中心旋转等</li></ul><h2><span id="35-平滑空间滤波器">3.5 平滑空间滤波器</span></h2><blockquote><p>这里看下书再补充</p></blockquote><h3><span id="非加权邻域平均算术平均">非加权邻域平均——算术平均</span></h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 是窗口 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> 中的像点数, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">S</mi></mrow><annotation encoding="application/x-tex">\mathbf{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">S</span></span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">N</mi><mo lspace="0em" rspace="0em">⋆</mo></msup><mi>N</mi></mrow><annotation encoding="application/x-tex">\mathbf{N}^{\star} N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">N</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 尺寸窗口</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>f</mi><mo>^</mo></mover><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>M</mi></mfrac><munder><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mi>S</mi></mrow></munder><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{f}_1(x, y)=\frac{1}{M} \sum_{i, j \in S} f(i, j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.751884em;vertical-align:-1.430444em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.430444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></span></p><p>缺点: 使图像产生模糊, 窗口越大, 模糊越严重</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330153610.png" alt></p><ul><li>所有系数都相等的空间均值滤波器有时也称为<strong>盒状滤波器 (box filter)</strong>（盒式滤波器）</li><li>原图以及分别用 3,11 和 21 的方形均值滤波模板处理的结果。</li><li>能平滑, 但容易带来我们不想要的模糊效果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330153736.png" alt></p><h3><span id="低通高斯滤波器核">低通高斯滤波器核</span></h3><ul><li>高斯核具有<strong>各向同性</strong>，是唯一可分离的圆对称核。</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mi>K</mi><msup><mi>e</mi><mrow><mo>−</mo><mfrac><msup><mi>r</mi><mn>2</mn></msup><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">G(r)=K e^{-\frac{r^2}{2 \sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24644em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.24644em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1328857142857145em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><table><thead><tr><th><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330154032.png" alt></th><th><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330154142.png" alt></th></tr></thead><tbody></tbody></table><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left left left left center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo>×</mo><mi>g</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo>⋆</mo><mi>g</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Mean </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>m</mi><mi>f</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>m</mi><mi>g</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>m</mi><mrow><mi>f</mi><mo>×</mo><mi>g</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>m</mi><mi>f</mi></msub><msubsup><mi>σ</mi><mi>g</mi><mn>2</mn></msubsup><mo>+</mo><msub><mi>m</mi><mi>g</mi></msub><msubsup><mi>σ</mi><mi>f</mi><mn>2</mn></msubsup></mrow><mrow><msubsup><mi>σ</mi><mi>f</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>σ</mi><mi>g</mi><mn>2</mn></msubsup></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>m</mi><mrow><mi>f</mi><mo>⋆</mo><mi>g</mi></mrow></msub><mo>=</mo><msub><mi>m</mi><mi>f</mi></msub><mo>+</mo><msub><mi>m</mi><mi>g</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Standard deviation </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>σ</mi><mi>f</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>σ</mi><mi>g</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>σ</mi><mrow><mi>f</mi><mo>×</mo><mi>g</mi></mrow></msub><mo>=</mo><msqrt><mfrac><mrow><msubsup><mi>σ</mi><mi>f</mi><mn>2</mn></msubsup><msubsup><mi>σ</mi><mi>g</mi><mn>2</mn></msubsup></mrow><mrow><msubsup><mi>σ</mi><mi>f</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>σ</mi><mi>g</mi><mn>2</mn></msubsup></mrow></mfrac></msqrt></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>σ</mi><mrow><mi>f</mi><mo>⋆</mo><mi>g</mi></mrow></msub><mo>=</mo><msqrt><mrow><msubsup><mi>σ</mi><mi>f</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>σ</mi><mi>g</mi><mn>2</mn></msubsup></mrow></msqrt></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{llllc} &amp; f &amp; g &amp; f \times g &amp; f \star g \\\text { Mean } &amp; m_f &amp; m_g &amp; m_{f \times g}=\frac{m_f \sigma_g^2+m_g \sigma_f^2}{\sigma_f^2+\sigma_g^2} &amp; m_{f \star g}=m_f+m_g \\\text { Standard deviation } &amp; \sigma_f &amp; \sigma_g &amp; \sigma_{f \times g}=\sqrt{\frac{\sigma_f^2 \sigma_g^2}{\sigma_f^2+\sigma_g^2}} &amp; \sigma_{f \star g}=\sqrt{\sigma_f^2+\sigma_g^2}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.5851999999999995em;vertical-align:-2.5425999999999993em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0426em;"><span style="top:-5.7376000000000005em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"></span></span><span style="top:-4.14626em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord text"><span class="mord"> Mean </span></span></span></span><span style="top:-1.8974000000000006em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord text"><span class="mord"> Standard deviation </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5425999999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0426em;"><span style="top:-5.7376000000000005em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-4.14626em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8974000000000006em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5425999999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0426em;"><span style="top:-5.7376000000000005em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span><span style="top:-4.14626em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8974000000000006em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5425999999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0426em;"><span style="top:-5.7376000000000005em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span><span style="top:-4.14626em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2313399999999999em;"><span style="top:-2.62642em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142858em;"><span style="top:-2.1527714285714286em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.48611428571428567em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.214em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.60742em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7138599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8974000000000006em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5350000000000001em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.21386em;"><span style="top:-2.62642em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142858em;"><span style="top:-2.1527714285714286em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.48611428571428567em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.214em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.65028em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142858em;"><span style="top:-2.1527714285714286em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.48611428571428567em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.214em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7138599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.4950000000000006em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width="400em" height="2.48em" viewbox="0 0 400000 2592" preserveaspectratio="xMinYMin slice"><path d="M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9049999999999998em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5425999999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0426em;"><span style="top:-5.7376000000000005em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span><span style="top:-4.14626em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">⋆</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8974000000000006em;"><span class="pstrut" style="height:3.535em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">⋆</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1642460000000003em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.3986920000000005em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374159999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.124246em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width="400em" height="1.8800000000000001em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6757539999999999em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5425999999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>小的高斯核不能捕获高斯函数的钟形特征, 因此更像盒式核。实用的高斯核的大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn><mi>σ</mi><mo>×</mo><mn>6</mn><mi>σ</mi></mrow><annotation encoding="application/x-tex">6 \sigma \times 6 \sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330154340.png" alt></p><p><strong>高斯核与盒式核平滑特性的比较</strong></p><ul><li>盒式核产生了线性平滑, 产生斜坡过渡, 特别注意斜坡开始和结束时的硬过渡；</li><li>高斯核会在边缘过渡周围产生更平滑的结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330154452.png" alt></p><p><strong>滤波前边缘填充方式</strong></p><ol><li><p>零填充 (zeropadding)</p><ol><li>基本方法</li></ol></li><li><p>镜像填充</p><ol><li>当边界附近包含细节时更适用。</li></ol></li><li><p>复制填充</p><ol><li>图像边界附近区域为常数时常使用</li></ol></li></ol><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330154645.png" alt></p><p><strong>滤波核相对图像大小对平滑性能的影响</strong></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330154750.png" alt></p><p><strong>保留大尺度物体的应用</strong></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330154945.png" alt></p><p><strong>使用低通滤波矫正阴影</strong></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330155032.png" alt></p><h3><span id="统计排序非线性滤波器">统计排序（非线性）滤波器</span></h3><ul><li><p>中值滤波</p><p>适合椒盐噪声</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">✓</mi></mrow><annotation encoding="application/x-tex">\checkmark</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord amsrm">✓</span></span></span></span> 用一个固定长度的窗口 (如宽度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">N</mi><mo>=</mo><mn>3</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>7</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{N}=3,5,7, \cdots)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">N</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span></span></span></span> 在信号上滑动;<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">✓</mi></mrow><annotation encoding="application/x-tex">\checkmark</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord amsrm">✓</span></span></span></span> 把窗口中离散信号按数值大小进行排列;<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">✓</mi></mrow><annotation encoding="application/x-tex">\checkmark</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord amsrm">✓</span></span></span></span>​​ 取排列在正中间的值作为窗口中心所在信号值。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330155205.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330155236.png" alt></p><p>扩大滤波器尺寸可以把三脉冲滤掉</p><p><strong>中值滤波性质</strong></p><ul><li>对于突发脉冲信号, 若出现长度小于窗口尺寸的一半, 则被抑制掉椒盐噪声具有这样的性质</li><li>二维中值滤波选用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mo>∗</mo></msup><mi>N</mi></mrow><annotation encoding="application/x-tex">N^* N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>​ 大小的窗口形状, 可为方形、十字形等</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330155615.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330155723.png" alt></p><h2><span id="36-锐化高通空间滤波器">3.6 锐化（高通）空间滤波器</span></h2><h2><span id="作业">作业</span></h2><blockquote><p>完蛋，刚听完课看作业一点都不会……</p></blockquote><h4><span id="31">3.1</span></h4><p>给出一个灰度变换函数, 扩展图像的灰度, 使得最低灰度为 0 , 最高灰度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">L-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 。</p><ul><li><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>r</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Others </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">s=T(r)= \begin{cases}0, &amp; \text { if } r&lt;0 \\ r, &amp; \text { Others }\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord"> Others </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li></ul><h4><span id="35">3.5</span></h4><ul><li>(a) 将低有效比特平面设为零对图像的直方图有何影响？<ul><li>具有不同灰度值的像素的数量将减少，从而导致直方图中的分量的数量减少。由于像素的数量不会改变，所以这将导致剩下的直方图分量的(幅值)高度增加。通常，灰度值的丰富性降低会导致<strong>对比度下降</strong>。</li></ul></li><li>(b) 将高有效比特平面设为零对一幅图像的直方图有何影响？<ul><li>最明显的效果是<strong>图像显著变暗</strong>。例如，丢弃最高位将会使8位图像中最亮的亮度限制在127.由于像素数保持不变，直方图的某些峰值的高度会增加，总体呈现出更高更窄的直方图。</li></ul></li></ul><h4><span id="36">3.6</span></h4><p>说明离散直方图均衡化技术通常不产生平坦直方图的原因。</p><ul><li>直方图均衡所做的事是在亮度范围上<strong>重新映射</strong>直方图的分量。为了获得平坦的直方图，需要<strong>重新分配像素灰度值</strong>，直方图均衡没有灰度值重新分配的过程。</li></ul><h4><span id="39">3.9</span></h4><p>完成如下工作。</p><ul><li>(a) 证明式(3.15)中给出的直方图均衡化离散变换函数满足 3.3 节开头声明的条件(a)和(b)。<ul><li>对于条件(a)：可知<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>r</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p_r(r_k)\in[0,L-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>始终大于零，所以显然<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>单调增。</li><li>对于条件(b)：因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>r</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><msub><mi>n</mi><mi>k</mi></msub><mrow><mi>M</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">p_r(r_k)=\frac{n_k}{MN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.062252em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.717252em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，MN表示图像的总像素数，n~k~表示灰度值为r~k~的像素数，所以n~k~小于MN且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>n</mi><mi>i</mi></msub><mo>=</mo><mi>M</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">\sum_{i=0}^{L-1}n_i=MN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{i=0}^{L-1}p_r(r_i)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>p</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s_k=T(r_k)=(L-1)\sum_{i=0}^{L-1}p_r(r_i)=L-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>所以单个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>大于等于0，小于等于L-1</li></ul></li><li>(b)*证明仅当原图像中不缺少灰度级 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>L</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">r_k, k=0,1,2, \cdots, L-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时, 式(3.16)中的离散反变换才满足 3.3 节中的条件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><msup><mi mathvariant="normal">a</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(\mathrm{a}^{\prime}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathrm">a</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>​​ 和(b),<ul><li>当所有的灰度阶 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_k(k=0,1,2, \ldots, L-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 不为零的情况下, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> 将是严格单调增的。这意味着反变换函数将具有一定的斜率, 且是单值的。 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">r_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 属于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 。因此符合3.3节中的条件(a‘)和(b)。否则不严格单调，则反变换不单值，不满足(a’)</li></ul></li></ul><h4><span id="326">3.26</span></h4><p>如图所示图像很不相同，但它们的直方图却相同，假设每幅图像都用一个3x3的盒式模版来进行模糊处理。</p><p><a href="https://daisine.github.io/diptimu/314.png"><img src="https://daisine.github.io/diptimu/314.png" alt="img"></a></p><ul><li><p>（a）模糊后图像的直方图还相同吗？试解释原因。</p><p>右侧图像中<strong>黑色和白色区域之间的边界点数量要多得多</strong>。当进行模糊处理时，边界点将在右侧产生更多数量的不同值，因此模糊处理后的直方图不同。</p></li><li><p>（b）如果你的答案是不相同，画出两个直方图。</p><p>3x3的均值模版，其系数为1/9。假设图片的大小为NxN，用0的边框环绕图像。模糊处理后两张图像的值如下表所示：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><menclose notation="left right"><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnspacing="1em" rowlines="solid none none none none none"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> No. of Points </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Value </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>N</mi><mrow><mo fence="true">(</mo><mfrac><mi>N</mi><mn>2</mn></mfrac><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>N</mi><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>4</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi>N</mi><mo>−</mo><mn>8</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>6</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mrow><mo fence="true">(</mo><mfrac><mi>N</mi><mn>2</mn></mfrac><mo>−</mo><mn>2</mn><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable></menclose></mrow><annotation encoding="application/x-tex">\begin{array}{cc}\hline \text { No. of Points } &amp; \text { Value } \\\hline N\left(\frac{N}{2}-1\right) &amp; 0 \\2 &amp; 2 / 9 \\N-2 &amp; 3 / 9 \\4 &amp; 4 / 9 \\3 N-8 &amp; 6 / 9 \\(N-2)\left(\frac{N}{2}-2\right) &amp; 1 \\\hline\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.504662000000001em;vertical-align:-3.9823310000000007em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.522331em;"><span style="top:-6.482331em;"><span class="pstrut" style="height:6.482331em;"></span><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.482331em;"><span style="top:-6.642331000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> No. of Points </span></span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">8</span></span></span><span style="top:0.6223310000000006em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9823310000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.482331em;"><span style="top:-6.642331000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> Value </span></span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:0.6223310000000006em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9823310000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span style="top:-2.5em;"><span class="pstrut" style="height:6.482331em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-9.764662000000001em;"><span class="pstrut" style="height:6.482331em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-10.964662em;"><span class="pstrut" style="height:6.482331em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9823310000000007em;"><span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><menclose notation="left right"><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnspacing="1em" rowlines="solid none none none none none none"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> No. of Points </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> Value </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msup><mi>N</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo>−</mo><mn>14</mn><mi>N</mi><mo>+</mo><mn>98</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>28</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>14</mn><mi>N</mi><mo>−</mo><mn>224</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>128</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>4</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>98</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>5</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>16</mn><mi>N</mi><mo>−</mo><mn>256</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>6</mn><mi mathvariant="normal">/</mi><mn>9</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msup><mi>N</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo>−</mo><mn>16</mn><mi>N</mi><mo>+</mo><mn>128</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable></menclose></mrow><annotation encoding="application/x-tex">\begin{array}{cc}\hline \text { No. of Points } &amp; \text { Value } \\\hline \frac{N^2}{2}-14 N+98 &amp; 0 \\28 &amp; 2 / 9 \\14 N-224 &amp; 3 / 9 \\128 &amp; 4 / 9 \\98 &amp; 5 / 9 \\16 N-256 &amp; 6 / 9 \\\frac{N^2}{2}-16 N+128 &amp; 1 \\\hline\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.995840000000001em;vertical-align:-4.72792em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.267920000000001em;"><span style="top:-7.22792em;"><span class="pstrut" style="height:7.22792em;"></span><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.22792em;"><span style="top:-7.40584em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord text"><span class="mord"> No. of Points </span></span></span></span><span style="top:-6.02792em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">9</span><span class="mord">8</span></span></span><span style="top:-4.827920000000001em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">2</span><span class="mord">8</span></span></span><span style="top:-3.62792em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">1</span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">4</span></span></span><span style="top:-2.42792em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span></span></span><span style="top:-1.22792em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">9</span><span class="mord">8</span></span></span><span style="top:-0.027919999999999667em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">1</span><span class="mord">6</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span></span></span><span style="top:1.3499999999999999em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.72792em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.22792em;"><span style="top:-7.40584em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord text"><span class="mord"> Value </span></span></span></span><span style="top:-6.02792em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.827920000000001em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">2</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:-3.62792em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">3</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:-2.42792em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">4</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:-1.22792em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">5</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:-0.027919999999999667em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">6</span><span class="mord">/</span><span class="mord">9</span></span></span><span style="top:1.3499999999999999em;"><span class="pstrut" style="height:3.01792em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.72792em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span style="top:-2.5em;"><span class="pstrut" style="height:7.22792em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-11.25584em;"><span class="pstrut" style="height:7.22792em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-12.455840000000002em;"><span class="pstrut" style="height:7.22792em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.72792em;"><span></span></span></span></span></span></span></span></span></span></p></li></ul><h4><span id="334">3.34</span></h4><p>在用于生成如下三幅模糊图像的原图像中, 竖条的宽度为 5 像素, 高度为 100 像素, 竖条的间距为 20 像素。图像被旁边大小分别为 23 个元素、 25 个元素和 45 个元素的方形盒式核模糊。图(a)和图©中左下方的竖条被模糊，但它们之间仍然存在清晰的间隔。</p><p><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330175055.png" alt></p><p>然而, 尽管生成这幅图像的核远小于用于生成图像©的核, 图(b)中的竖条却合并到了一起。说明原因。</p><ul><li>如下图，显然, 当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mn>25</mn></mrow><annotation encoding="application/x-tex">n=25</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span></span></span></span>​ 的方形均值掩模向右平移时, 掩模所覆盖的属于坚直条的像素的个数并不发生变换, 因而其输出的像素平均值不变。因此，竖条间没有间隔。</li><li><img src="https://cdn.jsdelivr.net/gh/xchms666/MyPicture/article_img/20240330183207.png" alt></li></ul><h4><span id="336">3.36</span></h4><p>参考统计排序滤波器 (见 3.5 节):</p><ul><li>(a)*我们提到, (相对于背景的) 孤立暗像素族或亮像素族, 在面积不到中值滤波器面积的一半时, 滤波器会将邻域的中值赋给它们。假设滤波器的大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> ( <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>​ 为奇数), 说明出现这种情况的原因。<ul><li>当中值滤波器尺寸为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \times n, n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span></span></span></span> 为奇数时, 排序为第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\left(n^2+1\right) / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord">2</span></span></span></span> 的像素值就是中值, 也是滤波器的输出。显然, 有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\left(n^2-1\right) / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord">2</span></span></span></span> 个像素小于等于中值, 还有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\left(n^2-1\right) / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord">2</span></span></span></span> 个像素大于等于中值。相对于图像背景亮或暗的孤立像素团块, 当它们的面积 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 小于中值滤波器区域的一半, 即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>&lt;</mo><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant="normal">/</mi><mn>2</mn><mo>&lt;</mo><mrow><mo fence="true">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">A&lt;n^2 / 2&lt;\left(n^2+1\right) / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord">2</span></span></span></span> 时,即使整个孤立像素团都处于掩模覆盖之下, 孤立像素团（比背景亮或暗）中也不可能有某个像素值等于中值。因此, 当掩模中心点是孤立像素团中的一点时, 该点将被强制置为背景中值, 即被“滤除”掉。</li></ul></li><li>(b) 考虑具有许多像素族集合的一幅图像。假设某族像素中的所有点都亮于或暗于背景, 并且每族像素的面积小于等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">n^2 / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span></span></span></span> 。就 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>​ 而言, 在什么条件下, 一个或多个这样的像素族不再像(a)问中那样孤立?<ul><li>在 a 的结论下, 我们考虑的族的像素个数必须超过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\left(n^2-1\right) / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord">2</span></span></span></span>。在这个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的网格里, 两个族的最大距离不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mn>2</mn></msqrt><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sqrt{2}(n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1572200000000001em;vertical-align:-0.25em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术日记 | 240329 | 三运放仪表放大器 &amp; hexo使用</title>
      <link href="/2024/03/29/%E6%8A%80%E6%9C%AF%E6%97%A5%E8%AE%B0-240329-%E4%B8%89%E8%BF%90%E6%94%BE%E4%BB%AA%E8%A1%A8%E6%94%BE%E5%A4%A7%E5%99%A8-hexo%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/03/29/%E6%8A%80%E6%9C%AF%E6%97%A5%E8%AE%B0-240329-%E4%B8%89%E8%BF%90%E6%94%BE%E4%BB%AA%E8%A1%A8%E6%94%BE%E5%A4%A7%E5%99%A8-hexo%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1><span id="技术日记-240329-三运放仪表放大器-amp-hexo使用">技术日记 | 240329 | 三运放仪表放大器 &amp; hexo使用</span></h1><h2><span id="hexo-d-返回403的解决办法">hexo d 返回403的解决办法</span></h2><p>刚开始准备部署输入<code>hexo d</code>的时候一直遇到打不开github链接的问题</p><p><img src="%E6%8A%80%E6%9C%AF%E6%97%A5%E8%AE%B0-240329-%E4%B8%89%E8%BF%90%E6%94%BE%E4%BB%AA%E8%A1%A8%E6%94%BE%E5%A4%A7%E5%99%A8-hexo%E4%BD%BF%E7%94%A8/20240329172542.png" alt></p><p>查阅了一些资料都没有正确的解决方案，后来我关注到 <code>_config.yml</code>文件里的repo和某一个博主不一样，我原本是https://github.com/xchms666/xchms666.github.io.git。然后想了一下可能是协议的问题，就去仓库里复制了SSH链接，改了文件就好了。搞了好长时间没想到是因为这个。</p><p><img src="%E6%8A%80%E6%9C%AF%E6%97%A5%E8%AE%B0-240329-%E4%B8%89%E8%BF%90%E6%94%BE%E4%BB%AA%E8%A1%A8%E6%94%BE%E5%A4%A7%E5%99%A8-hexo%E4%BD%BF%E7%94%A8/20240329172952.png" alt></p><p><img src="%E6%8A%80%E6%9C%AF%E6%97%A5%E8%AE%B0-240329-%E4%B8%89%E8%BF%90%E6%94%BE%E4%BB%AA%E8%A1%A8%E6%94%BE%E5%A4%A7%E5%99%A8-hexo%E4%BD%BF%E7%94%A8/20240329172445.png" alt></p><p>但是为啥https不行我还没搞明白。</p><p>PS：刚刚看了一下之前没看完的解决博客，后面提到了这个方法……但是解决的和我遇到的不是一个问题，也暂时没有原因分析，挖个坑日后来填！</p><p><a href="https://ifwind.github.io/2021/05/26/github-hexo-%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/#github%E7%9B%B8%E5%85%B3">github+hexo=我的博客&amp;附搭建过程的小Tips | 冬于的博客 (ifwind.github.io)</a></p><h2><span id="图床图片在博客显示不了">图床图片在博客显示不了</span></h2><p><img src="%E6%8A%80%E6%9C%AF%E6%97%A5%E8%AE%B0-240329-%E4%B8%89%E8%BF%90%E6%94%BE%E4%BB%AA%E8%A1%A8%E6%94%BE%E5%A4%A7%E5%99%A8-hexo%E4%BD%BF%E7%94%A8/20240329173657.png" alt></p><h2><span id="如何阅读论文">如何阅读论文</span></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>技术博客杂谈</title>
      <link href="/2024/03/29/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E6%9D%82%E8%B0%88/"/>
      <url>/2024/03/29/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E6%9D%82%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<h1><span id="技术笔记杂谈">技术笔记杂谈</span></h1><p>[TOC]</p><h2><span id="为什么写">为什么写</span></h2><ol><li>想提升自己技术方面的语言表达能力</li><li>使用费曼学习法，让自己对技术内容掌握得更好</li><li>提升知名度（×）</li></ol><h2><span id="怎么写">怎么写</span></h2><h3><span id="分类">分类</span></h3><h4><span id="笔记类型categories">笔记类型（categories）</span></h4><h5><span id="1-技术日记">1. 技术日记</span></h5><h5><span id="目的"><strong>目的</strong></span></h5><ol><li>记录自己的技术历程，便于自己复盘</li><li>看自己慢慢积累的技能树会很有成就感（×）</li></ol><h5><span id="内容"><strong>内容</strong></span></h5><ol><li>周期性总结学习内容</li><li>选取有价值的点，没必要全部都写</li><li>日记形式</li></ol><h5><span id="格式"><strong>格式</strong></span></h5><p>标题：技术日记+日期+主要内容</p><p>例子：《技术日记 | 240329 | 三级运放分析》</p><h5><span id="2-技术细节">2. 技术细节</span></h5><h5><span id="目的"><strong>目的</strong></span></h5><ol><li>记录一些干货，方便自己复盘</li><li>帮自己梳理思路</li></ol><h5><span id="内容"><strong>内容</strong></span></h5><ol><li>对某一技术难点解决的总结</li></ol><h5><span id="格式"><strong>格式</strong></span></h5><p>标题：技术细节+类别+主要内容</p><p>例子：《技术细节 | 深度学习 | Batch的选择对训练结果有什么影响？》</p><h5><span id="3-专题笔记">3. 专题笔记</span></h5><h5><span id="目的"><strong>目的</strong></span></h5><ol><li>与技术细节类似</li></ol><h5><span id="内容"><strong>内容</strong></span></h5><ol><li>成专题的，一系列的实践经验与实践过程的总结</li><li>也可以是课程的学习笔记</li></ol><h5><span id="格式"><strong>格式</strong></span></h5><p>标题：专题笔记+专题标题（课程名）+主要内容（章节）</p><p>例子：《专题笔记 | 动手深度学习 | Lec02 数据处理》</p><h5><span id="4-论文阅读">4. 论文阅读</span></h5><h5><span id="目的"><strong>目的</strong></span></h5><ol><li>提升论文阅读总结能力</li></ol><h5><span id="内容"><strong>内容</strong></span></h5><ol><li>论文主要内容</li><li>代码复现等</li></ol><h5><span id="格式"><strong>格式</strong></span></h5><p>标题：论文阅读+论文标题</p><p>例子：《论文阅读| **》</p><h4><span id="内容技术栈tag">内容/技术栈（tag）</span></h4><p>嵌入式、图形学、深度学习……</p><h3><span id="排版">排版</span></h3><h4><span id="空格">空格</span></h4><ol><li>行文时，请在中文与英文、中文与数字、英文与数字之间增加空格。例如：</li></ol><ul><li>**正确：**Github 于 2007 年 10 月 19 日正式上线。</li><li>**错误：**Github于2007年10月19日正式上线。</li></ul><ol><li>一段文字中有超链接的部分，在超链接的前后使用空格。例如：</li></ol><ul><li>**正确：**你可以前往 <a href="https://link.zhihu.com/?target=https%3A//github.com/torvalds/linux">Linux 开源仓库</a> 了解详情。</li><li>**错误：**你可以前往<a href="https://link.zhihu.com/?target=https%3A//github.com/torvalds/linux">Linux 开源仓库</a>了解详情。</li></ul><ol><li>英文、数字前后接「中文全角标点符号」或「表示单位的角标符号」时，不需要加空格。例如：</li></ol><ul><li>**正确：**新 MacBook Pro 有 15% 的 CPU 性能提升。</li><li>**错误：**新 MacBook Pro 有 15 % 的 CPU 性能提升。</li><li>**正确：**我家的光纤入户宽带有 10Gbps，SSD 一共有 10TB。</li><li>**错误：**我家的光纤入户宽带有 10 Gbps ， SSD 一共有 20 TB 。</li></ul><ol><li>对于有特殊用法的专有名词，如 4K、1080p、iOS 13 等，英文和数字之间是否空格<strong>以官方标准为准</strong>。</li><li>每段文字的开头不需要空两格（不需要首行缩进）。</li></ol><h4><span id="标点符号">标点符号</span></h4><ol><li>中文内容引号请使用直角引号「」，而不是弯引号“”。</li></ol><ul><li><strong>推荐：</strong>「同学，『GitHub』的『GitHub Actions』服务免费额度是多少？」</li><li><strong>不推荐：</strong>「同学，“GitHub”的“GitHub Actions”服务免费额度是多少？」</li></ul><blockquote><p>注意，这一点并无对错，只是推荐与否。实际上，如果所在内容平台的全角弯引号比较美观的话，还是可以使用的。但是知乎的全角弯引号很丑，就不要在知乎用全角弯引号了。</p></blockquote><ol><li>省略号请使用「…… 」标准用法，正确输入方法是<code>shift + 6</code>。不要使用三个句号「。。。」，也不要使用三个英文句点「…」。</li></ol><ul><li>**正确：**更多新的技术也随之孕育而生……</li><li>**错误：**更多新的技术也随之孕育而生。。。</li><li>**错误：**更多新的技术也随之孕育而生…</li></ul><ol><li>不要重复使用标点符号，尤其是在表达强烈情感的时候。例如：</li></ol><ul><li>**推荐：**这个提议真棒！我喜欢。</li><li>**不推荐：**这个提议真棒！！！我喜欢~~~~</li></ul><h4><span id="中文和西文符号">中文和西文符号</span></h4><ol><li>一般情况下，一个中文句子中出现了英文部分，仍然使用中文标点，即全角符号。例如：</li></ol><ul><li>**正确：**我常用的电子设备是 Kindle、iPad Pro、iPhone。</li><li>**错误：**我常用的电子设备是 Kindle, iPad Pro, iPhone.</li><li>**正确：**核磁共振成像（NMRI）是什么原理都不知道？JFGI！</li><li>**错误：**核磁共振成像 (NMRI) 是什么原理都不知道? JFGI!</li></ul><ol><li>如果引用一段完整的英文句子，或是出现在专有名词中的标点，则不需要更改标点符号。例如：</li></ol><ul><li>**正确：**乔布斯说「Stay hungry, Stay foolish.」</li><li>**错误：**乔布斯说「Stay hungry，Stay foolish。」</li><li>**正确：**我最喜欢的手机游戏是《Lifeline: Silent Night》。</li><li>**错误：**我最喜欢的手机游戏是《Lifeline：Silent Night》。</li></ul><h4><span id="专有名词">专有名词</span></h4><ol><li>专有名词使用正确的大小写。例如：</li></ol><ul><li>**正确：**使用 GitHub 登录</li><li>**错误：**使用 github 登录</li><li>**错误：**使用 GITHUB 登录</li><li>**错误：**使用 Github 登录</li><li>**正确：**我们的客户有 GitHub、Foursquare、Microsoft Corporation、Google、Facebook, Inc.。</li><li>**错误：**我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。</li></ul><ol><li>不要使用不地道的缩写。例如：</li></ol><ul><li>**正确：**我们需要一位熟悉 JavaScript、HTML5，至少理解一种框架（如 Backbone.js、AngularJS、React 等）的前端开发者。</li><li>**错误：**我们需要一位熟悉 JS、H5，至少理解一种框架（如 backbone、angular、RJS 等）的 FED。</li></ul><ol><li>对不常见的缩写进行介绍。例如：</li></ol><ul><li>**推荐：**OCR（Optical Character Recognition，光学字符识别）</li><li>**不推荐：**OCR（光学字符识别，Optical Character Recognition）</li><li>**错误：**OCR (Optical Character Recognition, 光学字符识别)</li></ul><h4><span id="文字样式">文字样式</span></h4><ul><li>文字样式的使用可以增加文章的可读性，但是过度使用则会造成排版混乱，因此建议大家正确、克制地为文字添加样式。例如，需要着重显示的部分请使用「加粗」功能，而不要使用「斜体」，更不要使用「加粗 + 斜体」的组合。</li></ul><h4><span id="注明引用来源">注明引用来源</span></h4><ol><li>文中有使用外站或外部内容的，务必在引用最后部分注明来源。</li><li>若文章为全文翻译，必须在文中注明原作者及原文地址，并添加原文链接。</li></ol><h3><span id="维护">维护</span></h3><p>step1:</p><p>在blog文件的post下hexo new 文章</p><p><img src="%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E6%9D%82%E8%B0%88/article_img20240329162613.png" alt></p><p>step2：</p><p>写内容</p><p>step3：</p><p>部署到个人博客上</p><p>step4：</p><p>上传到各类博客网站上</p><hr><p>一个测试配图</p><ol><li>链接配图</li></ol><p>第一次显示不了：<img src="%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E6%9D%82%E8%B0%88/article_img20240329162137.png" alt></p><p>第二次：</p><p><img src="%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E6%9D%82%E8%B0%88/20240329171634.png" alt></p><ol start="2"><li>直接粘贴（显示不了）</li></ol><p><img src="%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0%E6%9D%82%E8%B0%88/image-20240329162222461-1711700550572-3.png" alt="image-20240329162222461"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Daily-24-03-16</title>
      <link href="/2024/03/16/Daily-24-03-16/"/>
      <url>/2024/03/16/Daily-24-03-16/</url>
      
        <content type="html"><![CDATA[<h1><span id="daily-24-03-16">Daily-24-03-16</span></h1><h2><span id="python-map函数">Python map()函数</span></h2><h3><span id="描述">描述</span></h3><p><strong>map()</strong> 会根据提供的函数对指定序列做映射。</p><p>第一个参数 function 以参数序列中的每一个元素调用 function 函数，返回包含每次 function 函数返回值的新列表。</p><h3><span id="语法">语法</span></h3><p>map() 函数语法：</p><pre><code>map(function, iterable, ...)</code></pre><h3><span id="参数">参数</span></h3><ul><li>function – 函数</li><li>iterable – 一个或多个序列</li></ul><h3><span id="返回值">返回值</span></h3><p>Python 2.x 返回列表。</p><p>Python 3.x 返回迭代器。</p><h3><span id="实例">实例</span></h3><p>以下实例展示了 map() 的使用方法：</p><h4><span id="python2x-实例">Python2.x 实例</span></h4><pre><code class="language-python"> def square(x) :       # 计算平方数...   return x ** 2... map(square, [1,2,3,4,5])  # 计算列表各个元素的平方[1, 4, 9, 16, 25] map(lambda x: x ** 2, [1, 2, 3, 4, 5]) # 使用 lambda 匿名函数[1, 4, 9, 16, 25]# 提供了两个列表，对相同位置的列表数据进行相加 map(lambda x, y: x + y, [1, 3, 5, 7, 9], [2, 4, 6, 8, 10])[3, 7, 11, 15, 19]</code></pre><h4><span id="python3x-实例">Python3.x 实例</span></h4><pre><code class="language-python"> def square(x) :         # 计算平方数...     return x ** 2...  map(square, [1,2,3,4,5])    # 计算列表各个元素的平方&lt;map object at 0x100d3d550&gt;     # 返回迭代器 list(map(square, [1,2,3,4,5]))   # 使用 list() 转换为列表[1, 4, 9, 16, 25] list(map(lambda x: x ** 2, [1, 2, 3, 4, 5]))   # 使用 lambda 匿名函数[1, 4, 9, 16, 25]</code></pre><h2><span id="python3中实现一行输入多个数字并进行赋值">Python3中实现一行输入多个数字并进行赋值</span></h2><ol><li><strong>input()和str.split()</strong><br>首先input()函数返回的是一个字符串，如果你需要的不是数字，而是赋值字符串的话，你可以这样写：a,b,c = input().split()<br>具体解释如下</li></ol><pre><code class="language-python">a = input()   # input()返回的是字符串121332a'121332'  # 返回的是字符串#所以要多个赋值的话，需要对字符串进行分割，并返回列表，再进行赋值#我们采用str.split()方法进行分割，返回列表，如果不给出str.split()参数，默认是空格切割 f = 'abcdabcdabcd' f.split('c')  # 以字符‘c'为切割标志，返回一个列表 ['ab', 'dab', 'dab', 'd']最后就是多重赋值了，a,b,c = ['1','2','3'] 相当于 a = '1'; b = '2'; c = '3' a,b,c = input().split() 1 2 3  print(a,b,c) 1 2 3</code></pre><ol start="2"><li><strong>map(fun,seq)和列表推导式</strong><br>接下来解决我们的问题，要变为数字赋值，解决方案也比较简单，就是把字符串变为int。<br>这里给出两种方法：</li></ol><p><strong>方法一</strong>：利用map(fun,seq)函数（推荐）<br>a,b,c = map(int, input().split())<br>map(fun,seq)方法简单的说就是用fun这个功能函数去依次作用于序列seq中的每个元素，然后返回一个可迭代对象。</p><pre><code class="language-python"> a,b,c = map(int, input().split()) 1 2 3 print(a,b,c) 1 2 3</code></pre><p><strong>方法二</strong>：利用列表推导式<br>a, b,c = [int(x) for x in input().split()]<br>简单的解释这个列表推导式就是把input().split()返回的列表中的每一个元素通过遍历，依次用int()函数处理。</p><pre><code class="language-python"> a, b,c = [int(x) for x in input().split()] 1 2 3 print(a,b,c) 1 2 3</code></pre><p>注意以上的int,int()都可以用其他需要的数据类型替代，如float,float()等。</p><p><a href="https://blog.csdn.net/qq_27283619/article/details/88832064">https://blog.csdn.net/qq_27283619/article/details/88832064</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTA-甲级-1001</title>
      <link href="/2024/03/16/PTA-%E7%94%B2%E7%BA%A7-1001/"/>
      <url>/2024/03/16/PTA-%E7%94%B2%E7%BA%A7-1001/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Daily_24_03_15</title>
      <link href="/2024/03/15/2024-03-15md/"/>
      <url>/2024/03/15/2024-03-15md/</url>
      
        <content type="html"><![CDATA[<h1><span id="24-03-15">24-03-15</span></h1><h2><span id="frame-skipped-from-debugging-during-step-in-note-may-have-been-skipped-because-of-justmycode">Frame skipped from debugging during step-in. Note: may have been skipped because of “justMyCode“</span></h2><p>python无法step into调试的代码</p><pre><code class="language-python">Frame skipped from debugging during step-in.Note: may have been skipped because of &quot;justMyCode&quot; option (default == true). Try setting &quot;justMyCode&quot;: false in the debug configuration (e.g., launch.json).</code></pre><p>看到CSDN教程里说</p><blockquote><p>就是说我们在调试过程中点击单步进入时并没有跳到别的库（该行代码调用的方法所在的包）中，而是直接跳到我们写的代码的下一行了。原因就是launch.json文件中有一项justMyCode 默认为true，即只在我们写的代码中调试，所以我们把它改为false即可。</p></blockquote><p>然后我一看，我没有launch.json ……</p><p>查了一下要打开工作区然后选择合适的debugger来生成。唔，所以launch.json到底是干啥用的？</p><h2><span id="launchjson">launch.json</span></h2><p>launch.json是vscode用于调试的配置文件，比如指定调试语言环境，指定调试类型等等。我们第一次运行程序的时候，就可以选择让vscode自动帮我们创建出来。我们这里以调试node.js环境为例。</p><ul><li>点击debug时会有一个create a launch.json的链接。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c9d06bf31a144159b32549270657805~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"></p><ul><li>根据我们的环境选择Node.js</li></ul><p>vscode创建好之后会把这个文件放入.vscode文件目录下。所以需要有一个.vscode在的工作区，也就是要先打开一个文件夹。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f0abdd8f38894db1936e2ffbf842c525~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="img"></p><p>其中&quot;type&quot;，“request”，&quot;name&quot;这三个是必须要配置的，不管你用什么编程环境。<br>type指定编程环境，比如node，php，java我们这里是node<br>request指定调试模式，vscode只有两种调试模式，launch和attach<br>name给配置项起一个名字。launch.json是一个configurations，里面可以有很多个配置，这里的name就是配置的名字。</p><ul><li>接下来再说说launch和attach的区别：</li></ul><p>以launch方式启动的时候，vscode直接从本地项目启动并自动的为我们自动添加一个调试器，这也是为什么我们能在launch模式下打断点的原因。这是我们最经常用的。<br>而想以attach方式启动，通常需要一个已经在跑的项目，比如一个web服务，这个服务很可能是在远程或者在本地但是重启速度很慢的那种项目，因为这个web服务<br>是在远程的我们没法打断点，但是可以通过attach启动的方式在这个远程的服务外面包裹一层调试器，达到调试的目的。</p><p>我们这里也演示一个demo创建一个server：</p><pre><code class="language-ini">const http = require(&quot;http&quot;);const server = http.createServer((req,res) =&gt; &#123;   res.end(&quot;hello world&quot;); &#125;);server.listen(3000,() =&gt; &#123;    console.log(&quot;Server is listening on 3000 port&quot;);&#125;);</code></pre><p>以launch方式启动，非常简单，点击左上角那个Launch Program就可以了。</p><p>接下来详细说一下用attach启动。首先我们要先加一个attach启动的配置项。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10bcc0ad04504dd0a1a4ca89a5ba385d~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b535e1639064b5880877eec89b1dca4~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="img"></p><p>选择右边的add configuration，然后新增一个Attach by Process ID，这个配置项就被添加好了。</p><p>接着我们要先从终端启动这个web。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/901b073f6a624897843c0b0ea50bb149~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6e68df4a5ef84575bee4d899bcec563c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="img"></p><p>终端启动后之后，在启动左上角的那个<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d5322c0b1fc943c9b823797cb4ce4e70~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"></p><p>然后就可以调试了。这种就是虽然以第三方终端启动的，但是还是可以通过attach方式来调试。</p><h2><span id="reference">Reference</span></h2><ol><li><a href="https://juejin.cn/post/7063655822965866527">稀土掘金</a></li><li>[CSDN](<a href="https://blog.csdn.net/qq_16792139/article/details/128868074">Frame skipped from debugging during step-in. Note: may have been skipped because of “justMyCode“-CSDN博客</a>)</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Daily_24_03_15</title>
      <link href="/2024/03/15/Daily-24-03-15/"/>
      <url>/2024/03/15/Daily-24-03-15/</url>
      
        <content type="html"><![CDATA[<h1><span id="24-03-15">24-03-15</span></h1><h2><span id="frame-skipped-from-debugging-during-step-in-note-may-have-been-skipped-because-of-justmycode">Frame skipped from debugging during step-in. Note: may have been skipped because of “justMyCode“</span></h2><p>python无法step into调试的代码</p><pre><code class="language-python">Frame skipped from debugging during step-in.Note: may have been skipped because of &quot;justMyCode&quot; option (default == true). Try setting &quot;justMyCode&quot;: false in the debug configuration (e.g., launch.json).</code></pre><p>看到CSDN教程里说</p><blockquote><p>就是说我们在调试过程中点击单步进入时并没有跳到别的库（该行代码调用的方法所在的包）中，而是直接跳到我们写的代码的下一行了。原因就是launch.json文件中有一项justMyCode 默认为true，即只在我们写的代码中调试，所以我们把它改为false即可。</p></blockquote><p>然后我一看，我没有launch.json ……</p><p>查了一下要打开工作区然后选择合适的debugger来生成。唔，所以launch.json到底是干啥用的？</p><h2><span id="launchjson">launch.json</span></h2><p>launch.json是vscode用于调试的配置文件，比如指定调试语言环境，指定调试类型等等。我们第一次运行程序的时候，就可以选择让vscode自动帮我们创建出来。我们这里以调试node.js环境为例。</p><ul><li>点击debug时会有一个create a launch.json的链接。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c9d06bf31a144159b32549270657805~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"></p><ul><li>根据我们的环境选择Node.js</li></ul><p>vscode创建好之后会把这个文件放入.vscode文件目录下。所以需要有一个.vscode在的工作区，也就是要先打开一个文件夹。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f0abdd8f38894db1936e2ffbf842c525~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="img"></p><p>其中&quot;type&quot;，“request”，&quot;name&quot;这三个是必须要配置的，不管你用什么编程环境。<br>type指定编程环境，比如node，php，java我们这里是node<br>request指定调试模式，vscode只有两种调试模式，launch和attach<br>name给配置项起一个名字。launch.json是一个configurations，里面可以有很多个配置，这里的name就是配置的名字。</p><ul><li>接下来再说说launch和attach的区别：</li></ul><p>以launch方式启动的时候，vscode直接从本地项目启动并自动的为我们自动添加一个调试器，这也是为什么我们能在launch模式下打断点的原因。这是我们最经常用的。<br>而想以attach方式启动，通常需要一个已经在跑的项目，比如一个web服务，这个服务很可能是在远程或者在本地但是重启速度很慢的那种项目，因为这个web服务<br>是在远程的我们没法打断点，但是可以通过attach启动的方式在这个远程的服务外面包裹一层调试器，达到调试的目的。</p><p>我们这里也演示一个demo创建一个server：</p><pre><code class="language-ini">const http = require(&quot;http&quot;);const server = http.createServer((req,res) =&gt; &#123;   res.end(&quot;hello world&quot;); &#125;);server.listen(3000,() =&gt; &#123;    console.log(&quot;Server is listening on 3000 port&quot;);&#125;);</code></pre><p>以launch方式启动，非常简单，点击左上角那个Launch Program就可以了。</p><p>接下来详细说一下用attach启动。首先我们要先加一个attach启动的配置项。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10bcc0ad04504dd0a1a4ca89a5ba385d~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b535e1639064b5880877eec89b1dca4~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="img"></p><p>选择右边的add configuration，然后新增一个Attach by Process ID，这个配置项就被添加好了。</p><p>接着我们要先从终端启动这个web。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/901b073f6a624897843c0b0ea50bb149~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6e68df4a5ef84575bee4d899bcec563c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="img"></p><p>终端启动后之后，在启动左上角的那个<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d5322c0b1fc943c9b823797cb4ce4e70~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"></p><p>然后就可以调试了。这种就是虽然以第三方终端启动的，但是还是可以通过attach方式来调试。</p><h2><span id="reference">Reference</span></h2><ol><li><a href="https://juejin.cn/post/7063655822965866527">稀土掘金</a></li><li>[CSDN](<a href="https://blog.csdn.net/qq_16792139/article/details/128868074">Frame skipped from debugging during step-in. Note: may have been skipped because of “justMyCode“-CSDN博客</a>)</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch入门</title>
      <link href="/2023/07/31/Pytorch/"/>
      <url>/2023/07/31/Pytorch/</url>
      
        <content type="html"><![CDATA[<h1><span id="pytorch入门">Pytorch入门</span></h1><h2><span id="概念浅谈">概念浅谈</span></h2><h3><span id="python">Python</span></h3><ol><li>安装包 pip install 包名</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>信电导_4bit加法器</title>
      <link href="/2023/04/22/%E4%BF%A1%E7%94%B5%E5%AF%BC-4bit%E5%8A%A0%E6%B3%95%E5%99%A8/"/>
      <url>/2023/04/22/%E4%BF%A1%E7%94%B5%E5%AF%BC-4bit%E5%8A%A0%E6%B3%95%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1><span id="4bit加法器">4bit加法器</span></h1><h2><span id="实验目的">实验目的</span></h2><p>4bit加法器是一种数字电路，用于将两个 4 bit的二进制数相加，生成一个 4 bit的和。实验目的如下：</p><p>（1）学习数字电路的基本概念和实现方法</p><p>（2）熟悉 4 bit加法器的设计和实现原理</p><p>（3）学会使用数字电路仿真工具模拟和验证电路的功能</p><p>（4）使用晶体管搭建一个4bit加法器电路</p><h2><span id="实验要求">实验要求</span></h2><p>下面是 4 bit加法器设计、仿真和实现的实验要求：</p><p>（1）利用三极管搭建逻辑门并进行仿真测试</p><p>（2）利用逻辑门搭建一位半加器并进行仿真测试</p><p>（3）在一位半加器的基础上搭建一位全加器并进行仿真测试</p><p>（4）利用一位全加器进行适当地级联，搭建 4­ bit加法器，并进行仿真测试</p><p>（5）进行实物搭建并测试，用 LED 灯的亮灭表示结果。亮表示 1，灭表示 0</p><p>（6）提交实物和实验报告</p><h2><span id="实验器材">实验器材</span></h2><p>三极管 100 只，1 kΩ 电阻 50 只，10 kΩ 电阻 100 只，发光管 5 只，电源 1 个，面包板 1 块，</p><p>USB 连接线 1 根，万用表 1 只，跳线若干，如图所示。</p><p><a href="https://imgtg.com/image/IoKqK"><img src="https://i.imgtg.com/2023/04/22/IoKqK.md.png" alt="IoKqK.md.png"></a></p><h2><span id="评分标准">评分标准</span></h2><p><a href="https://imgtg.com/image/IoZAa"><img src="https://i.imgtg.com/2023/04/22/IoZAa.md.png" alt="IoZAa.md.png"></a></p><h2><span id="实验原理">实验原理</span></h2><h3><span id="三极管">三极管</span></h3><p>利用三极管导通特性，我们可以用它来搭建简单的逻辑门电路。</p><p>这里推荐这篇文章的讲解<a href="https://www.codenong.com/cs105658784/">三极管等搭建逻辑门电路</a>。</p><p>其实到目前不需要太了解三极管的输入输出特性，到了模电会学到的，现在只要知道怎么用就行了~</p><h4><span id="非门">非门</span></h4><p><a href="https://imgtg.com/image/uSOoS"><img src="https://i.imgtg.com/2023/04/21/uSOoS.png" alt="uSOoS.png"></a></p><h4><span id="与门">与门</span></h4><p><a href="https://imgtg.com/image/uSTtX"><img src="https://i.imgtg.com/2023/04/21/uSTtX.png" alt="uSTtX.png"></a></p><h4><span id="或门">或门</span></h4><pre><code>这个算是我自己创造的？hhhh~</code></pre><p><a href="https://imgtg.com/image/ucey1"><img src="https://i.imgtg.com/2023/04/21/ucey1.png" alt="ucey1.png"></a></p><p>可以看到这节点3的电压是由1-3路和2-3路决定的，只要有一路及以上是高电平，3节点也就是高电平。所以3的输出就是1-3路和2-3路取或的结果。</p><h3><span id="基础门电路">基础门电路</span></h3><p>数字电路中常见门电路有以下几种，其中最常用的是前三个“与门”“或门”“非门”</p><p><a href="https://imgtg.com/image/uQtyp"><img src="https://i.imgtg.com/2023/04/21/uQtyp.png" alt="uQtyp.png"></a></p><p>在搭整个4bit加法器电路之前，我们先要分析需要利用什么样的逻辑电路。首先要搭4bit，我们先考虑搭1bit的加法器；我们知道加法会产生进位，所以要考虑该位计算好后的进位；另外，除了第0位外，还要考虑低一位的进位。因此，4bit加法器应该是由一个半加器和三个全加器组成的。我们分析半加器和全加器的逻辑真值表</p><p><a href="https://imgtg.com/image/IOHJt"><img src="https://i.imgtg.com/2023/04/22/IOHJt.png" alt="IOHJt.png"></a><a href="https://imgtg.com/image/IOLlx"><img src="https://i.imgtg.com/2023/04/22/IOLlx.md.png" alt="IOLlx.md.png"></a></p><p>得到它们的逻辑表达式：</p><p>半加器：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">S = A ⊕ B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mi>A</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">C = AB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p><p>全加器：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo>⊕</mo><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S = A ⊕ B ⊕ C_{in}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo stretchy="false">)</mo><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>+</mo><mi>A</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">C_{out} = (A ⊕ B)C_{in} + AB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p><p>我们看到，异或运算是最常用的，所以在下面的电路搭建前，要尽可能化简异或门的电路，这样能尽可能少地使用晶体管。</p><h3><span id="1bit半加器">1bit半加器</span></h3><p>1bit半加器是一种数字电路，可以将两个二进制位相加并生成一个二进制位的和和一个进位位。<br>根据上面的分析，我们需要实现异或门。观察常见门电路的逻辑真值表，最自然的想法是<strong>与门取非后同或门取与</strong>。它的逻辑表达式为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo>=</mo><mover accent="true"><mrow><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">‾</mo></mover><mo stretchy="false">(</mo><mi>A</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S = A ⊕ B= \overline{(AB)}(A+B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2000000000000002em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9500000000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span><span style="top:-3.87em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></span></p><p><a href="https://imgtg.com/image/IMtm1"><img src="https://i.imgtg.com/2023/04/22/IMtm1.jpg" alt="IMtm1.jpg"></a></p><p>接下来考虑进位的实现，类似的，我们发现可以直接用与门得到进位的结果。</p><p>逻辑表达式：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mi>A</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">C = AB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p><p>逻辑电路符号</p><p><a href="https://imgtg.com/image/IM4VI"><img src="https://i.imgtg.com/2023/04/22/IM4VI.jpg" alt="IM4VI.jpg"></a></p><p>综合两者，则我们能得到这样的一个，拥有两bit输入，计算出1bit本位和1bit进位的半加器。</p><p>逻辑表达式：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo>=</mo><mover accent="true"><mtext>(AB)</mtext><mo stretchy="true">‾</mo></mover><mo stretchy="false">(</mo><mi>A</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S = A ⊕ B= \overline{\text{(AB)}}(A+B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2000000000000002em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9500000000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(AB)</span></span></span></span><span style="top:-3.87em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mi>A</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">C = AB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p><p>逻辑电路：</p><p><a href="https://imgtg.com/image/IMHqD"><img src="https://i.imgtg.com/2023/04/22/IMHqD.jpg" alt="IMHqD.jpg"></a></p><p>但是我们看到，使用的晶体管数量较大，一个半加器就用了2+1+2+2=9个，若考虑全加器，那总数至少60+，这样首先损耗会很大，其次搭建麻烦，debug会很难，再者给的面包板显然搭不下。所以我们考虑简化电路，减少晶体管的数量。</p><p>进位的计算已经很简便了，只用了两个晶体管，我们考虑本位的化简。</p><p>可以看到计算sum和carry都用了与门，所以可以考虑与门①和与门②共用。但是与门③不能再省掉了，这样一共要用5个三极管。</p><p><a href="https://imgtg.com/image/IMYYK"><img src="https://i.imgtg.com/2023/04/22/IMYYK.md.jpg" alt="IMYYK.md.jpg"></a></p><p>搭出来第一个较为简化的半加器后，我也有了信心去继续化简。这时我在想，电路中尽可能少用与门，尽可能用或门应该可以让电路更加简化，因为与门需要2个晶体管，非门要1一个，而或门不需要晶体管。于是继续观察门电路的真值表，我发现，可以用<strong>或非门或上与门再取非</strong>，同样与门可以共用，这样就是0+1+2+0+1=4个晶体管，减少掉一个也是进步了！</p><p>于是逻辑表达式为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo>=</mo><mover accent="true"><mrow><mover accent="true"><mrow><mi>A</mi><mo>+</mo><mi>B</mi></mrow><mo stretchy="true">‾</mo></mover><mo>+</mo><mi>A</mi><mi>B</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">S = A ⊕ B=\overline{\overline{A+B}+AB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.16666em;vertical-align:-0.08333em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08333em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-4.00333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08333em;"><span></span></span></span></span></span></span></span></span></span></p><p>最终的逻辑电路是这样的：</p><p><a href="https://imgtg.com/image/IMjSN"><img src="https://i.imgtg.com/2023/04/22/IMjSN.jpg" alt="IMjSN.jpg"></a></p><h3><span id="1bit全加器">1bit全加器</span></h3><p>全加器就是在半加器的基础上，多一个低位的进位，所以就要在本位和进位的计算上考虑低一位的进位。因此，全加器是一种数字电路，可以将三个二进制位相加并生成一个二进制位的和和一个进位位。它的逻辑电路符号如下：</p><p><a href="https://imgtg.com/image/IMCpx"><img src="https://i.imgtg.com/2023/04/22/IMCpx.png" alt="IMCpx.png"></a></p><p>在“基础门电路”一节分析的基础上，我们得到全加器的逻辑表达式</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo>⊕</mo><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S = A ⊕ B ⊕ C_{in}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo stretchy="false">)</mo><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>+</mo><mi>A</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">C_{out} = (A ⊕ B)C_{in} + AB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p><p>再结合半加器的实现，我们可以将得到这样的仿真电路</p><h3><span id="4bit加法器">4bit加法器</span></h3><p>将半加器和三个全加器结合起来，本位的计算作为输出，低位进位作为下一位高位的进位输入即可。</p><h2><span id="仿真搭建">仿真搭建</span></h2><p>这里注意**不要一口气把整个加法器搭完！**要搭一小部分就测试一下，不然调bug有你苦头吃的！</p><h3><span id="与门">与门</span></h3><p>00</p><p><a href="https://imgtg.com/image/IOuOF"><img src="https://i.imgtg.com/2023/04/22/IOuOF.png" alt="IOuOF.png"></a></p><p>01</p><p><a href="https://imgtg.com/image/IOI76"><img src="https://i.imgtg.com/2023/04/22/IOI76.md.png" alt="IOI76.md.png"></a></p><p>10</p><p><a href="https://imgtg.com/image/IO3LP"><img src="https://i.imgtg.com/2023/04/22/IO3LP.png" alt="IO3LP.png"></a></p><p>11</p><p><a href="https://imgtg.com/image/IOCub"><img src="https://i.imgtg.com/2023/04/22/IOCub.png" alt="IOCub.png"></a></p><p>结果完全正确！</p><h3><span id="或门">或门</span></h3><p>00</p><p><a href="https://imgtg.com/image/IaMzl"><img src="https://i.imgtg.com/2023/04/22/IaMzl.md.png" alt="IaMzl.md.png"></a></p><p>01</p><p><a href="https://imgtg.com/image/IaOPg"><img src="https://i.imgtg.com/2023/04/22/IaOPg.md.png" alt="IaOPg.md.png"></a></p><p>10</p><p><a href="https://imgtg.com/image/Iaa9B"><img src="https://i.imgtg.com/2023/04/22/Iaa9B.md.png" alt="Iaa9B.md.png"></a></p><p>11</p><p><a href="https://imgtg.com/image/IaqTs"><img src="https://i.imgtg.com/2023/04/22/IaqTs.md.png" alt="IaqTs.md.png"></a></p><p>结果完全正确！</p><h3><span id="非门">非门</span></h3><p>略</p><h3><span id="异或门">异或门</span></h3><p>00</p><p><a href="https://imgtg.com/image/IaBda"><img src="https://i.imgtg.com/2023/04/22/IaBda.md.png" alt="IaBda.md.png"></a></p><p>01</p><p><a href="https://imgtg.com/image/IaWNN"><img src="https://i.imgtg.com/2023/04/22/IaWNN.md.png" alt="IaWNN.md.png"></a></p><p>10</p><p><a href="https://imgtg.com/image/IabLC"><img src="https://i.imgtg.com/2023/04/22/IabLC.md.png" alt="IabLC.md.png"></a></p><p>11</p><p><a href="https://imgtg.com/image/IakuL"><img src="https://i.imgtg.com/2023/04/22/IakuL.md.png" alt="IakuL.md.png"></a></p><p>结果完全正确！</p><h3><span id="1bit半加器">1bit半加器</span></h3><p>仿真电路如图</p><p><a href="https://imgtg.com/image/IM2CC"><img src="https://i.imgtg.com/2023/04/22/IM2CC.md.png" alt="IM2CC.md.png"></a></p><p>00</p><p><a href="https://imgtg.com/image/IaKIq"><img src="https://i.imgtg.com/2023/04/22/IaKIq.md.png" alt="IaKIq.md.png"></a></p><p>01</p><p><a href="https://imgtg.com/image/IavFc"><img src="https://i.imgtg.com/2023/04/22/IavFc.md.png" alt="IavFc.md.png"></a></p><p>10</p><p><a href="https://imgtg.com/image/IayRr"><img src="https://i.imgtg.com/2023/04/22/IayRr.md.png" alt="IayRr.md.png"></a></p><p>11</p><p><a href="https://imgtg.com/image/IagjM"><img src="https://i.imgtg.com/2023/04/22/IagjM.md.png" alt="IagjM.md.png"></a></p><p>在这里我们看到，进位的电平从5V-&gt;3.77V，有了明显的下降，这样容易使得后面几个全加器的运算不准，所以要考虑升一下电平。这里我采取的是通过两个非门拉高电平。（其实在半加器这里我最终没有这样做，因为半加器只有一个，电平降低的影响不大，还要多用俩晶体管，所以我只拉高了全加器进位的电平）</p><p>结果完全正确！</p><h3><span id="1bit全加器">1bit全加器</span></h3><p>根据全加器的逻辑表达式，我们可以直接得到下面的仿真电路：</p><p><a href="https://imgtg.com/image/IOQZp"><img src="https://i.imgtg.com/2023/04/22/IOQZp.md.png" alt="IOQZp.md.png"></a></p><p>但是这里求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{out}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的与门实在太丑了，所以我转了一下：</p><p><a href="https://imgtg.com/image/IaJy1"><img src="https://i.imgtg.com/2023/04/22/IaJy1.md.png" alt="IaJy1.md.png"></a></p><p>仿真的时候发现进位电平降得很厉害</p><p><a href="https://imgtg.com/image/IaPdI"><img src="https://i.imgtg.com/2023/04/22/IaPdI.md.png" alt="IaPdI.md.png"></a></p><p>并且这个进位还要作为下一位的输入，所以必须考虑拉高电平。按照之前的分析，我们用两个非门拉高电平：</p><p><a href="https://imgtg.com/image/IataD"><img src="https://i.imgtg.com/2023/04/22/IataD.md.png" alt="IataD.md.png"></a></p><p>这样进位电平足够了~</p><p>测试结果如下：</p><p>有低位进位：</p><p>00</p><p><a href="https://imgtg.com/image/Ia4eF"><img src="https://i.imgtg.com/2023/04/22/Ia4eF.md.png" alt="Ia4eF.md.png"></a></p><p>01</p><p><a href="https://imgtg.com/image/IaDE6"><img src="https://i.imgtg.com/2023/04/22/IaDE6.md.png" alt="IaDE6.md.png"></a></p><p>10</p><p><a href="https://imgtg.com/image/IaHIP"><img src="https://i.imgtg.com/2023/04/22/IaHIP.md.png" alt="IaHIP.md.png"></a></p><p>11</p><p><a href="https://imgtg.com/image/IaEhb"><img src="https://i.imgtg.com/2023/04/22/IaEhb.md.png" alt="IaEhb.md.png"></a></p><p>无低位进位：</p><p>00</p><p><a href="https://imgtg.com/image/IaGRl"><img src="https://i.imgtg.com/2023/04/22/IaGRl.md.png" alt="IaGRl.md.png"></a></p><p>01</p><p><a href="https://imgtg.com/image/IaQjg"><img src="https://i.imgtg.com/2023/04/22/IaQjg.md.png" alt="IaQjg.md.png"></a></p><p>10</p><p><a href="https://imgtg.com/image/Ia0WB"><img src="https://i.imgtg.com/2023/04/22/Ia0WB.md.png" alt="Ia0WB.md.png"></a></p><p>11</p><p><a href="https://imgtg.com/image/Iacys"><img src="https://i.imgtg.com/2023/04/22/Iacys.md.png" alt="Iacys.md.png"></a></p><p>结果完全正确！</p><h3><span id="2bit加法器">2bit加法器</span></h3><p>搭一个2bit的测试一下。整体电路如下</p><p><a href="https://imgtg.com/image/IaYeS"><img src="https://i.imgtg.com/2023/04/22/IaYeS.md.png" alt="IaYeS.md.png"></a></p><p>随机测试三组数据，万用表示数从上到下是输出结果从低位到高位</p><p>10+11</p><p><a href="https://imgtg.com/image/IajhL"><img src="https://i.imgtg.com/2023/04/22/IajhL.md.png" alt="IajhL.md.png"></a></p><p>转化成数字，计算结果为101，正确</p><p>00+01</p><pre><code>[![Ia2ti.md.png](https://i.imgtg.com/2023/04/22/Ia2ti.md.png)](https://imgtg.com/image/Ia2ti)</code></pre><p>转化成数字，计算结果为001，正确</p><p>11+11</p><pre><code>[![Ia6jX.md.png](https://i.imgtg.com/2023/04/22/Ia6jX.md.png)](https://imgtg.com/image/Ia6jX)</code></pre><p>转化成数字，计算结果为110，正确</p><p>结果完全正确！</p><h3><span id="4bit加法器">4bit加法器</span></h3><p>整体电路如下</p><p><a href="https://imgtg.com/image/IadsK"><img src="https://i.imgtg.com/2023/04/22/IadsK.md.png" alt="IadsK.md.png"></a></p><p><a href="https://imgtg.com/image/IaVoa"><img src="https://i.imgtg.com/2023/04/22/IaVoa.md.png" alt="IaVoa.md.png"></a></p><p>随机测试三组数据，万用表示数从上到下是输出结果从低位到高位</p><p>1111+1111</p><p><a href="https://imgtg.com/image/IaCop"><img src="https://i.imgtg.com/2023/04/22/IaCop.md.png" alt="IaCop.md.png"></a></p><p><a href="https://imgtg.com/image/IoO3v"><img src="https://i.imgtg.com/2023/04/22/IoO3v.md.png" alt="IoO3v.md.png"></a></p><p>即输出结果为11110，结果正确！</p><p>0101+1101</p><p><a href="https://imgtg.com/image/Ioqtc"><img src="https://i.imgtg.com/2023/04/22/Ioqtc.md.png" alt="Ioqtc.md.png"></a></p><p><a href="https://imgtg.com/image/Io52r"><img src="https://i.imgtg.com/2023/04/22/Io52r.md.png" alt="Io52r.md.png"></a></p><p>即输出结果为10010，结果正确！</p><p>0010+0011</p><pre><code>[![IoUgG.md.png](https://i.imgtg.com/2023/04/22/IoUgG.md.png)](https://imgtg.com/image/IoUgG)</code></pre><p><a href="https://imgtg.com/image/IoWV1"><img src="https://i.imgtg.com/2023/04/22/IoWV1.md.png" alt="IoWV1.md.png"></a></p><p>即输出结果为00101，结果正确！</p><p>综上，结果完全正确！</p><p>接下来就可以按照仿真电路图来搭建实物电路。</p><h2><span id="实物搭建">实物搭建</span></h2><h3><span id="面包板的使用">面包板的使用</span></h3><p>说实话我一开始都不知道面包板咋用呜呜呜，后来查了一下发现是这样的，下图画线部分是连通的，五格为一组。</p><p><a href="https://imgtg.com/image/IoF36"><img src="https://i.imgtg.com/2023/04/22/IoF36.md.png" alt="IoF36.md.png"></a></p><p>同样，老师给的面包板上最上方两行也是各自连通的。</p><p><a href="https://imgtg.com/image/IoiiP"><img src="https://i.imgtg.com/2023/04/22/IoiiP.md.jpg" alt="IoiiP.md.jpg"></a></p><p>所以连通部分就不需要导线连接了。另外，也**不能把元件插在同一组的五格！**不然就被短路掉力！</p><h3><span id="电源的使用">电源的使用</span></h3><p><a href="https://imgtg.com/image/Ion4b"><img src="https://i.imgtg.com/2023/04/22/Ion4b.md.png" alt="Ion4b.md.png"></a></p><p>输入：USB接口，DC6.5V~12V</p><p>输出：两组电源输出，高电平可选3.3V或5V，低电平为0V，即接地</p><p>其他：开关打开则有电压输出，并且指示灯亮</p><p>如图插在面包板上即可为其供电。</p><h3><span id="搭建的注意事项">搭建的注意事项</span></h3><p>实物搭建的思路仍然是**不要一口气把整个加法器搭完！**要搭一小部分就测试一下，不然调bug有你苦头吃的！（尤其是实体电路，深夜debug得想亖一亖 TAT）</p><p>另外，<strong>尽可能按照电路图的布局去搭</strong>，这样可以边跑仿真，根据某个节点的仿真输出，用万用表测该处的电压值，相对比较容易找错误就比较方便。不过缺点就是排线会很多，眼睛容易看花搭错。</p><p>老师给的面包板经历了三年的摧残，板孔特别松，而且电阻的引脚还特别细，经常容易接触不良，可以考虑<strong>多个电阻引脚直接插在一个孔里</strong>。（虽然有可能越插越大，但最方便的办法就这个了TAT，下一届也这样沿用或许就能催学校换板子了bushi）</p><p>总结下来有这些<strong>注意点</strong>：</p><ol><li>搭完一个小模块就测试一下</li><li>尽可能按电路图布局去搭建</li><li>搭的时候注意模块化搭建</li><li>多个引脚插一个孔</li><li>考虑用元件代替引线来节约排线</li><li>同样功能的引线用一个颜色</li><li>注意节省空间，尽可能紧凑</li></ol><h3><span id="错误快速排查">错误快速排查</span></h3><ol><li>保证电路接线没问题时，若输出错误，可以<strong>拍一拍或按一按</strong>元件和接线（嗯，就跟对待老式电视那样）</li><li>沿着错误输出一路测电平，测到错误后检查周围接线或按一按元件和接线</li></ol><h3><span id="部分搭建过程">部分搭建过程</span></h3><p>（因为是一个人搭，拍照很麻烦，所以只有几张照片TAT）</p><p><strong>半加器进位</strong></p><p><a href="https://imgtg.com/image/IoHqj"><img src="https://i.imgtg.com/2023/04/22/IoHqj.md.png" alt="IoHqj.md.png"></a></p><p><strong>电源连线</strong></p><p><a href="https://imgtg.com/image/IoLAp"><img src="https://i.imgtg.com/2023/04/22/IoLAp.md.png" alt="IoLAp.md.png"></a></p><p><strong>3bit加法器</strong></p><p><a href="https://imgtg.com/image/IoESU"><img src="https://i.imgtg.com/2023/04/22/IoESU.md.png" alt="IoESU.md.png"></a></p><p><strong>4bit输出</strong></p><p><a href="https://imgtg.com/image/Io4Yx"><img src="https://i.imgtg.com/2023/04/22/Io4Yx.md.png" alt="Io4Yx.md.png"></a></p><p><strong>5bit输出</strong></p><p><a href="https://imgtg.com/image/IoGCY"><img src="https://i.imgtg.com/2023/04/22/IoGCY.md.png" alt="IoGCY.md.png"></a></p><h2><span id="心得体会">心得体会</span></h2><p>这个加法器本来是三人一组的课程大作业，后来只有我一个人完成了全部。并且验收结果还挺好，所以按贡献比可能拿到250/100多分力hhhh。不过上限只有100，所以还是分类了一些贡献比给“组员”。我一共投入了20+个小时完成。过程虽然很麻烦，但是学到了很多~</p><ol><li>将一个实际的问题抽象成逻辑电路，再通过逻辑电路搭建一个实体电路，实现目标功能，这样的过程很锻炼动手操作的能力。也算是一段项目经历了。</li><li>大作业也是很锻炼毅力和耐心的。过程中遇到了无数问题，一开始面包板和电源都不会用（可能也是因为我没上过课TAT）后面搭仿真电路也遇到输出和想象中相反，电阻选取不合适等问题，最后加法器的搭建更是问题百出，因为不知道是接线错了，还是解除不良，或是电阻看错了，电压的测试结果也百思不得其解。最后还是一个个克服了这些问题，“坚韧不拔”地完成了大作业hhhh（因为一开始就相信自己肯定能搭完的hhhh）。完成的时候是凌晨一两点，距离验收只有六七个小时了，但是也真的很佩服自己能不受ddl的压迫，沉住气把加法器搭完，还是增长了很多自信的。</li><li>大作业完成的过程也提醒我下次要合理安排长期任务了。作业发布没几天我就把仿真搭完了，觉得电路搭一下很方便的，加上其他事情也很多，一直拖到验收前两天才开始搭实体电路。第二天早上8点要验收，我前一天2点睡，5点起来搭，一直搭到第二天2点，7：30起床飞奔到实验室，各种输出又全乱了，于是继续调了一个小时bug，最后终于成功验收了。虽然完成了，但完成的过程很紧迫狼狈TAT，以后确实要考虑一下更合理分配时间了。</li><li>最后验收，同学们知道我一个人搭电路都说“tql！”“我给你互评满分！”老师也对我表示了赞许，也满足了我一些虚荣心吧hhh</li></ol><p>总之，真正学到东西的感觉好棒！</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加法器 </tag>
            
            <tag> 大作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香农班_研讨课01</title>
      <link href="/2023/04/15/%E9%A6%99%E5%86%9C%E7%8F%AD-%E7%A0%94%E8%AE%A8%E8%AF%BE01/"/>
      <url>/2023/04/15/%E9%A6%99%E5%86%9C%E7%8F%AD-%E7%A0%94%E8%AE%A8%E8%AF%BE01/</url>
      
        <content type="html"><![CDATA[<h1><span id="香农班_研讨课01">香农班_研讨课01</span></h1><h2><span id="01">01</span></h2><h3><span id="集成电路产业链">集成电路产业链</span></h3><ol><li>芯片设计</li><li>晶元生产<ol><li>卡脖子</li></ol></li><li>芯片封装</li><li>芯片测试</li></ol><h3><span id="晶体管">晶体管</span></h3><ol><li>摩尔定律</li><li>逻辑器件工艺节点<ol><li>尺度较大时，栅极长度和工艺节点长有关</li><li>尺度小时，……无关</li></ol></li><li>长沟道VS短沟道晶体管<ol><li>沟道变短，势垒变小，器件无法关断</li><li>耗尽层和漏极之间形成电容，与栅极电容串联</li></ol></li><li>逻辑器件瓶颈<ol><li>35nm后器件无法微缩</li><li>掺杂的不确定性</li></ol></li><li>逻辑器件结构创新<ol><li>FinFET解决<ol><li>40nm沟道长度</li><li>不需要掺杂</li><li>电学特性<ol><li>沟道长度=2*FinHeight+FinWidth</li></ol></li><li></li></ol></li><li>FinFET VS UTBSOI<ol><li>【p】</li></ol></li><li>半导体结构发展<ol><li>【p】<ol><li>第四种：不能用硅了，2D材料石墨烯</li><li></li></ol></li></ol></li><li></li></ol></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端_字节青训营_开班课</title>
      <link href="/2023/04/12/%E5%89%8D%E7%AB%AF-%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5-%E5%BC%80%E7%8F%AD%E8%AF%BE/"/>
      <url>/2023/04/12/%E5%89%8D%E7%AB%AF-%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5-%E5%BC%80%E7%8F%AD%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<h1><span id="前端_-字节青训营_开班课">前端_ 字节青训营_开班课</span></h1><h2><span id="必备技能">必备技能</span></h2><p><a href="https://juejin.cn/post/7091128161663975437/">https://juejin.cn/post/7091128161663975437/</a></p><h2><span id="掘金社区">掘金社区</span></h2><ol><li><p>浏览器插件</p><blockquote><p>浏览器改成google</p></blockquote></li><li><p>码上掘金</p></li></ol><h2><span id="qampa">Q&amp;A</span></h2><ol><li>复盘（习惯要提上来了）</li><li>生活有变动要及时调整日程表！！！</li><li>户外训练提上日程</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数电_组合逻辑</title>
      <link href="/2023/04/05/%E6%95%B0%E7%94%B5-%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91/"/>
      <url>/2023/04/05/%E6%95%B0%E7%94%B5-%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<h1><span id="数电_组合逻辑">数电_组合逻辑</span></h1><h2><span id="编码器">编码器</span></h2><h3><span id="优先编码器">优先编码器</span></h3><p>同时输入两个以上信号，根据优先级输出</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405091001425.png" alt="image-20230405091001425"></p><p><strong>EO</strong>：使能输出端</p><p><strong>GS</strong>：优先编码工作标志</p><p><strong>EI</strong>：使能端</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405091521170.png" alt="image-20230405091521170"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405091535469.png" alt="image-20230405091535469"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405091549266.png" alt="image-20230405091549266"></p><h4><span id="工作实例">工作实例</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405091720273.png" alt="image-20230405091720273"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405091753965.png" alt="image-20230405091753965"></p><blockquote><p>左边EO为高电平时，左边编码器处于工作状态，而此时右边编码器的EI也为高电平，输入使能无效，因此不工作；反之亦然。综上，两个编码器级联即可实现优先编码，优先级不会冲突。</p></blockquote><h2><span id="译码器">译码器</span></h2><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405095019988.png" alt="image-20230405095019988"></p><h4><span id="n变量的香农展开定理">N变量的香农展开定理</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405095123411.png" alt="image-20230405095123411"></p><h2><span id="比较器">比较器</span></h2><p>略</p><h3><span id="加法器">加法器</span></h3><h4><span id="半加器">半加器</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405100011204.png" alt="image-20230405100011204"></p><p>不考虑低位进位</p><h4><span id><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405100115631.png" alt="image-20230405100115631"></span></h4><h2><span id="全加器">全加器</span></h2><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405100125059.png" alt="image-20230405100125059"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405100211966.png" alt="image-20230405100211966"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405100346300.png" alt="image-20230405100346300"></p><h4><span id="全减器">全减器</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405101735715.png" alt="image-20230405101735715"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405100816703.png" alt="image-20230405100816703"></p><p>将借位取反，利用全加器实现全减器</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405101012816.png" alt="image-20230405101012816"></p><p><strong>举例</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405101454204.png" alt="image-20230405101454204"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405101531376.png" alt="image-20230405101531376"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405101543348.png" alt="image-20230405101543348"></p><h2><span id="数据选择器">数据选择器</span></h2><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405105820106.png" alt="image-20230405105820106"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405105852230.png" alt="image-20230405105852230"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405105906896.png" alt="image-20230405105906896"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405110008351.png" alt="image-20230405110008351"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405110211820.png" alt="image-20230405110211820"></p><h4><span id="数据选择器实现全加器">数据选择器实现全加器</span></h4><ol><li>8选1</li></ol><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405110400039.png" alt="image-20230405110400039"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405110421943.png" alt="image-20230405110421943"></p><ol start="2"><li>4选1</li></ol><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405110632367.png" alt="image-20230405110632367"></p><h2><span id="组合逻辑">组合逻辑</span></h2><h3><span id="竞争与冒险">竞争与冒险</span></h3><h4><span id="是什么">是什么</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405110828263.png" alt="image-20230405110828263"></p><p>系统内部产生的噪声</p><ul><li><strong>对任何一个门电路，只要他的两个输入同时向相反方向变化，就有可能产生干扰脉冲</strong></li><li>Y = A + A’    Y = A · A’</li></ul><h3><span id="为什么">为什么</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405111112446.png" alt="image-20230405111112446"></p><h3><span id="怎么样">怎么样</span></h3><h4><span id="静态冒险">静态冒险</span></h4><ol><li>1冒险</li></ol><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405111242696.png" alt="image-20230405111242696"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405111255518.png" alt="image-20230405111255518"></p><ol><li>0冒险</li></ol><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405111323117.png" alt="image-20230405111323117"></p><h3><span id="怎么办">怎么办</span></h3><p>冒险的检查</p><ul><li>代数法</li></ul><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405111418887.png" alt="image-20230405111418887"></p><p>举例</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405111548963.png" alt="image-20230405111548963"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405111704406.png" alt="image-20230405111704406"></p><h2><span id="组合逻辑">组合逻辑</span></h2><h3><span id="设计">设计</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405172911043.png" alt="image-20230405172911043"></p><p>例题</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405182819737.png" alt="image-20230405182819737"></p><h2><span id="时序逻辑">时序逻辑</span></h2><h3><span id="锁存器">锁存器</span></h3><h4><span id="s-r锁存器">S-R锁存器</span></h4><p><strong>锁存器和触发器的区别</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405183347823.png" alt="image-20230405183347823"></p><p><strong>电路结构</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406000939627.png" alt="image-20230406000939627"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406001032078.png" alt="image-20230406001032078"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406001048027.png" alt="image-20230406001048027"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406001104156.png" alt="image-20230406001104156"></p><h4><span id="真值表">真值表</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406001456639.png" alt="image-20230406001456639"></p><h4><span id="状态转换图">状态转换图</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406001812191.png" alt="image-20230406001812191"></p><h4><span id="驱动表">驱动表</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406001842765.png" alt="image-20230406001842765"></p><h4><span id="特性表">特性表</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406001934947.png" alt="image-20230406001934947"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406001946452.png" alt="image-20230406001946452"></p><p><strong>为什么要约束？</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406002544983.png" alt="image-20230406002544983"></p><p>发热辐射等其他原因影响下，可能会有延迟，导致输出不确定</p><h4><span id="sr锁存器">S’R’锁存器</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003316563.png" alt="image-20230406003316563"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003409035.png" alt="image-20230406003409035"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003451380.png" alt="image-20230406003451380"></p><p><strong>具有使能端的SR锁存器</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003548493.png" alt="image-20230406003548493"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003558120.png" alt="image-20230406003558120"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003603804.png" alt="image-20230406003603804"></p><p><strong>真值表</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003616129.png" alt="image-20230406003616129"></p><p><strong>存在问题</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003650102.png" alt="image-20230406003650102"></p><p>只希望在时钟打开时只翻一次</p><h4><span id="主从式sr触发器">主从式SR触发器</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003719361.png" alt="image-20230406003719361"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003813921.png" alt="image-20230406003813921"></p><p>在时钟一个变化周期内只改变一次</p><h4><span id="d锁存器">D锁存器</span></h4><p><strong>保证RS=0</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406003951718.png" alt="image-20230406003951718"></p><blockquote><p>可是这样不是没有R=0,S=0的情况了吗</p></blockquote><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406004207599.png" alt="image-20230406004207599"></p><p>D锁存器特性表/透明锁存器</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406004254900.png" alt="image-20230406004254900"></p><p><strong>存在问题</strong></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406004437201.png" alt="image-20230406004437201"></p><h4><span id="边沿触发式d触发器">边沿触发式D触发器</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230406004513316.png" alt="image-20230406004513316"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230412142623681.png" alt="image-20230412142623681"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230412143559989.png" alt="image-20230412143559989"></p><h2><span id="寄存器">寄存器</span></h2>]]></content>
      
      
      <categories>
          
          <category> 数电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数电 </tag>
            
            <tag> 组合逻辑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADS_02</title>
      <link href="/2023/03/09/ADS-02/"/>
      <url>/2023/03/09/ADS-02/</url>
      
        <content type="html"><![CDATA[<h1><span id="ads_02">ADS_02</span></h1><h2><span id="red-black-tree">Red-Black Tree</span></h2><h3><span id="definition">Definition</span></h3><p><a href="https://imgtg.com/image/YSKwI"><img src="https://i.imgtg.com/2023/03/09/YSKwI.md.png" alt="YSKwI.md.png"></a></p><h4><span id="black-height">black-height</span></h4><p>N nodes has height at most 2ln(N+1)</p><h3><span id="insert">Insert</span></h3><p>insert&amp;color red</p><h4><span id="case1">case1</span></h4><p>black parent</p><h4><span id="case2">case2</span></h4><p><a href="https://imgtg.com/image/YScJL"><img src="https://i.imgtg.com/2023/03/09/YScJL.png" alt="YScJL.png"></a></p><h4><span id="case3">case3</span></h4><p><a href="https://imgtg.com/image/YSdli"><img src="https://i.imgtg.com/2023/03/09/YSdli.png" alt="YSdli.png"></a></p><h4><span id="case4">case4</span></h4><p><a href="https://imgtg.com/image/YSVBX"><img src="https://i.imgtg.com/2023/03/09/YSVBX.png" alt="YSVBX.png"></a></p><h4><span id="summary">summary</span></h4><p><a href="https://imgtg.com/image/YSfcx"><img src="https://i.imgtg.com/2023/03/09/YSfcx.md.png" alt="YSfcx.md.png"></a></p><p>O(lnN)</p><blockquote><p>Note: pseudo code in book</p></blockquote><h3><span id="delete">Delete</span></h3><h4><span id="case-1">Case 1</span></h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PTA_Advanced_1006</title>
      <link href="/2023/03/03/PTA-Advanced-1006/"/>
      <url>/2023/03/03/PTA-Advanced-1006/</url>
      
        <content type="html"><![CDATA[<p><a href="https://imgtg.com/image/VY9rX"><img src="https://i.imgtg.com/2023/03/03/VY9rX.md.png" alt="VY9rX.md.png"></a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ADS_01</title>
      <link href="/2023/03/02/ADS-01/"/>
      <url>/2023/03/02/ADS-01/</url>
      
        <content type="html"><![CDATA[<h1><span id="ads_01">ADS_01</span></h1><blockquote><p>本文内容及图片均来自浙江大学课程《高级数据结构》</p></blockquote><p><a href="https://imgtg.com/image/VPNwl"><img src="https://i.imgtg.com/2023/03/02/VPNwl.png" alt="VPNwl.png"></a></p><p><a href="https://imgtg.com/image/VPr1g"><img src="https://i.imgtg.com/2023/03/02/VPr1g.md.png" alt="VPr1g.md.png"></a></p><p><a href="https://imgtg.com/image/VPAHB"><img src="https://i.imgtg.com/2023/03/02/VPAHB.md.png" alt="VPAHB.md.png"></a></p><p><a href="https://imgtg.com/image/VPK8s"><img src="https://i.imgtg.com/2023/03/02/VPK8s.md.png" alt="VPK8s.md.png"></a></p><h2><span id="avl-tree">AVL Tree</span></h2><h3><span id="definition">Definition</span></h3><p><a href="https://imgtg.com/image/VtHmp"><img src="https://i.imgtg.com/2023/03/02/VtHmp.md.png" alt="VtHmp.md.png"></a></p><h3><span id="adjustment">Adjustment</span></h3><h4><span id="rr-rotation">RR rotation</span></h4><p><a href="https://imgtg.com/image/VtQAv"><img src="https://i.imgtg.com/2023/03/02/VtQAv.md.png" alt="VtQAv.md.png"></a></p><h4><span id="ll-rotation">LL Rotation</span></h4><p><a href="https://imgtg.com/image/Vt0Cc"><img src="https://i.imgtg.com/2023/03/02/Vt0Cc.md.png" alt="Vt0Cc.md.png"></a></p><h4><span id="lr-rotation">LR Rotation</span></h4><p><a href="https://imgtg.com/image/VtsDM"><img src="https://i.imgtg.com/2023/03/02/VtsDM.md.png" alt="VtsDM.md.png"></a></p><h4><span id="rl-rotation">RL Rotation</span></h4><p><a href="https://imgtg.com/image/Vtfk1"><img src="https://i.imgtg.com/2023/03/02/Vtfk1.md.png" alt="Vtfk1.md.png"></a></p><blockquote><ul><li>[ ] Note: p116-p119 用height值做AVL调整</li></ul></blockquote><h3><span id="n~h~">n~h~</span></h3><p>the minimum number of nodes in a height balanced tree if height h</p><p><a href="https://imgtg.com/image/Vt9YD"><img src="https://i.imgtg.com/2023/03/02/Vt9YD.md.png" alt="Vt9YD.md.png"></a></p><h2><span id="splay-tree">Splay Tree</span></h2><blockquote><ul><li>[x] Note:P125-P127</li></ul></blockquote><p>amortized time 摊销时间</p><h3><span id="find">Find</span></h3><p>找到该节点后通过旋转把它推到root去</p><p><a href="https://imgtg.com/image/VL0T1"><img src="https://i.imgtg.com/2023/03/02/VL0T1.md.png" alt="VL0T1.md.png"></a></p><h3><span id="delete">Delete</span></h3><p><a href="https://imgtg.com/image/VLVOF"><img src="https://i.imgtg.com/2023/03/02/VLVOF.png" alt="VLVOF.png"></a></p><h2><span id="amortized-analysis">Amortized Analysis</span></h2><p><a href="https://imgtg.com/image/VLY76"><img src="https://i.imgtg.com/2023/03/02/VLY76.md.png" alt="VLY76.md.png"></a></p><h3><span id="aggregate-analysis">Aggregate analysis</span></h3><p><a href="https://imgtg.com/image/VEnRr"><img src="https://i.imgtg.com/2023/03/02/VEnRr.png" alt="VEnRr.png"></a></p><h3><span id="accounting-method">Accounting method</span></h3><p><a href="https://imgtg.com/image/VE1jM"><img src="https://i.imgtg.com/2023/03/02/VE1jM.png" alt="VE1jM.png"></a></p><p><a href="https://imgtg.com/image/VENUG"><img src="https://i.imgtg.com/2023/03/02/VENUG.png" alt="VENUG.png"></a></p><h3><span id="potential-method">Potential method</span></h3><p><a href="https://imgtg.com/image/VEey1"><img src="https://i.imgtg.com/2023/03/02/VEey1.md.png" alt="VEey1.md.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ADS </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法_c++学习</title>
      <link href="/2023/03/01/%E7%AE%97%E6%B3%95-c-%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/01/%E7%AE%97%E6%B3%95-c-%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>通识_英语短篇小说欣赏</title>
      <link href="/2023/02/28/%E9%80%9A%E8%AF%86-%E8%8B%B1%E8%AF%AD%E7%9F%AD%E7%89%87%E5%B0%8F%E8%AF%B4%E6%AC%A3%E8%B5%8F/"/>
      <url>/2023/02/28/%E9%80%9A%E8%AF%86-%E8%8B%B1%E8%AF%AD%E7%9F%AD%E7%89%87%E5%B0%8F%E8%AF%B4%E6%AC%A3%E8%B5%8F/</url>
      
        <content type="html"><![CDATA[<h1><span id="通识_英语短篇小说欣赏">通识_英语短篇小说欣赏</span></h1><h2><span id="l-1">L-1</span></h2><ul><li><p>a lecture of literature</p></li><li><p>three gernes of literature</p><ul><li>poetry<ul><li>comes first —— orality</li></ul></li><li>drama</li><li>the novel</li></ul></li><li><p>round things up 自圆其说</p></li></ul><h2><span id="l-2">L-2</span></h2><ul><li>primitive 原始的</li><li>slavery 奴隶的</li><li>feudal 封建的</li><li>capitalist 资本的</li><li>socialist 社会主义的</li><li>communist 共产主义的</li><li>work≠labor</li><li>division of labor</li><li>playwright 剧作家 dramatist</li><li>cast<ul><li>actor/actress</li><li>conductor</li><li>producer</li><li>lighting</li><li>costume</li></ul></li><li>see a play</li><li>audience</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>工训_期末复习</title>
      <link href="/2023/02/13/%E5%B7%A5%E8%AE%AD-%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
      <url>/2023/02/13/%E5%B7%A5%E8%AE%AD-%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1><span id="工训_期末复习">工训_期末复习</span></h1><h2><span id="工程材料">工程材料</span></h2><p><a href="https://imgtg.com/image/cwxRt"><img src="https://i.imgtg.com/2023/02/13/cwxRt.png" alt="cwxRt.png"></a></p><p><a href="https://imgtg.com/image/cw7aY"><img src="https://i.imgtg.com/2023/02/13/cw7aY.png" alt="cw7aY.png"></a></p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 工程训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大英_期末复习</title>
      <link href="/2023/02/13/%E5%A4%A7%E8%8B%B1-%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
      <url>/2023/02/13/%E5%A4%A7%E8%8B%B1-%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1><span id="大英_期末复习">大英_期末复习</span></h1><h2><span id="听力">听力</span></h2><ol><li>观点类的题目注意听情绪词（fortunately etc.）</li><li>一定要先看题干</li></ol><h2><span id="单词">单词</span></h2><ul><li>[x] <strong>grasp</strong> [sing.] your ability to understand a complicated idea, situation, or subject （对复杂想法、状况或问题的）理解力，领悟力</li><li>[x] <strong>recipient</strong> [C] (fml.) sb. who receives sth. 接受者；领受者</li><li>[ ] <strong>forage</strong> go around searching for food or other supplies （为找到食物、补给等）四处搜寻</li><li>[x] <strong>doctorate</strong> [C] a university degree of the highest level 博士学位</li><li>[ ] <strong>plentiful</strong> more than enough in quantity 丰富的；充足的</li><li>[x] <strong>flit</strong> move lightly or quickly and not stay in one place for very long 轻快地行进；掠过</li><li>[x] <strong>feminine</strong> having the qualities or appearance considered to be typical of women; connected with women （指气质或外貌）女性特有的；女性的</li><li>[x] **excessively **to a much greater level or degree than seems reasonable or appropriate 过度地；过多地</li><li>[x] <strong>surplus</strong> [C, U] an amount of sth. that is more than what is needed or used 剩余；过剩；剩余额；多余的量</li><li>[ ] <strong>thiourea</strong> [U] 硫脲</li><li>[x] <strong>staple</strong> [C] a food that is needed and used all the time 基本食物；主食</li><li>[x] <strong>intuitively</strong> in a way that is based on feelings rather than facts or proof 基于直觉地</li><li>[x] <strong>startling</strong> very unusual or surprising 异乎寻常的；令人惊奇的</li><li>[x] <strong>lettuce</strong> [C, U] 莴苣；生菜</li><li>[x] <strong>mille<em>nn</em>ium</strong> [C] (pl. millennia) a period of 1,000 years 一千年；千年期</li><li>[x] <strong>interior</strong> (only before noun) belonging to mental or spiritual life 内心的；精神的</li><li>[x] <strong>implementation</strong> [U] the process of taking action or making changes that you have officially decided should happen 实施；贯彻；执行</li><li>[x] <strong>impulse</strong> [C, U] a sudden strong desire to do sth. without thinking about whether it is wise to do 冲动；突然的欲望</li><li>[ ] <strong>punctuation</strong> [U] the marks used to divide a piece of writing into sentences, phrases, etc. 标点符号（总称）</li><li>[x] <strong>rape</strong> damage or destroy sth. by using it in an unsuitable way 蹂躏；破坏</li><li>[x] <strong>sophisticated</strong> having a lot of experience of life, and good judgment about socially important things such as art, fashion, etc. 见多识广的；老练的；练达的</li><li>[x] <strong>bun</strong> 1) (BrE also bap) 小圆面包 2) (BrE) 小圆糕点</li><li>[x] <strong>quiz</strong> ask sb. a lot of questions 询问；查问；盘问</li><li>[ ] <strong>disposable</strong> 1) available to be used 可以使用的 2) intended to be used once or for a short time and then thrown away 一次性的 ; 用完即弃的</li><li>[ ] <strong>fretful</strong> 1) marked by worry and distress; troublesome 令人烦恼的 2) anxious and complaining, and unable to relax 烦恼的；发牢骚的</li><li>[x] <strong>peculiarity</strong> [U] sth. that is a feature of only one particular place, person, situation, etc. （某地方、某人或某情况等的）特点，独特性</li><li>[x] <strong>console</strong> make sb. feel better when they are feeling sad or disappointed 安慰；慰藉</li><li>[x] <strong>sushi</strong> [U] 寿司</li><li>[x] <strong>trendy</strong> influenced by the most fashionable styles and ideas 时髦的；受新潮思想影响的</li><li>[ ] <strong>revolution</strong> a complete change in ways of thinking, methods of working, etc. （思想、工作方式等的）彻底变革，革命</li><li>[x] <strong>paradoxically</strong> in a way that is surprising because it is the opposite of what you would expect 自相矛盾地；反常地</li><li>[x] <strong>devoted</strong> showing great fondness or loyalty; caring a great deal 忠实的；热爱…的</li><li>[x] <strong>joint venture</strong> [C] a business or project in which two or more companies or  individuals have invested, with the intention of working together  合营企业；合资企业</li><li>[x] <strong>companionship</strong> [U] when you are with sb. you enjoy being with, and are not alone 友谊；友好交往</li><li>[ ] <strong>grave</strong> grave problems, situations, or worries are very great or bad 严重的；重大的；严峻的</li><li>[x] <strong>virtually</strong> almost</li><li>[x] <strong>savage</strong> attack or treat brutally 攻击；残害</li><li>[x] <strong>recoil</strong> move your body quickly away from sb. / sth. because you find them or it frightening or unpleasant 退缩；畏缩</li><li>[x] <strong>souvenir</strong> [C] an object that you buy or keep to remind yourself of a special occasion or a place you have visited 纪念品；纪念物</li><li>[x] <strong>dainty</strong> small, pretty, and delicate 小巧的；精致的</li><li>[x] <strong>distaste</strong> [U] a feeling that sb. / sth. is unpleasant or morally offensive 不喜欢；厌恶；反感</li><li>[x] <strong>mealy</strong> (fruits or vegetables) dry and not tasting good （水果或蔬菜）干巴难吃的</li><li>[x] <strong>downturn</strong> [C, usu. sing.] a reduction in economic, business, or other activity （经济、商业等活动的）下降，衰退</li><li>[ ] <strong>scrap</strong> 1) (~s) [pl.] food left after a meal 残羹剩饭 2) [C] a small piece of paper, cloth, etc. 小片；小块；碎屑</li><li>[ ] <strong>mayonnaise</strong> [U] 蛋黄酱</li><li>[ ] <strong>windup</strong> (BrE wind-up) (only before noun) relating to a machine or toy that  you turn part of several times, in order to make it move or start  working （机器或玩具）装有发条的，用手柄操作的</li><li>[x] <strong>convention</strong> 1) [C, U] behavior and attitudes that most people in a society consider to be normal and right 惯例；常规；习俗 2) [C] a large formal meeting for people who belong to the same profession or organization or who have the same interests 大会；会议；集会</li><li>[x] <strong>ancestral</strong> of, relating to, or inherited from an ancestor 祖先的</li><li>[x] <strong>receptor</strong> [C] a nerve ending which receives information about changes in  light, heat, etc. and causes the body to react in particular ways 感受器；受体</li><li>[x] <strong>dash</strong> [C] 破折号</li><li>[x] <strong>aspiration</strong> [C, usu. pl., U] a strong desire to have or achieve sth. 强烈愿望；志向；抱负</li><li>[x] <strong>soulful</strong> expressing deep, usu. sad, emotions 深情的；伤感的</li><li>[x] <strong>mystery</strong> [C] sth. which cannot be explained or understood 神秘的事；不可思议的事</li><li>[ ] <strong>biometric</strong> (usu. before noun) using measurements of human features, such as fingers or eyes, in order to identify people 生物特征识别的</li><li>[x] <strong>unparalleled</strong> (fml.) bigger, better, or worse than anything else 无比的；无双的；空前的</li><li>[x] <strong>compassion</strong> [U] a strong feeling of sympathy for sb. who is suffering, and a desire to help them 怜悯；同情</li><li>[x] <strong>trait</strong> [C] (fml.) a particular quality in sb.'s character （某人性格中的）特性，品质</li><li>[x] <strong>thrive</strong> become very strong and healthy or very successful 茁壮成长；兴旺；欣欣向荣</li><li>[x] <strong>disguise</strong> 1) hide sth. or change it, so that it cannot be recognized 掩蔽；掩饰 2) change sb.'s appearance so that people cannot recognize them 装扮；假扮</li><li>[ ] <strong>colon</strong> 冒号</li><li>[ ] <strong>mystical</strong> (also mystic) (usu. before noun) having spiritual powers or  qualities that are difficult to understand or to explain 神秘的；不可思议的；难以解释的</li><li>[x] <strong>domesticated</strong> (of animals or plants) brought or kept under control or cultivation （动物或植物）驯化的</li><li>[x] <strong>prominence</strong> [U] the fact of being important and well-known 重要；杰出；著名</li><li>[x] <strong>calculus</strong> [U] 微积分</li><li>[x] <strong>profound</strong> very great 巨大的；重大的</li><li>[ ] **empirical ** (only before noun) based on experiments or experience rather than ideas or theories 以实验（经验）为依据的；经验主义的</li><li>[x] <strong>Mandarin</strong> 普通话</li><li>[ ] <strong>charm</strong> attract sb. and make them like you, sometimes in order to make them do sth. for you 迷住；吸引</li><li>[x] <strong>meteor</strong> 流星</li><li>[x] <strong>grant</strong> 1) (take sb. / sth. for granted) be so used to sb. / sth. that  you do not recognize their true value any more and do not show that you  are grateful （因习以为常）视…为理所当然（而对其不重视） 2) (fml.) give sb. sth. or allow them to have sth. that they have asked for 给予；准予</li><li>[x] <strong>per capita</strong> (fml.) used to describe the average amount of sth. in a particular  place, calculated according to the number;of people who live there  人均的；平均每人的</li><li>[x] <strong>incorporate</strong> include sth. as part of a group, system, plan, etc. 把 （某事物）并入，包含</li><li>[ ] <strong>oxytocin</strong> [U] 催产素</li><li>[ ] <strong>solitude</strong> [U] the state of being completely alone, esp. when this is pleasant or relaxing 独处</li><li>[ ] <strong>validity</strong> [U] the state of being logical and true 符合逻辑；正当；正确</li><li>[ ] <strong>unintended</strong> not deliberate 无意的；无心的</li><li>[ ] <strong>insatiable</strong> impossible to satisfy 无法满足的</li><li>[x] <strong>chambermaid</strong> [C] 打扫房间的女工；（尤指宾馆里的）客房女服务员</li><li>[ ] <strong>hyphen</strong>  [C] 连字符；连（字）号</li><li>[ ] <strong>melatonin</strong> [U] 褪黑激素 （有时用作安眠药</li><li>[x] <strong>innate</strong> an innate quality or ability is sth. you are born with （素质或能力）天生的，与生俱来的</li><li>[x] <strong>antibiotic</strong> [C, usu. pl.] 抗生素</li><li>[ ] <strong>brutal</strong> 1) not pleasant and not sensitive to people’s feelings伤人的；不顾他人感受的 2) very cruel and violent 野蛮的；凶残的</li><li>[x] <strong>inherit</strong> have qualities, physical features, etc. that are similar to those of your parents, grandparents, etc. 经遗传获得（品质、身体特征等）</li><li>[x] <strong>confirmation</strong> [C, U] a statement, letter, etc. that shows that sth. is true, correct, or definite 证实；证明</li><li>[x] <strong>emoticon</strong> [C] （在电子邮件和因特网上使用的）表情符号</li><li>[x] <strong>chow mein</strong> 炒面</li><li>[x] <strong>memoir</strong> 1) (fml.) a short piece of writing about a person or place that you knew well, or an event that you experienced 传略；实录 2) (~s) [pl.] a book by sb. important and famous in which they write about their life and experiences （名人）回忆录</li><li>[x] <strong>gorgeous</strong> extremely beautiful or attractive 非常漂亮的；极其吸引人的</li><li>[x] <strong>bracket</strong> [C, usu. pl.] (AmE parenthesis) 圆括弧；圆括号</li><li>[x] <strong>laden</strong> heavily loaded with sth. 载满的；装满的</li><li>[x] <strong>historian</strong> [C]a person who studies history and / or writes about it 历史学家；史学工作者</li><li>[x] <strong>crunch</strong> the sound of sth. being crushed or like sth. being crushed or broken 嘎吱的响声</li><li>[ ] <strong>distress</strong> [U] a feeling of extreme unhappiness 忧虑；苦恼；悲伤</li><li>[x] <strong>broccoli</strong> 西兰花</li><li>[x] <strong>foreshadow</strong> 预示</li><li>[x] <strong>millennial</strong>  a person who was born in the 1980s, 1990s, or early 2000s 千禧一代</li><li>[x] <strong>anthropologist</strong> [C] a person who studies anthropology 人类学家</li><li>[x] <strong>expat</strong> [C] (infml.) a person living in a foreign country 居住在国外的人；侨民</li><li>[x] <strong>remedy</strong> [vt.] 1) deal with a problem or improve a bad situation 解决；补救；纠正；改善 [n.] 2) a way of dealing with a problem or making a bad situation better （问题的）解决方式；（糟糕状况的）补救方法</li><li>[x] <strong>grieve</strong> feel extremely sad, esp. because sb. you love has died （尤指因所爱之人去世而）感到悲痛</li><li>[x] <strong>habitat</strong> [C, U] the natural home of a plant or animal （动植物的）生活环境；（动物的）栖息地</li><li>[x] <strong>ridicule</strong> [U] unkind laughter or remarks that are intended to make sb. / sth. seem stupid 嘲笑；奚落</li><li>[x] <strong>taunt</strong> try to make sb. angry or upset by saying unkind things to them （用语言）挑衅，侮辱，嘲弄，奚落</li><li>[x] <strong>foolproof</strong> (of a plan or machine) so simple and easy to  understand that it is unable to go wrong or be used wrongly  （计划或机器）不出问题的，不会误用的， 操作简便的</li><li>[x] <strong>winter solstice</strong> 冬至</li><li>[ ] <strong>toxin</strong>  [C] 毒素 （尤指细菌产生的致病物质）</li><li>[x] <strong>discourse</strong> [C] a serious speech or piece of writing on a particular subject （关于某主题的）演讲，论述，著述</li><li>[x] <strong>chafing dish</strong> [C] a metal pan over a heater, used to cook or to keep things warm at the table （有加热装置的）火锅，暖锅</li><li>[x] <strong>flop</strong> (always + ad. / prep.) fall or drop heavily 沉重地落下</li><li>[x] <strong>progressive</strong> supporting new or modern ideas and methods, esp. in politics and education （尤指在政治和教育方面） 进步的，先进的</li><li>[x] <strong>savvy</strong> (infml.) knowing a lot about sth. and able to make good judgments about it 有见识的；在行的</li><li>[ ] <strong>sustenance</strong> 营养 食物</li><li>[ ] <strong>unworldly</strong> 不谙世故的 天真的 对钱财不感兴趣的 脱俗的</li><li>[ ] <strong>bulldozer</strong> 推土机</li></ul><p><strong>自测</strong></p><p>\1. 理解力领悟力</p><p>\2. 接收者</p><p>\3. 四处寻找</p><p>\4. 博士学位</p><p>\5. 丰富的充足的</p><p>\6. 轻快地掠过</p><p>\7. 女性的</p><p>\8. 过度地</p><p>\9. 剩余量</p><p>\10. 硫脲</p><p>\11. 主食</p><p>\12. 基于直觉地</p><p>\13. 异乎寻常的</p><p>\14. 生菜</p><p>\15. 一千年</p><p>\16. 内心的</p><p>\17. 执行</p><p>\18. 冲动</p><p>\19. 标点符号</p><p>\20. 蹂躏破坏</p><p>\21. 见多识广的 老练的</p><p>\22. 小圆面包</p><p>\23. 盘问</p><p>\24. 一次性的</p><p>\25. 特点独特性</p><p>\26. 安慰</p><p>\27. 寿司</p><p>\28. 时髦的</p><p>\29. 自相矛盾地</p><p>\30. 热爱的 忠实的</p><p>\31. 合资企业</p><p>\32. 友谊</p><p>\33. 严重的</p><p>\34. 几乎</p><p>\35. 攻击残害</p><p>\36. 退缩畏缩</p><p>\37. 纪念品</p><p>\38. 小巧的 精致的</p><p>\39. 不喜欢 厌恶 反感</p><p>\40. 干巴难吃的</p><p>\41. 下降衰退</p><p>\42. 小片</p><p>\43. 蛋黄酱</p><p>\44. 装有发条的</p><p>\45. 惯例习俗 大会</p><p>\46. 祖先的</p><p>\47. 受体</p><p>\48. 破折号</p><p>\49. 志向抱负</p><p>\50. 深情的</p><p>\51. 神秘的事</p><p>\52. 生物特征识别的</p><p>\53. 无双的</p><p>\54. 怜悯同情</p><p>\55. 特性</p><p>\56. 茁壮成长 兴旺</p><p>\57. 掩饰 假扮</p><p>\58. 冒号</p><p>\59. 神秘的</p><p>\60. 驯化的</p><p>\61. 重要 杰出 著名</p><p>\62. 微积分</p><p>\63. 重大的</p><p>\64. 经验主义的</p><p>\65. 普通话</p><p>\66. 迷住吸引</p><p>\67. 流星</p><p>\68. 视为理所当然（而不重视）给予准予</p><p>\69. 人均的</p><p>\70. 并入包含</p><p>\71. 催产素</p><p>\72. 独处</p><p>\73. 符合逻辑正当</p><p>\74. 无心的</p><p>\75. 无法满足的</p><p>\76. 打扫房间的女工</p><p>\77. 连字符</p><p>\78. 褪黑素</p><p>\79. 天生的</p><p>\80. 抗生素</p><p>\81. 凶残的 伤人的</p><p>\82. 经过遗传获得</p><p>\83. 证明证实</p><p>\84. 表情符号</p><p>\85. 炒面</p><p>\86. 回忆录 传略</p><p>\87. 非常漂亮的</p><p>\88. 圆括号</p><p>\89. 载满的</p><p>\90. 史学家</p><p>\91. 嘎吱的响声</p><p>\92. 忧虑</p><p>\93. 西兰花</p><p>\94. 预示</p><p>\95. 千禧一代</p><p>\96. 人类学家</p><p>\97. 居住在国外的人 侨民</p><p>\98. 解决 补救/~的方法</p><p>\99. 感到悲痛</p><p>\100. 栖息地</p><p>\101. 嘲笑奚落r</p><p>\102. 侮辱挑衅嘲弄ta</p><p>\103. 不会出问题的</p><p>\104. 冬至</p><p>\105. 毒素</p><p>\106. 演讲</p><p>\107. 火锅 暖锅</p><p>\108. 沉重地落下</p><p>\109. 先进的</p><p>\110. 有见识的 在行的</p><h2><span id="词组">词组</span></h2><ul><li><p>[ ] well off 有钱 富裕的</p></li><li><p>[ ] try out 试验</p></li><li><p>[ ] in/by contrast to/with 相比于</p></li><li><p>[ ] no more …… than …… 是一个较常用的特殊句型，意为“正如……不……一样，……也不……”。通常，no more …… than …… 表示两个句子意义上否定的比拟，也可以用 not …… any more than …… 表示</p><blockquote><p>He is <strong>no more</strong> fit to be a doctor <strong>than</strong> I am (fit to be a doctor).</p><p>He is <strong>not</strong> fit to be a doctor <strong>any more than</strong> I am!</p><p>他和我都不适合当医生。</p><p>A man can <strong>no more</strong> fly <strong>than</strong> a bird can speak.</p><p>A man can <strong>not</strong> fly <strong>any more</strong> <strong>than</strong> a bird can speak.</p><p>人不会飞翔，就像鸟不会说话一样。</p></blockquote></li><li><p>[ ] by choice 自愿的</p></li><li><p>[ ] (all) to yourself 独有 专用</p></li><li><p>[ ] take sth. out on sb. 拿某人出气</p></li><li><p>[ ] a bump in the road 前进中的问题（通常是暂时的）</p></li><li><p>[ ] by nature 生性</p></li><li><p>[ ] look to 指望</p></li><li><p>[ ] down/along the road 在将来 今后</p></li><li><p>[ ] to the point 简明恰当的</p></li><li><p>[ ] lend oneself to sth. 适用于某事物（书适用于拍成电影）</p></li><li><p>[ ] cut corners （为了节约时间金钱精力而）马虎从事</p></li><li><p>[ ] phase out 逐步停止使用（提供）</p></li><li><p>[ ] in my book 在我看来</p></li><li><p>[ ] play on 利用（某一感情 事实 或观点）</p></li><li><p>[ ] green with envy 十分嫉妒</p></li><li><p>[ ] be on the case （为达到某个结果而）开始做某事，着手进行</p></li></ul><h2><span id="作文">作文</span></h2><ul><li>The <strong>reliance</strong> on <strong>technological devices/ electronic gadgets</strong> like smartphones (instead of brains) <strong>leads to</strong> losses of three fundamental skills.</li><li><strong>Yet more seriously</strong>, <strong>as a consequence of</strong> addiction to the virtual world, people tend to be <strong>socially incompetent</strong> for lack of conversational skills and emotion judgement.</li><li>Yet, <strong>the above-mentioned</strong> competences can be stored by <strong>awareness raised to</strong> practice them <strong>on a frequent basis</strong> and keep away from those device <strong>occasionally</strong>.</li><li>With excessive dependence on technology like smartphones, people are facing the loss of three basic abilities. <strong>// The first two</strong> lost skills are phone number memorization and sense of direction <strong>due to</strong> smartphones’ storage convenience and navigation function. <strong>// Yet the worst is</strong> the loss of social competence <strong>including</strong> conversational skills and emotion recognition <strong>resulting from</strong> addiction to virtual world. <strong>// To regain above-mentioned abilities</strong>, it’s recommended to put those fundamental skills into use frequently  and set aside some device-free time. (80 words)</li><li>In comparison with traditional shopping methods, shopping online can <strong>rid you of much trouble</strong>, but i<strong>ts disadvantages cannot be neglected</strong>. The ever-happening fraud poses its potential danger and your unpredictable loss. <strong>Worse still</strong>, the possible unexpected difference between items in reality and those on the screen may ruin/ spoil your sense of satisfaction of the purchase. Also, online shopping should <strong>account for</strong> the worsening global warming and traffic jams, <strong>not to mention</strong> the slow delivery to your annoyance.</li><li>bears crucial significance</li><li>Possessing a tremendous business influence</li><li>commercially important</li><li>stand a better chance/ likelihood of doing</li><li>attract / capture / grab / draw increasing / mounting attention</li><li>minimize / reduce / cut / lower / lessen / bring down</li><li>argument / controversy / debate / a controversial issue</li><li>provoke / trigger / stir up / spark (off)</li><li>be kept on the right track</li><li>Opponents express/voice concern / anxiety about ……while others are optimistic/ convinced of the …….</li></ul>]]></content>
      
      
      <categories>
          
          <category> 大学英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 复习 </tag>
            
            <tag> 期末 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_LIST</title>
      <link href="/2023/02/06/DS-LIST/"/>
      <url>/2023/02/06/DS-LIST/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_list">DS_LIST</span></h1><h2><span id="max-subsequence-sum">Max Subsequence Sum</span></h2><h3><span id="1-on3">1. O(N^3^)</span></h3><pre><code class="language-c">//1int MaxSubsequenceSum(const int A[ ],  int  N )&#123;int max = 0;int i,j,k;int cur = 0;for(i = 0; i &lt; N; i++)&#123;for(j = i; j &lt; N; j++)&#123;cur = 0;for(k = i; k &lt; j; k++)&#123;cur += A[k];max = Max(cur, max, 0);&#125;&#125;&#125;return max;&#125;</code></pre><h3><span id="2-on2">2. O(N^2^)</span></h3><pre><code class="language-c">//2int MaxSubsequenceSum(const int A[ ],  int  N )&#123;int max = 0;int i,j;int cur = 0;for(i = 0; i &lt; N; i++)&#123;cur = 0;for(j = i; j &lt; N; j++)&#123;cur += A[j];max = Max(cur, max, 0);&#125;&#125;return max;&#125;</code></pre><h3><span id="3-onlogn">3. O(NlogN)</span></h3><pre><code class="language-c">//3int MaxSubsequenceSum(const int A[ ],  int  li, int ri )&#123;int max = 0;if(li == ri )&#123;if(A[li] &lt; 0)return 0;elsereturn A[li];&#125;int mi = (li + ri)/2;int lm = 0,mm = 0,rm = 0;lm = MaxSubsequenceSum(A,li,mi);rm = MaxSubsequenceSum(A,mi+1,ri);int lbm = 0, rbm = 0, bm = 0;int i,j;int cur = 0;for(i = mi; i &gt;= li; i--)&#123;cur += A[i];lbm = Max(lbm, cur);&#125;cur = 0;for(i = mi+1; i&lt;=ri; i++)&#123;cur += A[i];rbm = Max(rbm, cur);&#125;bm = lbm+rbm;max = Max(Max(lm,rm),bm);return max;&#125;</code></pre><h3><span id="4-on">4. O(N)</span></h3><pre><code class="language-C">//4int MaxSubsequenceSum(const int A[ ],  int  N )&#123;int max = 0;int i,cur = 0;for(i = 0; i &lt; N; i++)&#123;cur += A[i];if(cur &lt; 0)cur = 0;max = Max(max,cur);&#125;return max;&#125;</code></pre><h2><span id="linked-list">Linked List</span></h2><h3><span id="定义">定义</span></h3><pre><code class="language-c">typedef struct LNode *PtrToLNodestruct LNode&#123;    ElementType Data;    PtrToLNode Next;&#125;typedef PtrToLNode List;typedef PtrToLNode Position;</code></pre><h3><span id="查找">查找</span></h3><pre><code class="language-c">Position Find( List L, ElementType X )&#123;    Position p = L;    while(p &amp;&amp; p-&gt;Data!=X)p = p-&gt;Next;    return p;&#125;</code></pre><h3><span id="带头节点的插入">带头节点的插入</span></h3><pre><code class="language-c">bool Insert( List L, ElementType X, Position P )&#123;    Position pre = L;    while(pre &amp;&amp; pre-&gt;Next != P)pre = pre-&gt;Next;    if(pre)    &#123;        Position tmp = (Position)malloc(sizeof(struct LNode));        tmp-&gt;Next = P;        tmp-&gt;Data = X;        pre-&gt;Next = tmp;        return true;    &#125;    printf(&quot;输入参数错误\n&quot;);    return false;&#125;</code></pre><h3><span id="带头结点的删除">带头结点的删除</span></h3><pre><code class="language-c">bool Delete( List L, Position P )&#123;    Position pre = L;    while(pre &amp;&amp; pre-&gt;Next != P)pre = pre-&gt;Next;    if(pre &amp;&amp; P)    &#123;        pre-&gt;Next = P-&gt;Next;        free(P);        return true;    &#125;    else    &#123;        printf(&quot;删除位置参数错误\n&quot;);        return false;    &#125;&#125;</code></pre><h2><span id="doubly-linked-circular-lists">Doubly Linked Circular Lists</span></h2><h3><span id="定义">定义</span></h3><pre><code class="language-c">typedef  struct  node  *node_ptr;typedef  struct  node  &#123;       node_ptr  llink;       element    item;       node_ptr  rlink;&#125;;</code></pre><p><a href="https://imgtg.com/image/0YRhv"><img src="https://i.imgtg.com/2023/02/06/0YRhv.md.png" alt="0YRhv.md.png"></a></p><h3><span id="the-polynomial-adt">The Polynomial ADT</span></h3><h4><span id="representation-1">Representation 1</span></h4><pre><code class="language-c">typedef struct &#123;int     CoeffArray [ MaxDegree + 1 ] ;int     HighPower;    &#125;  *Polynomial ; </code></pre><p>对于稀疏多项式太不友好了</p><h4><span id="representation-2">Representation 2</span></h4><pre><code class="language-c">typedef struct poly_node *poly_ptr;struct poly_node&#123;int Coefficient ;  /* assume coefficients are integers */int Exponent;poly_ptr Next ;&#125; ;typedef poly_ptr a ;  /* nodes sorted by exponent */</code></pre><p><a href="https://imgtg.com/image/0Y6os"><img src="https://i.imgtg.com/2023/02/06/0Y6os.png" alt="0Y6os.png"></a></p><p><a href="https://imgtg.com/image/0Y8rK"><img src="https://i.imgtg.com/2023/02/06/0Y8rK.png" alt="0Y8rK.png"></a></p><h3><span id="multilists">Multilists</span></h3><p>〖Example〗 Suppose that we have 40,000 students and 2,500 courses.  Print the students’ name list for each course, and print the registered classes’ list for each student.</p><h4><span id="representation-2">Representation 2</span></h4><p>十字矩阵</p><p><a href="https://imgtg.com/image/0YXQa"><img src="https://i.imgtg.com/2023/02/06/0YXQa.png" alt="0YXQa.png"></a></p><h3><span id="cursor-implementation-of-linked-lists-no-pointer">Cursor Implementation of Linked Lists (no pointer)</span></h3><p><a href="https://blog.csdn.net/qq_44092699/article/details/114759683">链表的游标实现</a></p><h2><span id="stack">Stack</span></h2>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 线性表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_SORTING</title>
      <link href="/2023/02/05/DS-SORTING/"/>
      <url>/2023/02/05/DS-SORTING/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_sorting">DS_SORTING</span></h1><h2><span id="简单排序">简单排序</span></h2><h3><span id="前提">前提</span></h3><p><a href="https://imgtg.com/image/0G7rP"><img src="https://i.imgtg.com/2023/02/05/0G7rP.md.png" alt="0G7rP.md.png"></a></p><h3><span id="冒泡排序">冒泡排序</span></h3><p><a href="https://imgtg.com/image/0GNQb"><img src="https://i.imgtg.com/2023/02/05/0GNQb.md.png" alt="0GNQb.md.png"></a></p><ul><li>可在单向链表内排序</li><li>稳定</li></ul><h3><span id="插入排序">插入排序</span></h3><p><a href="https://imgtg.com/image/0GAig"><img src="https://i.imgtg.com/2023/02/05/0GAig.md.png" alt="0GAig.md.png"></a></p><ul><li>稳定</li></ul><p><a href="https://imgtg.com/image/0Ggma"><img src="https://i.imgtg.com/2023/02/05/0Ggma.png" alt="0Ggma.png"></a></p><blockquote><p>比较次数的上限是45</p></blockquote><h3><span id="时间复杂度下界">时间复杂度下界</span></h3><h4><span id="逆序对">逆序对</span></h4><p><a href="https://imgtg.com/image/0G8YD"><img src="https://i.imgtg.com/2023/02/05/0G8YD.png" alt="0G8YD.png"></a></p><p><a href="https://imgtg.com/image/0GIA6"><img src="https://i.imgtg.com/2023/02/05/0GIA6.png" alt="0GIA6.png"></a></p><h2><span id="希尔排序shell-sort">希尔排序（Shell Sort）</span></h2><p><a href="https://imgtg.com/image/0GCwb"><img src="https://i.imgtg.com/2023/02/05/0GCwb.png" alt="0GCwb.png"></a></p><h3><span id="原始希尔排序">原始希尔排序</span></h3><p><a href="https://imgtg.com/image/0QMnl"><img src="https://i.imgtg.com/2023/02/05/0QMnl.png" alt="0QMnl.png"></a></p><p>坏情况</p><p><a href="https://imgtg.com/image/0Qqks"><img src="https://i.imgtg.com/2023/02/05/0Qqks.png" alt="0Qqks.png"></a></p><h4><span id="更多增量序列">更多增量序列</span></h4><p><a href="https://imgtg.com/image/0Q5pK"><img src="https://i.imgtg.com/2023/02/05/0Q5pK.png" alt="0Q5pK.png"></a></p><p><a href="https://imgtg.com/image/0QBfa"><img src="https://i.imgtg.com/2023/02/05/0QBfa.png" alt="0QBfa.png"></a></p><p><a href="https://blog.csdn.net/weixin_42500963/article/details/113371660">希尔排序不稳定</a></p><h2><span id="堆排序">堆排序</span></h2><h3><span id="选择排序">选择排序</span></h3><p><a href="https://imgtg.com/image/0QbSC"><img src="https://i.imgtg.com/2023/02/05/0QbSC.png" alt="0QbSC.png"></a></p><h4><span id="算法1">算法1</span></h4><p><a href="https://imgtg.com/image/0QrKY"><img src="https://i.imgtg.com/2023/02/05/0QrKY.png" alt="0QrKY.png"></a></p><h4><span id="算法2">算法2</span></h4><p><a href="https://imgtg.com/image/0Qv1c"><img src="https://i.imgtg.com/2023/02/05/0Qv1c.md.png" alt="0Qv1c.md.png"></a></p><ol><li>建立大顶堆</li><li>交换顶尾</li><li>除末尾元素（原来的顶）元素外再建立大顶堆</li></ol><p><a href="https://imgtg.com/image/0QgXM"><img src="https://i.imgtg.com/2023/02/05/0QgXM.md.png" alt="0QgXM.md.png"></a></p><p><a href="https://blog.csdn.net/weixin_51609435/article/details/122982075?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167559786216782425179850%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167559786216782425179850&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-122982075-null-null.142%5Ev73%5Einsert_down1,201%5Ev4%5Eadd_ask,239%5Ev1%5Econtrol&amp;utm_term=%E5%A0%86%E6%8E%92%E5%BA%8F&amp;spm=1018.2226.3001.4187">堆排序</a></p><p>代码示例</p><pre><code class="language-c">void HeapAdjust(int* arr, int start, int end)&#123;int tmp = arr[start];for (int i = 2 * start + 1; i &lt;= end; i = i * 2 + 1)&#123;if (i &lt; end&amp;&amp; arr[i] &lt; arr[i + 1])//有右孩子并且左孩子小于右孩子&#123;i++;&#125;//i一定是左右孩子的最大值if (arr[i] &gt; tmp)&#123;arr[start] = arr[i];start = i;&#125;else&#123;break;&#125;&#125;arr[start] = tmp;&#125;void HeapSort(int* arr, int len)&#123;//第一次建立大根堆，从后往前依次调整for(int i=(len-1-1)/2;i&gt;=0;i--)&#123;HeapAdjust(arr, i, len - 1);&#125;//每次将根和待排序的最后一次交换，然后在调整int tmp;for (int i = 0; i &lt; len - 1; i++)&#123;tmp = arr[0];arr[0] = arr[len - 1-i];arr[len - 1 - i] = tmp;HeapAdjust(arr, 0, len - 1-i- 1);&#125;&#125;int main()&#123;int arr[] = &#123; 9,5,6,3,5,3,1,0,96,66 &#125;;HeapSort(arr, sizeof(arr) / sizeof(arr[0]));printf(&quot;排序后为:&quot;);for (int i = 0; i &lt; sizeof(arr) / sizeof(arr[0]); i++)&#123;printf(&quot;%d &quot;, arr[i]);&#125;return 0;&#125;</code></pre><pre><code class="language-c">void Swap( ElementType *a, ElementType *b )&#123; ElementType t = *a; *a = *b; *b = t;&#125; void PercDown( ElementType A[], int p, int N )&#123; /* 改编代码4.24的PercDown( MaxHeap H, int p )*/  /* 将N个元素的数组中以A[p]为根的子堆调整为最大堆 */int Parent, Child;ElementType X;X = A[p]; /* 取出根结点存放的值 */for( Parent=p; (Parent*2+1)&lt;N; Parent=Child ) &#123;Child = Parent * 2 + 1;if( (Child!=N-1) &amp;&amp; (A[Child]&lt;A[Child+1]) )Child++;  /* Child指向左右子结点的较大者 */if( X &gt;= A[Child] ) break; /* 找到了合适位置 */else  /* 下滤X */A[Parent] = A[Child];&#125;A[Parent] = X;&#125;void HeapSort( ElementType A[], int N ) &#123; /* 堆排序 */ int i;   for ( i=N/2-1; i&gt;=0; i-- )/* 建立最大堆 */ PercDown( A, i, N );  for ( i=N-1; i&gt;0; i-- ) &#123; /* 删除最大堆顶 */ Swap( &amp;A[0], &amp;A[i] ); /* 见代码7.1 */ PercDown( A, 0, i ); &#125;&#125;</code></pre><ul><li>堆排序适合解决：从大量的N个数据中找最大/最小的k个元素的问题</li></ul><h2><span id="归并排序">归并排序</span></h2><blockquote><p>有序子列的归并</p></blockquote><p><a href="https://imgtg.com/image/0SMcY"><img src="https://i.imgtg.com/2023/02/05/0SMcY.md.png" alt="0SMcY.md.png"></a></p><h3><span id="递归算法">递归算法</span></h3><p><a href="https://imgtg.com/image/0S1ul"><img src="https://i.imgtg.com/2023/02/05/0S1ul.md.png" alt="0S1ul.md.png"></a></p><p><a href="https://imgtg.com/image/0STFM"><img src="https://i.imgtg.com/2023/02/05/0STFM.md.png" alt="0STFM.md.png"></a></p><p><a href="https://blog.csdn.net/a1033025319/article/details/88650514?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167561033716800192259970%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167561033716800192259970&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-88650514-null-null.142%5Ev73%5Einsert_down1,201%5Ev4%5Eadd_ask,239%5Ev1%5Econtrol&amp;utm_term=%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6&amp;spm=1018.2226.3001.4187">归并排序（分治法）时间复杂度计算</a></p><p><a href="https://www.cnblogs.com/chengxiao/p/6194356.html">图解归并排序</a></p><h4><span id="统一函数接口">统一函数接口</span></h4><p><a href="https://imgtg.com/image/0SnEb"><img src="https://i.imgtg.com/2023/02/05/0SnEb.md.png" alt="0SnEb.md.png"></a></p><h4><span id="若只在merge中声明临时数组">若只在Merge中声明临时数组</span></h4><p><a href="https://imgtg.com/image/0SeRB"><img src="https://i.imgtg.com/2023/02/05/0SeRB.png" alt="0SeRB.png"></a></p><p>开闭空间次数太多，不合算</p><h3><span id="非递归算法">非递归算法</span></h3><p><a href="https://imgtg.com/image/0SZya"><img src="https://i.imgtg.com/2023/02/05/0SZya.png" alt="0SZya.png"></a></p><p><a href="https://imgtg.com/image/0S9yI"><img src="https://i.imgtg.com/2023/02/06/0S9yI.png" alt="0S9yI.png"></a></p><h2><span id="快速排序">快速排序</span></h2><p><a href="https://imgtg.com/image/0S6oF"><img src="https://i.imgtg.com/2023/02/06/0S6oF.png" alt="0S6oF.png"></a></p><p><a href="https://imgtg.com/image/0S8e6"><img src="https://i.imgtg.com/2023/02/06/0S8e6.png" alt="0S8e6.png"></a></p><h3><span id="选主元">选主元</span></h3><p><a href="https://imgtg.com/image/0Sw2B"><img src="https://i.imgtg.com/2023/02/06/0Sw2B.png" alt="0Sw2B.png"></a></p><h3><span id="子集划分">子集划分</span></h3><p><a href="https://imgtg.com/image/00OWs"><img src="https://i.imgtg.com/2023/02/06/00OWs.png" alt="00OWs.png"></a></p><h3><span id="小规模数据处理">小规模数据处理</span></h3><p><a href="https://imgtg.com/image/00agK"><img src="https://i.imgtg.com/2023/02/06/00agK.png" alt="00agK.png"></a></p><h3><span id="算法实现">算法实现</span></h3><p><a href="https://imgtg.com/image/005oS"><img src="https://i.imgtg.com/2023/02/06/005oS.md.png" alt="005oS.md.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_GRAPH</title>
      <link href="/2023/02/05/DS-GRAPH/"/>
      <url>/2023/02/05/DS-GRAPH/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_graph">DS_GRAPH</span></h1><h2><span id="definition">Definition</span></h2><p><a href="https://imgtg.com/image/0L6XG"><img src="https://i.imgtg.com/2023/02/05/0L6XG.png" alt="0L6XG.png"></a></p><p><a href="https://imgtg.com/image/0LXz1"><img src="https://i.imgtg.com/2023/02/05/0LXz1.md.png" alt="0LXz1.md.png"></a></p><blockquote><p><strong>cycle：</strong></p><p>cycle可以和loop一起解释。在一个有向图中，从一个顶点开始，沿着边前进，最终回到起始顶点。如果发生了这种情况，表明我们走了一个圈，我们走过的路径形成了一个环（cycle），如果这些边形成了长度为 1 的环，我们称之为自环（loop）。</p><p><strong>path:</strong></p><p>path得和walk, trail 三个概念一起讲。各个点可以通过一条线直接相连，也可以通过一系列线间接相连。在一个图中的这一系列线就叫做一条“线路(walk)&quot; 。</p><p>如果线路没有重合的边，则称该线路为”轨迹(trail)“, 有可能有重复的点。</p><p>如果线路中每条线，每个点都各不相同，则称该线路为“途径(path)&quot;</p><p>path一定是trail，trail一定是walk, 有这种不可逆的关系“Irreversible relationship”</p><p>作者：爱学习的就是我<br>链接：<a href="https://www.zhihu.com/question/438157292/answer/1786986570">https://www.zhihu.com/question/438157292/answer/1786986570</a><br>来源：知乎</p></blockquote><p><a href="https://imgtg.com/image/0LuJI"><img src="https://i.imgtg.com/2023/02/05/0LuJI.md.png" alt="0LuJI.md.png"></a></p><blockquote><p>acyclic非循环的</p></blockquote><h2><span id="representation">Representation</span></h2><h3><span id="adjacency-matrix">Adjacency Matrix</span></h3><p><a href="https://imgtg.com/image/0LIlD"><img src="https://i.imgtg.com/2023/02/05/0LIlD.png" alt="0LIlD.png"></a></p><blockquote><p>The trick is to store the matrix as a 1-D array:        adj_mat [ n(n+1)/2 ] = { a11, a21, a22, …, an1, …, ann }The index for aij is  <strong>( i * ( i - 1 ) / 2 + j ).</strong></p></blockquote><h3><span id="adjacency-lists">Adjacency Lists</span></h3><p><a href="https://imgtg.com/image/0LCTF"><img src="https://i.imgtg.com/2023/02/05/0LCTF.png" alt="0LCTF.png"></a></p><p><strong>The order of nodes in each list does not matter.</strong></p><h3><span id="adjacency-multilists">Adjacency Multilists</span></h3><p><a href="https://imgtg.com/image/0LwZ6"><img src="https://i.imgtg.com/2023/02/05/0LwZ6.png" alt="0LwZ6.png"></a></p><h2><span id="topological-sort">Topological Sort</span></h2><p><a href="https://imgtg.com/image/0EMcP"><img src="https://i.imgtg.com/2023/02/05/0EMcP.png" alt="0EMcP.png"></a></p><h2><span id="最小生成树minimum-spanning-tree">最小生成树（Minimum Spanning Tree）</span></h2><p><a href="https://imgtg.com/image/0E6aC"><img src="https://i.imgtg.com/2023/02/05/0E6aC.md.png" alt="0E6aC.md.png"></a></p><h3><span id="贪心算法">贪心算法</span></h3><p><a href="https://imgtg.com/image/0E8eL"><img src="https://i.imgtg.com/2023/02/05/0E8eL.png" alt="0E8eL.png"></a></p><h4><span id="prim算法让一棵小树长大">Prim算法——让一棵小树长大</span></h4><p><a href="https://imgtg.com/image/0EXGi"><img src="https://i.imgtg.com/2023/02/05/0EXGi.png" alt="0EXGi.png"></a></p><p>与Dijkstra算法的区别与联系</p><p><a href="https://imgtg.com/image/0E3ht"><img src="https://i.imgtg.com/2023/02/05/0E3ht.md.png" alt="0E3ht.md.png"></a></p><p>对于稠密图比较合算</p><h4><span id="kruskal算法将森林合并成树">Kruskal算法——将森林合并成树</span></h4><h2><span id="拓扑排序">拓扑排序</span></h2><p><a href="https://imgtg.com/image/0GbiM"><img src="https://i.imgtg.com/2023/02/05/0GbiM.png" alt="0GbiM.png"></a></p><p>初始算法</p><p><a href="https://imgtg.com/image/0GktG"><img src="https://i.imgtg.com/2023/02/05/0GktG.png" alt="0GktG.png"></a></p><p>聪明算法</p><p><a href="https://imgtg.com/image/0Gx21"><img src="https://i.imgtg.com/2023/02/05/0Gx21.png" alt="0Gx21.png"></a></p><h3><span id="关键路径问题">关键路径问题</span></h3><p><a href="https://imgtg.com/image/0GhgD"><img src="https://i.imgtg.com/2023/02/05/0GhgD.md.png" alt="0GhgD.md.png"></a></p><h2><span id="最短路径问题">最短路径问题</span></h2><p><a href="https://imgtg.com/image/cuYPK"><img src="https://i.imgtg.com/2023/02/13/cuYPK.md.png" alt="cuYPK.md.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_复习笔记</title>
      <link href="/2023/02/05/DS-%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/02/05/DS-%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_复习笔记">DS_复习笔记</span></h1>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_TREE_TreeTraversalsAgain</title>
      <link href="/2023/02/04/DS-TREE-TreeTraversalsAgain/"/>
      <url>/2023/02/04/DS-TREE-TreeTraversalsAgain/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_tree_treetraversalsagain">DS_TREE_TreeTraversalsAgain</span></h1><blockquote><p>2h 其实是之前的作业题，之前尝试写过没写出来</p><p>这次只debug了一次还是蛮开心的</p></blockquote><h2><span id="description">Description</span></h2><p>An inorder binary tree traversal can be implemented in a non-recursive way with a stack.  For example, suppose that when a 6-node binary tree  (with the keys numbered from 1 to 6) is traversed, the stack operations  are: push(1); push(2); push(3); pop(); pop(); push(4); pop(); pop();  push(5); push(6); pop(); pop().  Then a unique binary tree (shown in  Figure 1) can be generated from this sequence of operations.  Your task  is to give the postorder traversal sequence of this tree.</p><p><img src="https://images.ptausercontent.com/30" alt="img"><br>Figure 1</p><h3><span id="input-specification">Input Specification:</span></h3><p>Each input file contains one test case.  For each case, the first line contains a positive integer N (≤30) which is the total number of nodes in a tree (and hence the nodes are numbered from 1 to N).  Then 2N lines follow, each describes a stack operation in the format: “Push X”  where X is the index of the node being pushed onto the stack; or “Pop”  meaning to pop one node from the stack.</p><h3><span id="output-specification">Output Specification:</span></h3><p>For each test case, print the postorder traversal sequence of the  corresponding tree in one line.  A solution is guaranteed to exist.  All the numbers must be separated by exactly one space, and there must be  no extra space at the end of the line.</p><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">6Push 1Push 2Push 3PopPopPush 4PopPopPush 5Push 6PopPop</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">3 4 2 6 5 1</code></pre><p>Code Size Limit</p><p>16 KB</p><p>Time Limit</p><p>400 ms</p><p>Memory Limit</p><p>64 MB</p><h2><span id="ideas">Ideas</span></h2><p>回顾《数据结构》课程“树的遍历”一节，我们知道树的前中后三中遍历方式其实访问结点的顺序是一样的，只不过打印结点的顺序不同</p><p><img src="https://i.imgtg.com/2023/01/13/QzAuF.png" alt="QzAuF.png"></p><blockquote><p>图源浙江大学MOOC课程《数据结构》</p></blockquote><p>因此我们知道，push的顺序其实就是先序遍历的顺序，因为push是第一次遇到结点</p><p>所以题目变成：<strong>已知树的先序和中序遍历，求后序遍历</strong></p><p>一般思路下，本题关键步骤就是两步，<strong>一根据先序中建树，二后序遍历</strong></p><p>如果递归的思维比较强，还可以<strong>直接得出后序遍历序列</strong></p><h3><span id="建树">建树</span></h3><p>回顾课程笔记，我们知道，根据中序遍历结果和先/后序遍历结果可以唯一确定一棵二叉树</p><p><a href="https://imgtg.com/image/04WAl"><img src="https://i.imgtg.com/2023/02/04/04WAl.md.png" alt="04WAl.md.png"></a></p><blockquote><p>图源浙江大学MOOC课程《数据结构》</p></blockquote><p>先序遍历序列中，对于每一个结点，它的遍历顺序一定是“该节点，左儿子，右儿子”。因此，先序遍历序列中，对于每一个结点，其都在其子树的左边；对于整棵树，最左一个元素必然是树的根节点。</p><p>中序遍历序列中，对于每一个结点，它的遍历顺序一定是“左儿子，该节点，右儿子”。因此，中序遍历序列中，对于每一个结点，左子树在其左边，右子树在其右边；对于整棵树，中序遍历序列的根节点的左边必然是左子树，右边必然是右子树。</p><p>因此，建树的思路便是：<strong>先序遍历序列的最左边是子树的根节点，在中序遍历序列中找到该结点，分出左右子树，再以同样方式递归建树</strong></p><h3><span id="直接">直接</span></h3><p>直接求出后序遍历序列其实也很简单</p><p>后序遍历序列的特征不再赘述。对于每一个子树的遍历序列，先序序列的最左边元素是后序序列的最右元素，即根结点可以直接确定。再递归通过中序确定左右子树即可。</p><blockquote><p>在这里递归的思维真的很美妙，我们只要把每个结点都看作一个二叉子树中的根结点，只关注根结点在三种遍历方式中的位置关系就可以递归得到后序遍历序列了。</p></blockquote><h2><span id="gains">Gains</span></h2><ol><li>遍历的代码都忘记了，复习一下<a href="https://xchms666.github.io/2023/01/13/DS-Tree/">树的笔记</a>遍历部分</li></ol><h2><span id="source-code-in-c">Source Code in C</span></h2><h3><span id="version-1">Version-1</span></h3><p>最原始的版本，比较丑陋</p><ol><li>全局变量太多</li><li>时间复杂度N^2^，因为查找处是线性查找</li></ol><pre><code class="language-C">//Tree Traversals Again#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define MaxSize 30int pre[MaxSize], in[MaxSize], post[MaxSize];int pi = 0;int ii = 0;int NodeNum = 0;typedef struct node&#123;int data;struct node* left;struct node* right;&#125; Tnode;typedef Tnode* root;int iStack[MaxSize];int itop = -1;void push(int t);int pop();int Find(int tar);void Read();root BuildTree(int pl, int pr, int il, int ir);void PostOrderTraversal(root Root);int main()&#123;root Root = (root)malloc(sizeof(struct node));Read();pi = ii = 0;Root = BuildTree(0,NodeNum-1,0,NodeNum-1);pi = 0;PostOrderTraversal(Root);printf(&quot;%d&quot;, post[0]);for(pi = 1; pi &lt; NodeNum; pi++)printf(&quot; %d&quot;, post[pi]);system(&quot;pause&quot;);return 0;&#125;void Read()&#123;scanf(&quot;%d\n&quot;, &amp;NodeNum);int i = 2*NodeNum;for(;i &gt; 0; i--)&#123;getchar();char c;int tmp;c = getchar();if(c == 'u')&#123;getchar();getchar();getchar();scanf(&quot;%d\n&quot;, &amp;tmp);pre[pi++] = tmp;push(tmp);&#125;else&#123;getchar();getchar();in[ii++] = pop();&#125;&#125;return ;&#125;root BuildTree(int pl, int pr, int il, int ir)&#123;int iindex = 0;root tmp = (root)malloc(sizeof(struct node));int rd = pre[pl];tmp-&gt;data = rd;tmp-&gt;left = NULL;tmp-&gt;right = NULL;iindex = Find(rd);int llen = iindex-il;int rlen = ir - iindex;if(llen &gt; 0)tmp-&gt;left = BuildTree(pl+1, pl+llen, il, iindex-1);if(rlen &gt; 0)tmp-&gt;right = BuildTree(pl+llen+1,pr,iindex+1,ir);return tmp;&#125;void PostOrderTraversal(root Root)&#123;if(Root)&#123;PostOrderTraversal(Root-&gt;left);PostOrderTraversal(Root-&gt;right);post[pi++] = Root-&gt;data;&#125;return ;&#125;void push(int t)&#123;iStack[++itop] = t;return ;&#125;int pop()&#123;return iStack[itop--];&#125;int Find(int tar)&#123;int index = 0;while(in[index++]!=tar);return --index;&#125;</code></pre><p><a href="https://imgtg.com/image/04zns"><img src="https://i.imgtg.com/2023/02/04/04zns.md.png" alt="04zns.md.png"></a></p><h3><span id="version-2">Version-2</span></h3><p>改进</p><ol><li>Find函数缩小了查找范围，从全体中序数组到子树中序数组</li><li>删除了一些不必要的全局变量</li><li>整理了一些代码</li></ol><pre><code class="language-c">//Tree Traversals Again-2#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define MaxSize 30int pre[MaxSize], in[MaxSize], post[MaxSize];int poi = 0;int NodeNum = 0;typedef struct node&#123;int data;struct node* left;struct node* right;&#125; Tnode;typedef Tnode* root;int Stack[MaxSize];int top = -1;void push(int t);int pop();int Find(int tar,int l,int r);void Read();root BuildTree(int pl, int pr, int il, int ir);void PostOrderTraversal(root Root);int main()&#123;int i;root Root = (root)malloc(sizeof(struct node));Read();Root = BuildTree(0,NodeNum-1,0,NodeNum-1);PostOrderTraversal(Root);printf(&quot;%d&quot;, post[0]);for(i = 1; i &lt; NodeNum; i++)printf(&quot; %d&quot;, post[i]);system(&quot;pause&quot;);return 0;&#125;void Read()&#123;int pri = 0;int ii = 0;scanf(&quot;%d\n&quot;, &amp;NodeNum);int i = 2*NodeNum;for(;i &gt; 0; i--)&#123;getchar();char c;int tmp;c = getchar();if(c == 'u')&#123;getchar();getchar();getchar();scanf(&quot;%d\n&quot;, &amp;tmp);pre[pri++] = tmp;push(tmp);&#125;else&#123;getchar();getchar();in[ii++] = pop();&#125;&#125;return ;&#125;root BuildTree(int pl, int pr, int il, int ir)&#123;int iindex = 0;root tmp = (root)malloc(sizeof(struct node));int rd = pre[pl];tmp-&gt;data = rd;tmp-&gt;left = NULL;tmp-&gt;right = NULL;iindex = Find(rd,il,ir);int llen = iindex-il;int rlen = ir - iindex;if(llen &gt; 0)tmp-&gt;left = BuildTree(pl+1, pl+llen, il, iindex-1);if(rlen &gt; 0)tmp-&gt;right = BuildTree(pl+llen+1,pr,iindex+1,ir);return tmp;&#125;void PostOrderTraversal(root Root)&#123;if(Root)&#123;PostOrderTraversal(Root-&gt;left);PostOrderTraversal(Root-&gt;right);post[poi++] = Root-&gt;data;&#125;return ;&#125;void push(int t)&#123;Stack[++top] = t;return ;&#125;int pop()&#123;return Stack[top--];&#125;int Find(int tar, int l, int r)&#123;int i = l-1;while(in[++i]!=tar &amp;&amp; i&lt;r);return i;&#125;</code></pre><p><a href="https://imgtg.com/image/04kwB"><img src="https://i.imgtg.com/2023/02/04/04kwB.md.png" alt="04kwB.md.png"></a></p><h3><span id="version-3">Version-3</span></h3><p>没有建树，直接求出后序遍历序列</p><pre><code class="language-c">//Tree Traversals Again-3#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define MaxSize 30int pre[MaxSize], in[MaxSize], post[MaxSize];int poi = 0;int NodeNum = 0;int Stack[MaxSize];int top = -1;void push(int t);int pop();int Find(int tar,int l,int r);void Read();void Solve(int prel, int inl, int pol, int len);int main()&#123;int i;Read();Solve(0,0,0,NodeNum);printf(&quot;%d&quot;, post[0]);for(i = 1; i &lt; NodeNum; i++)printf(&quot; %d&quot;, post[i]);system(&quot;pause&quot;);return 0;&#125;void Read()&#123;int pri = 0;int ii = 0;scanf(&quot;%d\n&quot;, &amp;NodeNum);int i = 2*NodeNum;for(;i &gt; 0; i--)&#123;getchar();char c;int tmp;c = getchar();if(c == 'u')&#123;getchar();getchar();getchar();scanf(&quot;%d\n&quot;, &amp;tmp);pre[pri++] = tmp;push(tmp);&#125;else&#123;getchar();getchar();in[ii++] = pop();&#125;&#125;return ;&#125;void push(int t)&#123;Stack[++top] = t;return ;&#125;int pop()&#123;return Stack[top--];&#125;int Find(int tar, int l, int r)&#123;int i = l-1;while(in[++i]!=tar &amp;&amp; i&lt;r);return i;&#125;void Solve(int prel, int inl, int pol, int len)&#123;if(len == 0)return ;if(len == 1)&#123;post[pol] = pre[prel];return ;&#125;int ln,rn,rix;post[pol+len-1] = pre[prel];rix = Find(pre[prel],inl,inl+len-1);ln = rix-inl;rn = inl+len-1-rix;Solve(prel+1,inl,pol,ln);Solve(prel+ln+1,rix+1,pol+ln,rn);return ;&#125;</code></pre><p><a href="https://imgtg.com/image/04bSg"><img src="https://i.imgtg.com/2023/02/04/04bSg.md.png" alt="04bSg.md.png"></a></p><h2><span id="reference">Reference</span></h2><ol><li><a href="https://blog.csdn.net/qq_40486952/article/details/105241944">Tree Traversals Again（递归和非递归遍历，根据先序中序建树、不建树也可解决）</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 遍历 </tag>
            
            <tag> 中序 </tag>
            
            <tag> 后序 </tag>
            
            <tag> 先序 </tag>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>驾考_科三</title>
      <link href="/2023/02/02/%E9%A9%BE%E8%80%83-%E7%A7%91%E4%B8%89/"/>
      <url>/2023/02/02/%E9%A9%BE%E8%80%83-%E7%A7%91%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<p>心里只有开车一件事</p><p>小心熄火！！！慢慢抬离合器</p><p>注意车速挡位的匹配！</p><p>保证安全！！！</p><p>靠边停车注意！</p><h2><span id="一号线">一号线</span></h2><h3><span id="直线行驶">直线行驶</span></h3><ul><li>开进去之前先调正</li><li>眼睛看远</li><li>20码以上两秒即可</li><li>直线行驶结束放掉油门</li><li>快看不到轮胎向左打一圈</li></ul><h3><span id="驶入道路">驶入道路</span></h3><ul><li>直线转过来那半圈透过围栏看一下有没有来车</li><li>先停再起步，小心熄火！！！</li></ul><h3><span id="右转">右转</span></h3><ul><li>停在右转口，等没车再启动</li></ul><h3><span id="加速">加速</span></h3><ul><li>过了斑马线就加速</li><li>快过完桥开始减速换三档</li></ul><h3><span id="掉头">掉头</span></h3><ul><li>车身不要探出去太多</li><li>方向提前打到底</li></ul><h3><span id="超车">超车</span></h3><ul><li>如果有很多车暂时超不了，就直接停掉</li><li>方向盘转小一点</li></ul><h3><span id="靠边停车">靠边停车</span></h3><ul><li>转弯过来有个路口可能有车，注意避让</li><li>一开始距离线不要太近</li><li>在路口停下时看一下白线位置</li><li>圆点压在白线里侧</li></ul><h2><span id="二号线">二号线</span></h2><h3><span id="直线行驶">直线行驶</span></h3><ul><li>开进去之前先调正</li><li>眼睛看远</li><li>20码以上两秒即可</li><li>直线行驶结束放掉油门</li><li>快看不到轮胎向左打一圈</li></ul><h3><span id="驶入道路">驶入道路</span></h3><ul><li>直线转过来那半圈透过围栏看一下有没有来车</li><li>先停再起步，小心熄火！！！</li></ul><h3><span id="直行">直行</span></h3><ul><li>两个路口，该停则停</li><li>起步小心熄火！！！</li></ul><h3><span id="超车">超车</span></h3><ul><li>如果有很多车暂时超不了，就直接停掉</li><li>方向盘转小一点</li></ul><h3><span id="右转">右转</span></h3><ul><li>若左转为红灯则可转</li><li>第二条虚线处进入右转车道</li></ul><h3><span id="掉头">掉头</span></h3><ul><li>掉头先右转到小道，回直</li><li>记得开左转向灯！！！</li></ul><h3><span id="加速">加速</span></h3><ul><li>掉过头来就加速</li><li>喊左转了就减速换挡</li></ul><h3><span id="靠边停车">靠边停车</span></h3><ul><li>转弯过来有个路口可能有车，注意避让</li><li>一开始距离线不要太近</li><li>在路口停下时看一下白线位置</li><li>圆点压在白线里侧</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DS_TREE_LevelOrderTraversal</title>
      <link href="/2023/01/31/DS-TREE-LevelOrderTraversal/"/>
      <url>/2023/01/31/DS-TREE-LevelOrderTraversal/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_tree_levelordertraversal">DS_TREE_LevelOrderTraversal</span></h1><blockquote><p>0.5h</p></blockquote><h2><span id="description">Description</span></h2><p>Write a routine to list out the nodes of a binary tree in  “level-order”.  List the root, then nodes at depth 1, followed by nodes  at depth 2, and so on.  You must do this in linear time.</p><h3><span id="format-of-functions">Format of functions:</span></h3><pre><code class="language-c++">void Level_order ( Tree T, void (*visit)(Tree ThisNode) );</code></pre><p>where <code>void (*visit)(Tree ThisNode)</code> is a function that handles <code>ThisNode</code> being visited by <code>Level_order</code>, and <code>Tree</code> is defined as the following:</p><pre><code class="language-c++">typedef struct TreeNode *Tree;struct TreeNode &#123;    ElementType Element;    Tree  Left;    Tree  Right;&#125;;</code></pre><h3><span id="sample-program-of-judge">Sample program of judge:</span></h3><pre><code class="language-c++">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define MaxTree 10 /* maximum number of nodes in a tree */typedef int ElementType;typedef struct TreeNode *Tree;struct TreeNode &#123;    ElementType Element;    Tree  Left;    Tree  Right;&#125;;Tree BuildTree(); /* details omitted */void PrintNode( Tree NodePtr )&#123;   printf(&quot; %d&quot;, NodePtr-&gt;Element);&#125;void Level_order ( Tree T, void (*visit)(Tree ThisNode) );int main()&#123;    Tree T = BuildTree();    printf(&quot;Level-order:&quot;);    Level_order(T, PrintNode);    return 0;&#125;/* Your function will be put here */</code></pre><h3><span id="sample-output-for-the-tree-shown-in-the-figure">Sample Output (for the tree shown in the figure):</span></h3><p><img src="https://images.ptausercontent.com/36" alt="img"></p><pre><code>Level-order: 3 5 6 1 8 10 9</code></pre><p>代码长度限制</p><p>16 KB</p><p>时间限制</p><p>400 ms</p><p>内存限制</p><p>64 MB</p><h2><span id="gains">Gains</span></h2><p>以后用队列就将front rear初始化为0，先入队一个值，后面入队出队都是先自加再操作</p><h2><span id="source-code-in-c">Source Code in C</span></h2><pre><code class="language-c">/* Your function will be put here */Tree que[MaxTree];int front = -1;int tail = -1;void push(Tree);Tree pop();void Level_order ( Tree T, void (*visit)(Tree ThisNode) )&#123;Tree tmp = (Tree)malloc(sizeof(struct TreeNode));tmp = T;push(tmp);while(front != tail)&#123;tmp = pop();visit(tmp);if(tmp-&gt;Left != NULL)push(tmp-&gt;Left);if(tmp-&gt;Right != NULL)push(tmp-&gt;Right);&#125;return ;&#125;void push(Tree node)&#123;if(node == NULL)return;//tail = (tail + 1 + MaxTree)%MaxTree;que[++tail] = node;return ;&#125;Tree pop()&#123;Tree tmp = (Tree)malloc(sizeof(struct TreeNode));//front = (front + 1 + MaxTree)%MaxTree;简单题目就不考虑双端队列、队列满了和为空的情况了tmp = que[++front];return tmp;&#125;</code></pre><h2><span id="reference">Reference</span></h2><p>相当于是这道题的简化版<a href="https://xchms666.github.io/2023/01/28/DS-TREE-ListLeaves/">List Leaves</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
            <tag> 树 </tag>
            
            <tag> 层序遍历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_TREE_ListLeaves</title>
      <link href="/2023/01/28/DS-TREE-ListLeaves/"/>
      <url>/2023/01/28/DS-TREE-ListLeaves/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_tree_listleaves">DS_TREE_ListLeaves</span></h1><blockquote><p>1h</p></blockquote><h2><span id="description">Description</span></h2><p>Given a tree, you are supposed to list all the leaves in the order of top down, and left to right.</p><h3><span id="input-specification">Input Specification:</span></h3><p>Each input file contains one test case.  For each case, the first line gives a positive integer N (≤10) which is the total number of nodes in the tree – and hence the nodes are numbered from 0 to N−1.  Then N lines follow, each corresponds to a node, and gives the indices of the  left and right children of the node.  If the child does not exist, a “-” will be put at the position.  Any pair of children are separated by a  space.</p><h3><span id="output-specification">Output Specification:</span></h3><p>For each test case, print in one line all the leaves’ indices in the  order of top down, and left to right.  There must be exactly one space  between any adjacent numbers, and no extra space at the end of the line.</p><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">81 -- -0 -2 7- -- -5 -4 6</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">4 1 5</code></pre><p>代码长度限制</p><p>16 KB</p><p>时间限制</p><p>400 ms</p><p>内存限制</p><p>64 MB</p><h2><span id="idea">Idea</span></h2><p>最简单的方法就是把所有左右子树都是0的节点输出</p><p>但叶子节点的输出顺序不建树是看不出来的</p><blockquote><p>in the order of top down, and left to right</p></blockquote><h2><span id="gain">Gain</span></h2><ol><li>scanf(&quot;%d&quot;)是不会把一般字符读进来的</li><li>结构体数组可以这样写</li></ol><pre><code class="language-c">#define MAX 10struct Node&#123;int left,right;&#125;T[MAX];</code></pre><h2><span id="process">Process</span></h2><ul><li>先扒段代码看看测试点</li></ul><p><a href="https://imgtg.com/image/SfCaj"><img src="https://i.imgtg.com/2023/01/28/SfCaj.md.png" alt="SfCaj.md.png"></a></p><p>稍微改了下就过了，还是比较简单滴~</p><p>总体思路就是建树，层序遍历，记录树叶结点，然后打印</p><p><a href="https://imgtg.com/image/0ONHl"><img src="https://i.imgtg.com/2023/01/31/0ONHl.md.png" alt="0ONHl.md.png"></a></p><h2><span id="source-code">Source Code</span></h2><pre><code class="language-c">#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define MaxSize 10typedef struct Node&#123;int data;//没办法，为了pop的时候知道下标，只能这样子惹int left;int right;&#125;Tnode;typedef struct Node* tree;Tnode t[MaxSize];Tnode Que[MaxSize];int front = 0;int tail = 0;int flag[MaxSize] = &#123;0&#125;;int leaves[MaxSize] = &#123;0&#125;;int ctl = 0;void push(Tnode node);Tnode pop();void LevTra(tree t, int size);int main()&#123;int size,i,top;scanf(&quot;%d&quot;,&amp;size);getchar();for(i = 0; i &lt; size; i++)//这一步读入并且将是他人儿子的结点标出来，从而找到头节点&#123;char cl,cr;if(i &lt; size-1)scanf(&quot;%c %c\n&quot;, &amp;cl,&amp;cr);elsescanf(&quot;%c %c&quot;, &amp;cl,&amp;cr);if(cl == '-')t[i].left = -1;elset[i].left = cl - '0';if(cr == '-')t[i].right = -1;elset[i].right = cr - '0';t[i].data = i;if(t[i].left != -1)flag[t[i].left] = 1;if(t[i].right != -1)flag[t[i].right] = 1;&#125;i = 0;while(i++ &lt; size &amp;&amp; flag[i]==1);top = i;//头节点的下标i = 0;push(t[top]);LevTra(t,size);for(i = 0; i &lt; ctl-1;i++)printf(&quot;%d &quot;, leaves[i]);printf(&quot;%d&quot;, leaves[i]);//system(&quot;pause&quot;);return 0;&#125;void LevTra(tree t, int size)&#123;Tnode tmp;int i,j = 0;for(i = 0; i &lt; size; i++)&#123;tmp = pop();if(tmp.left != -1)push(t[tmp.left]);if(tmp.right != -1)push(t[tmp.right]);if(tmp.left == -1 &amp;&amp; tmp.right == -1)&#123;leaves[j++] = tmp.data;ctl++;&#125;&#125;&#125;void push(Tnode node)&#123;Que[front] = node;front = (front-1+MaxSize)%MaxSize;return ;&#125;Tnode pop()&#123;Tnode tmp;//if(front == tail)tmp = Que[tail];tail = (tail-1+MaxSize)%MaxSize;return tmp;&#125;</code></pre><h2><span id="reference">Reference</span></h2>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
            <tag> 树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>减肥心得总结</title>
      <link href="/2023/01/28/%E5%87%8F%E8%82%A5%E5%BF%83%E5%BE%97%E6%80%BB%E7%BB%93/"/>
      <url>/2023/01/28/%E5%87%8F%E8%82%A5%E5%BF%83%E5%BE%97%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1><span id="减肥心得总结">减肥心得总结</span></h1><blockquote><p>这个寒假断断续续减了有10多斤了，感觉过程也没有太痛苦煎熬，因为学业事情也还比较多，所以也基本没有运动，不过减肥成果还是比较显著的，并且经历了年初的大吃大喝，也只重了0.4kg。所以现在想把减肥心得总结一下，供以后的自己以及其他想要比较快速减肥的朋友们借鉴参考。</p></blockquote><h2><span id="最关键的心法">最关键的心法</span></h2><p>先知道，明白了原理，减肥才会事半功倍，那么那些所谓的减肥秘诀条条框框（比如过午不食，晚餐不能吃早饭必须吃，只能吃全麦面包沙拉之类的“智商税”）就无机可乘了~</p><blockquote><p>减肥不是无脑操作！！！</p></blockquote><blockquote><p>减肥不是无脑操作！！！</p></blockquote><blockquote><p>减肥不是无脑操作！！！</p></blockquote><p><strong>我不吃！！！</strong></p><p>减肥本质就是制造热量缺口，摄入小于消耗，从而促使机体</p><p><strong>感受身体的反馈</strong></p><p>我高考结束的那个暑假也减肥过，那次瘦了8斤，但是很快就暴饮暴食反弹回去了。到大一下的寒假，我从开学前47kg长到了57kg。因为当时我减肥方法极其“变态”——每天两个小时高强度运动，吃饭基本是一小块全麦面包加一点蛋白质和蔬菜，总体积就一小碗的样子。</p><p>而这个寒假， 我基本正常吃，只不过量少一点，并且精制碳水含量极少，运动只做一些简单瘦腿，跳一跳喜欢的舞，做起来也不累。因此，一直能坚持，瘦了10多斤。</p><p>我偶尔也会吃些零食（我最喜欢薯片力！）其实只要控制好量，问题都不大的。但如果你控制不好，那就一口都别吃！因为不可能只吃一口！</p><p><strong>保持良好的心态</strong></p><p>把减肥尽量生活化，不要在意这件事情，也不要因为偶尔的体重波动而心态不好。只要一直坚持，一定会有成果的！</p><p>这不是口号，这是科学的结果。</p><h2><span id="底层逻辑">底层逻辑</span></h2><h3><span id="消耗总量">消耗总量</span></h3><p>基础代谢+日常消耗+运动消耗</p><h4><span id="基础代谢">基础代谢</span></h4><p>661+9.6*体重(kg)+1.72*身高(cm)-4.7*年龄</p><p>肌肉量越高，基础代谢越高。<br>保持规律运动，基础代谢会变高<br>每周5次1小时以上的中高强度运动，会让基础代谢提高至1.5-1.75倍。<br>所以减肥中，力量训练比有氧训练更有效。</p><h4><span id="日常消耗">日常消耗</span></h4><p>走路，抬手，思考，逛街，做家务等动起来的活动</p><p>读书、学习是非常消耗体力的事</p><blockquote><p>所以要减肥就不能懒惰！动起来！玩起来！学起来！</p></blockquote><h4><span id="运动消耗">运动消耗</span></h4><p>体育运动</p><h3><span id="摄入总量">摄入总量</span></h3><p>碳水化物-》糖原<br>蛋白质-》氨基酸<br>脂肪-》脂肪酸</p><h3><span id="热量赤字">热量赤字</span></h3><p>每日500大卡热量赤字最佳<br>不可超过1000大卡</p><h3><span id="脂肪分解">脂肪分解</span></h3><p>主要代谢物室二氧化碳和水，<br>脂肪代谢主要是通过呼吸和尿液。<br>（运动出汗主要是为了调节体温）</p><h3><span id="减肥制造热量赤字">减肥=制造热量赤字</span></h3><p>减肥=制造热量赤字=基础代谢+日常消耗+运动消化-摄入总量</p><h2><span id="其他">其他</span></h2><ol><li>如果有刷小红书的习惯的话，可以关注一两个减肥博主，听她们天天给你打鸡血，有时候真的有用！而且她们分享的一些心得体会也有可能帮到你。</li><li>摄入总量不宜过小摄入。不要低于基础代谢1-1.2倍，因为摄入过低会造成基础代谢的下降、激素水平紊乱、内分泌紊乱，极大影响健康。</li><li>减肥的方法，越简单越容易坚持，不必研究太多也不必跟风很多博主，选择了适合自己的一直做下去是最重要的！</li><li>营养均衡配比就可以了，倒也不必精确计算。如果身体哪方面元素特别缺少的话可以注意多吃一点补充~</li><li>保持良好的昼夜节律也必不可少，推荐看这个视频<a href="https://www.bilibili.com/video/BV1xY4y1r7Ar/?spm_id_from=333.337.search-card.all.click&amp;vd_source=f6250a4a23a25f240430e31380d43ca7">高颜值好状态的底层逻辑</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode_53</title>
      <link href="/2023/01/28/LeetCode-53/"/>
      <url>/2023/01/28/LeetCode-53/</url>
      
        <content type="html"><![CDATA[<h1><span id="leetcode_53">LeetCode_53</span></h1><h2><span id="description">Description</span></h2><p><a href="https://leetcode.cn/problems/maximum-subarray/description/">53.最大子数组和</a></p><p>给你一个整数数组 <code>nums</code> ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p><p><strong>子数组</strong> 是数组中的一个连续部分。</p><p><strong>示例 1：</strong></p><pre><code>输入：nums = [-2,1,-3,4,-1,2,1,-5,4]输出：6解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。</code></pre><p><strong>示例 2：</strong></p><pre><code>输入：nums = [1]输出：1</code></pre><p><strong>示例 3：</strong></p><pre><code>输入：nums = [5,4,-1,7,8]输出：23</code></pre><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 105</code></li><li><code>-104 &lt;= nums[i] &lt;= 104</code></li></ul><p>**进阶：**如果你已经实现复杂度为 <code>O(n)</code> 的解法，尝试使用更为精妙的 <strong>分治法</strong> 求解。</p><h2><span id="gain">Gain</span></h2><ul><li>dp[i]表示第i个子问题</li></ul><h2><span id="process">Process</span></h2><ul><li>暴力求解超时了捏</li></ul><p><a href="https://imgtg.com/image/SYLft"><img src="https://i.imgtg.com/2023/01/28/SYLft.md.png" alt="SYLft.md.png"></a></p><ul><li>参考了大佬代码，使用动态规划解题</li></ul><p><a href="https://imgtg.com/image/SYHpX"><img src="https://i.imgtg.com/2023/01/28/SYHpX.md.png" alt="SYHpX.md.png"></a></p><h2><span id="reference">Reference</span></h2><ol><li><a href="https://leetcode.cn/problems/maximum-subarray/solutions/9058/dong-tai-gui-hua-fen-zhi-fa-python-dai-ma-java-dai/">大佬题解</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 二分法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语_AmericanAccentTraining</title>
      <link href="/2023/01/21/%E8%8B%B1%E8%AF%AD-AmericanAccentTraining/"/>
      <url>/2023/01/21/%E8%8B%B1%E8%AF%AD-AmericanAccentTraining/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DS_HEAP&amp;STACK_EvaluatePostfixExpression</title>
      <link href="/2023/01/19/DS-HEAP-STACK-EvaluatePostfixExpression/"/>
      <url>/2023/01/19/DS-HEAP-STACK-EvaluatePostfixExpression/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_heapampstack_evaluatepostfixexpression">DS_HEAP&amp;STACK_EvaluatePostfixExpression</span></h1><blockquote><p>1:00-h</p></blockquote><h2><span id="description">Description</span></h2><p>Write a program to evaluate a postfix expression.  You only have to handle four kinds of operators: +, -, x, and /.</p><h3><span id="format-of-functions">Format of functions:</span></h3><pre><code class="language-c++">ElementType EvalPostfix( char *expr );</code></pre><p>where <code>expr</code> points to a string that stores the postfix  expression.  It is guaranteed that there is exactly one space between  any two operators or operands.<br>The function <code>EvalPostfix</code> is supposed to return the value of the expression.  If it is not a legal postfix expression, <code>EvalPostfix</code> must return a special value <code>Infinity</code> which is defined by the judge program.</p><h3><span id="sample-program-of-judge">Sample program of judge:</span></h3><pre><code class="language-c++">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;typedef double ElementType;#define Infinity 1e8#define Max_Expr 30   /* max size of expression */ElementType EvalPostfix( char *expr );int main()&#123;    ElementType v;    char expr[Max_Expr];    gets(expr);    v = EvalPostfix( expr );    if ( v &lt; Infinity )        printf(&quot;%f\n&quot;, v);    else        printf(&quot;ERROR\n&quot;);    return 0;&#125;/* Your function will be put here */</code></pre><h3><span id="sample-input-1">Sample Input 1:</span></h3><pre><code class="language-in">11 -2 5.5 * + 23 7 / -</code></pre><h3><span id="sample-output-1">Sample Output 1:</span></h3><pre><code class="language-out">-3.285714</code></pre><h3><span id="sample-input-2">Sample Input 2:</span></h3><pre><code>11 -2 5.5 * + 23 0 / -</code></pre><h3><span id="sample-output-2">Sample Output 2:</span></h3><pre><code>ERROR</code></pre><h3><span id="sample-input-3">Sample Input 3:</span></h3><pre><code>11 -2 5.5 * + 23 7 / - *</code></pre><h3><span id="sample-output-3">Sample Output 3:</span></h3><pre><code>ERROR</code></pre><h3><span id="special-thanks-to-sirou-zhu-朱思柔-for-providing-a-valuable-test-case">Special thanks to Sirou Zhu (朱思柔) for providing a valuable test case.</span></h3><p>代码长度限制</p><p>16 KB</p><p>时间限制</p><p>400 ms</p><p>内存限制</p><p>64 MB</p><h2><span id="analyse">Analyse</span></h2><p>注意</p><ol><li>运算错误时，返回Infinity</li><li>max size of expression is 30</li><li>读入的是字符数组，而返回值是double，注意数字的从字符到整型的转换</li></ol><p>还是比较简单的题目，建立好数据结构stack以及push pop 的操作，然后遇到数字就push，遇到操作符就pop两个数字出来运算，再将结果push回去。</p><p>不过这个是否legal的判断我目前只想到除数为0的情况可以判断，要是比如运算符或运算数少了，这种就有点麻烦耶</p><h2><span id="gains">Gains</span></h2><h3><span id="knowledge">Knowledge</span></h3><h4><span id="gets的用法">gets的用法</span></h4><p>函数原型</p><pre><code class="language-c"># include &lt;stdio.h&gt;char *gets(char *str);</code></pre><ol><li>参数类型为 char* 型，即 str 可以是一个字符指针变量名，也可以是一个<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84&amp;spm=1001.2101.3001.7020">字符数组</a>名。</li><li>它读取整行输入，直至遇到换行符，然后<strong>丢弃换行符</strong>，储存其余字符，并在其末尾添加一个空字符使其成为一个字符串。</li></ol><h4><span id="switch的用法">switch的用法</span></h4><p>在C中NULL是强制类型转换为void *的0</p><h3><span id="notice">Notice</span></h3><h2><span id="process">Process</span></h2><ul><li>这应该是基本的逻辑都错了</li></ul><p><a href="https://imgtg.com/image/QuR31"><img src="https://i.imgtg.com/2023/01/19/QuR31.md.png" alt="QuR31.md.png"></a></p><ul><li>零输出是怎么做到的TATAAAAAAAAAAAAAT</li></ul><p><a href="https://imgtg.com/image/QuDtD"><img src="https://i.imgtg.com/2023/01/19/QuDtD.png" alt="QuDtD.png"></a></p><ul><li>不调不知道，一调吓一跳。原来double类型存成char真的是一点点存的，小数点，负号都单独存的/(ㄒoㄒ)/~~</li></ul><p><a href="https://imgtg.com/image/QuEW6"><img src="https://i.imgtg.com/2023/01/19/QuEW6.png" alt="QuEW6.png"></a></p><ul><li>这样使用为什么不行呢？——这里pEnd指针没有初始化就使用了！！！</li></ul><p><a href="https://imgtg.com/image/Qul2S"><img src="https://i.imgtg.com/2023/01/19/Qul2S.png" alt="Qul2S.png"></a></p><p><a href="https://imgtg.com/image/QujbN"><img src="https://i.imgtg.com/2023/01/19/QujbN.png" alt="QujbN.png"></a></p><ul><li>这答案一会对一会错的捏——这里有个case 的break忘记了，就把运算符的ascii码当作运算数push进栈里面了</li></ul><p><a href="https://imgtg.com/image/SByaU"><img src="https://i.imgtg.com/2023/01/21/SByaU.md.png" alt="SByaU.md.png"></a></p><p>不行这个题我有点晕乎乎的了，缓几天再来！！！</p><h2><span id="reference">Reference</span></h2><ol><li><p><a href="https://blog.csdn.net/wowocpp/article/details/119888876?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167410521516800217041735%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167410521516800217041735&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-119888876-null-null.142%5Ev71%5Einsert_chatgpt,201%5Ev4%5Eadd_ask&amp;utm_term=gets&amp;spm=1018.2226.3001.4187">gets的用法</a></p></li><li><p><a href="https://blog.csdn.net/hunzhizi/article/details/106440589?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167410521516800217041735%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167410521516800217041735&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-106440589-null-null.142%5Ev71%5Einsert_chatgpt,201%5Ev4%5Eadd_ask&amp;utm_term=gets&amp;spm=1018.2226.3001.4187">C语言中gets_s(),gets(),fgets（）函数的比较</a></p></li><li><p><a href="https://blog.csdn.net/weixin_44949135/article/details/115174682?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=c%E8%AF%AD%E8%A8%80switch%E7%9A%84%E7%94%A8%E6%B3%95&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-115174682.142%5Ev71%5Einsert_chatgpt,201%5Ev4%5Eadd_ask&amp;spm=1018.2226.3001.4187">switch的用法</a></p></li><li><p><a href="https://blog.csdn.net/qq_20222919/article/details/122975526?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167411012116782429737664%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167411012116782429737664&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-122975526-null-null.142%5Ev71%5Einsert_chatgpt,201%5Ev4%5Eadd_ask&amp;utm_term=%E5%AD%97%E7%AC%A6%E8%BD%AC%E6%8D%A2%E6%88%90%E6%B5%AE%E7%82%B9%E6%95%B0&amp;spm=1018.2226.3001.4187">字符串转浮点函数</a></p></li><li><p><a href="https://blog.csdn.net/weixin_42031299/article/details/115707605?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167411418916782427465432%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167411418916782427465432&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-115707605-null-null.142%5Ev71%5Einsert_chatgpt,201%5Ev4%5Eadd_ask&amp;utm_term=null&amp;spm=1018.2226.3001.4187">NULL</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
            <tag> stack </tag>
            
            <tag> postfix </tag>
            
            <tag> calculator </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_LIST_ReverseLinkedList</title>
      <link href="/2023/01/19/DS-LIST-ReverseLinkedList/"/>
      <url>/2023/01/19/DS-LIST-ReverseLinkedList/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_list_reverselinkedlist">DS_LIST_ReverseLinkedList</span></h1><blockquote><p>0.5h</p></blockquote><h2><span id="description">Description</span></h2><p>Write a nonrecursive procedure to reverse a singly linked list in O(N) time using constant extra space.</p><h3><span id="format-of-functions">Format of functions:</span></h3><pre><code class="language-c++">List Reverse( List L );</code></pre><p>where <code>List</code> is defined as the following:</p><pre><code class="language-c++">typedef struct Node *PtrToNode;typedef PtrToNode List;typedef PtrToNode Position;struct Node &#123;    ElementType Element;    Position Next;&#125;;</code></pre><p>The function <code>Reverse</code> is supposed to return the reverse linked list of <code>L</code>, with a dummy header.</p><h3><span id="sample-program-of-judge">Sample program of judge:</span></h3><pre><code class="language-c++">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;typedef int ElementType;typedef struct Node *PtrToNode;typedef PtrToNode List;typedef PtrToNode Position;struct Node &#123;    ElementType Element;    Position Next;&#125;;List Read(); /* details omitted */void Print( List L ); /* details omitted */List Reverse( List L );int main()&#123;    List L1, L2;    L1 = Read();    L2 = Reverse(L1);    Print(L1);    Print(L2);    return 0;&#125;/* Your function will be put here */</code></pre><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">51 3 4 5 2</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">2 5 4 3 12 5 4 3 1</code></pre><p>代码长度限制</p><p>16 KB</p><p>时间限制</p><p>400 ms</p><p>内存限制</p><p>64 MB</p><h2><span id="analyse">Analyse</span></h2><p>注意几个关键点：</p><ol><li>nonrecursive procedure</li><li>O(N) time</li><li>constant extra space</li><li>with a dummy header</li><li>从输出结果来看，要把原线性表也反向</li></ol><p>看要求，那应该是用堆栈</p><p>先遍历一遍L1，把元素压入堆栈，然后再遍历一遍L1，用出栈元素给它</p><h2><span id="process">Process</span></h2><ul><li>第一次提交，遍历的判断标准是L-&gt;Next ！= NULL 这样就丢掉了最后一个元素</li></ul><p><a href="https://imgtg.com/image/Quqag"><img src="https://i.imgtg.com/2023/01/19/Quqag.md.png" alt="Quqag.md.png"></a></p><p><a href="https://imgtg.com/image/QuzUC"><img src="https://i.imgtg.com/2023/01/19/QuzUC.md.png" alt="QuzUC.md.png"></a></p><h2><span id="source-code">Source Code</span></h2><h3><span id="version-1">Version-1</span></h3><pre><code class="language-c">List Reverse( List L )&#123;int Stack[10000] = &#123;0&#125;;int top = -1;List Head = L;//目前Head是dummy head nodeL = L-&gt;Next;while(L != NULL)&#123;Stack[++top] = L-&gt;Element;L = L-&gt;Next;&#125;L = Head-&gt;Next;while(top&gt;=0)&#123;L-&gt;Element = Stack[top--];L = L-&gt;Next;&#125;L = Head;return L;&#125;</code></pre><p>其实这版没有考虑空链表的情况，但是在测试点通过了</p><p>参考力扣上的反转链表，又写了两个版本</p><h3><span id="version-2">Version-2</span></h3><p>省空间版</p><p>与PTA原题的区别就在于这个没有dummy head node</p><pre><code class="language-c">/** * Definition for singly-linked list. * struct ListNode &#123; *     int val; *     struct ListNode *next; * &#125;; */struct ListNode* reverseList(struct ListNode* head)&#123;    if(head == NULL || head-&gt;next == NULL)  return head;    struct ListNode* pre = NULL;    struct ListNode* cur = head;    struct ListNode* next = NULL;    while(cur != NULL)    &#123;        next = cur-&gt;next;        cur-&gt;next = pre;        pre = cur;        cur = next;    &#125;    return pre;&#125;</code></pre><p><a href="https://imgtg.com/image/QuAtU"><img src="https://i.imgtg.com/2023/01/19/QuAtU.md.png" alt="QuAtU.md.png"></a></p><h3><span id="version-3">Version-3</span></h3><p>递归实现版</p><p><a href="https://imgtg.com/image/QuKjY"><img src="https://i.imgtg.com/2023/01/19/QuKjY.md.png" alt="QuKjY.md.png"></a></p><p><a href="https://imgtg.com/image/QuvWv"><img src="https://i.imgtg.com/2023/01/19/QuvWv.md.png" alt="QuvWv.md.png"></a></p><pre><code class="language-c">/** * Definition for singly-linked list. * struct ListNode &#123; *     int val; *     struct ListNode *next; * &#125;; */struct ListNode* reverseList(struct ListNode* head)&#123;    if(head == NULL || head-&gt;next == NULL)  return head;    struct ListNode* reversehead = reverseList(head-&gt;next);    head-&gt;next-&gt;next = head;    head-&gt;next = NULL;    return reversehead;&#125;</code></pre><p><a href="https://imgtg.com/image/Quygq"><img src="https://i.imgtg.com/2023/01/19/Quygq.md.png" alt="Quygq.md.png"></a></p><h2><span id="reference">Reference</span></h2><ol><li><a href="https://blog.csdn.net/Real_Fool_/article/details/113852222?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167409122516800192225508%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167409122516800192225508&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-113852222-null-null.142%5Ev71%5Einsert_chatgpt,201%5Ev4%5Eadd_ask&amp;utm_term=%E9%98%9F%E5%88%97&amp;spm=1018.2226.3001.4187">队列堆栈</a></li><li><a href="https://xiaozhuanlan.com/topic/6480135279">反转链表</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
            <tag> dummy head node </tag>
            
            <tag> 栈 </tag>
            
            <tag> 线性表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法_柳神刷题经验</title>
      <link href="/2023/01/16/%E7%AE%97%E6%B3%95-%E6%9F%B3%E7%A5%9E%E5%88%B7%E9%A2%98%E7%BB%8F%E9%AA%8C/"/>
      <url>/2023/01/16/%E7%AE%97%E6%B3%95-%E6%9F%B3%E7%A5%9E%E5%88%B7%E9%A2%98%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1><span id="算法_柳神刷题经验">算法_柳神刷题经验</span></h1><blockquote><p>声明：本文内容为文章《PAT | 蓝桥 | LeetCode学习路径 &amp; 刷题经验 by 柳婼》的学习笔记，图片均为原文截图</p></blockquote><blockquote><p>一点点小感慨：</p><ol><li>柳神真的好善于总结啊。从测试点不过的常见错误到自己常犯的错误，好用的函数，甚至不会的英文单词都总结了，这样才真正能发挥一道题目的最大价值。</li><li>为了提升速度，甚至学了双拼法输入。确实一点点的进步和改变都可以变得更好捏~(￣▽￣)~*不要小看微小的进步！</li></ol></blockquote><h2><span id="概念">概念</span></h2><ul><li><a href="https://imgtg.com/image/QE7LG"><img src="https://i.imgtg.com/2023/01/16/QE7LG.png" alt="QE7LG.png"></a></li><li>Google中国的要求是：甲级前15名、顶级前20名且80分以上，2年有效，可以免除笔试，直接进⼊Google的⾯试阶段</li></ul><h2><span id="编程心得">编程心得</span></h2><h3><span id="自己写代码vs看他人代码">自己写代码VS看他人代码</span></h3><ul><li>写完后去学习更优代码</li><li>卡bug实在做不出来去学习更优代码</li><li>用更优方法再写一遍</li></ul><h3><span id="记笔记">记笔记</span></h3><blockquote><p>双拼输入法有点意思的~~</p></blockquote><ol><li>不认识的英文记录</li><li>对于某⼀类题型或者某个特殊的有技巧套路的题型的解题模式，文字+代码（确实要描述一下自己的or自己理解别人的思路和方法，做到对自己写的内容思路清晰）<a href="https://imgtg.com/image/QEAPD"><img src="https://i.imgtg.com/2023/01/17/QEAPD.md.png" alt="QEAPD.md.png"></a></li><li>关于编程语法⽅⾯的⼩技巧，或者⾃⼰容易忘记的好⽤的函数写法，或者提醒⾃⼰做题应该注意的点<a href="https://imgtg.com/image/QEK9F"><img src="https://i.imgtg.com/2023/01/17/QEK9F.png" alt="QEK9F.png"></a></li></ol><h2><span id="pat甲级">PAT甲级</span></h2><ul><li>学C++</li><li>适应编程环境</li></ul><h3><span id="可暂时跳过的题">可暂时跳过的题</span></h3><h4><span id="基本不出现">基本不出现</span></h4><p><a href="https://imgtg.com/image/QENu1"><img src="https://i.imgtg.com/2023/01/16/QENu1.png" alt="QENu1.png"></a></p><h4><span id="出现很少可不复习">出现很少，可不复习</span></h4><p><a href="https://imgtg.com/image/QErzI"><img src="https://i.imgtg.com/2023/01/16/QErzI.png" alt="QErzI.png"></a></p><h3><span id="考试策略">考试策略</span></h3><h4><span id="学习时">学习时</span></h4><ul><li>前两道题45分——完全AC</li><li>后两道题——尽量多写</li></ul><h4><span id="考试前">考试前</span></h4><p><a href="https://imgtg.com/image/QEH9S"><img src="https://i.imgtg.com/2023/01/17/QEH9S.md.png" alt="QEH9S.md.png"></a></p><p><a href="https://imgtg.com/image/QEEUN"><img src="https://i.imgtg.com/2023/01/17/QEEUN.png" alt="QEEUN.png"></a></p><h4><span id="考试时">考试时</span></h4><ul><li>任何时候都不要尝试打开搜索引擎或者其他浏览器</li><li>要及时记得保存⾃⼰所写的代码，不管是写到⼀半还是写完了还没找到bug</li><li>如果⼀道题尤其是简单的题因为⼀两个测试点没有通过，不要⼀直纠结导致后⾯的题⽬没时间看</li></ul><h3><span id="刷题技巧">刷题技巧</span></h3><ul><li>按分类集中刷</li><li>（⼤多数OJ系统都是⽀持“处理⼀组测试数据就输出⼀组”的做法的，由于PAT的OJ系统是在你的程序运⾏结束后开始检查输出是否是正确的）</li></ul><h3><span id="易错总结">易错总结</span></h3><blockquote><p>只看了一部分，然后摘录了自己目前看得懂的TAT，一些c++函数还不清楚</p></blockquote><ul><li>对 char c[15] 进⾏ sort 排序的 cmp(char a[], char b[]) 函数要这样写： strcmp(a, b) &lt; 0 ，因为 strcmp 返回的不是 -1 0 1 ⽽是 等于0 ⼩于0 ⼤于0 的某个值， strcmp 在头⽂件 #include &lt;string.h&gt; ⾥⾯</li><li><a href="https://imgtg.com/image/QEvT6"><img src="https://i.imgtg.com/2023/01/17/QEvT6.png" alt="QEvT6.png"></a></li><li>char a[] 的⻓度要⽤ strlen(a) ; 得到的⻓度是⾥⾯真实存储了字⺟的⻓度，不包括 \0</li></ul><h3><span id="常见错误原因">常见错误原因</span></h3><ul><li>测试点过不了：对照着其他⼈的能够AC的代码，对⽐⾃⼰的代码，⼀点点更改，慢慢缩⼩⽬标区域，直到最后找到答案</li></ul><ol><li><p><strong>所有测试点都是段错误</strong></p><ul><li><p>段错误⼀般是由数组越界、堆栈溢出（⽐如，递归调⽤层数太多）等情况引起</p></li><li><p>注释掉可疑代码，若变成答案错误，则确实该段代码出错</p><p><strong>常见原因</strong></p><ol><li><p>多层 for 循环中内层循环本来打算写 j 或者 k ，却因为习惯或忘记误写成了外层循环的变量 i 或 j ，导致数组访问 i 或 j 下标的时候发⽣了越界<a href="https://imgtg.com/image/QEyvP"><img src="https://i.imgtg.com/2023/01/17/QEyvP.png" alt="QEyvP.png"></a></p><blockquote><p>这个我真的经常犯，但是没有总结下来。下不为例！！！</p></blockquote></li><li><p>数组开⼩了导致指针指向了未开辟的数组区域，出现了越界访问</p></li><li><p><a href="https://imgtg.com/image/QEgdb"><img src="https://i.imgtg.com/2023/01/17/QEgdb.png" alt="QEgdb.png"></a></p><blockquote><p>这个我目前还没有碰到过，写过的题目PTA占用空间都比较小</p></blockquote></li><li><p>递归的出⼝写的有问题，递归层数太多导致了堆栈溢出，发⽣段错误</p></li><li><p>打算写从后往前遍历的 for 循环，本应该写 i-- ，结果因为习惯误写成了 i++ ，导致 i 下标访问了越界内存，产⽣了段错误</p></li></ol></li></ul></li><li><p><strong>有⼏个测试点是段错误</strong></p><ol><li>是否没有考虑0或者边界值的情况？⽐如对于⼀个空数组却访问了 arr[0] ，可能会出现段错误的情况</li><li>对于树来说，当前结点如果是 NULL ，⼀定要先判断 root 结点是不是 NULL 再使⽤ root-&gt;val 或者 root-&gt;lef 、 root-&gt;right 的情况，因为 NULL 是没有 val 、 lef 、 right 等指针的（这个在LeetCode⾥⾯是⾮常常⻅的错误）</li><li>while 循环的边界条件未判断正确，导致访问了数组的⾮法内存，产⽣段错误</li></ol></li><li><p><strong>所有测试点都运⾏超时</strong></p><ul><li>如果所有测试点都是运⾏超时，⼀般情况是出现了死循环</li></ul><ol><li>明明 i 从 s.length()-1 开始向前遍历，结果 i-- 误写成了 i++ 导致了⽆限循环</li><li>while 循环的边界判断有问题，使得⽆限循环</li><li>代码的算法需要优化，过于暴⼒破解的算法在⼀些运⾏时间、算法复杂度要求较⾼的题⽬中会经常发⽣运⾏超时</li></ol></li><li><p><strong>有⼏个测试点运⾏超时</strong></p><ol><li><p>cin 的输⼊⽐ scanf 更耗时，如果个别测试点超时可以考虑是否可以通过优化输⼊将 cin 改成 scanf</p><blockquote><p>这也太细了~看来我目前的习惯还是太粗枝大叶了一点。</p></blockquote></li><li><p>对数据进⾏排序的过程中，有很多数据是⽆效数据，如果对所有数据都排序可能会引起超时，所以可以考虑在放⼊数组之前就做⼀些条件判断<strong>剔除⽆⽤数据</strong>，然后再对数组进⾏排序</p></li><li><p>如果写了 main 函数之外的其他函数，<strong>传引⽤会⽐传值的⽅式更省时</strong>，因为传值是拷⻉传参，传引⽤是传⼊的地址直接在原变量上修改，所以可以考虑优化为 void func(int&amp; a) 的⽅式传递参数减少耗时</p></li><li><p>在 for 或者 while 循环中的及时判断条件，⽤ break 提前退出当前层的循环或者直接 return 0; 结束程序，可以降低代码运⾏时间～</p><blockquote><p>嘿嘿嘿这个我也喜欢用~</p></blockquote></li><li><p>for 循环语句⾥定义 int i 和在外⾯定义 int i 其实有少许区别，在 for 循环语句⾥直接定义的 i ，⽐如 for(int i = 0; i &lt; 10; i++) 可能会更耗时</p></li><li><p>求最短路径的题⽬中以⽤ Dijkstra 解决的不要⽤ DFS 强⾏深搜</p></li><li><p>使⽤了 v.size()-1 等⽅式，如果 v.size() 本身就是0，因为 v.size() 返回值是⽆符号整数 unsigned int ， unsigned int 的0减去1得到的是 unsigned int 的最⼤值⽽⾮ -1 ，这可能会让 int i 循环时 i &lt; v.size() - 1 超时～</p></li><li><p>是不是明明可以⽤键值对找到对应的值（⽐如 bool visit[100] 寻找对应的 visit[80] 是否为 true ，复杂度为 O(1) ）却⽤了 for 循环⼀个个找的存储⽅式（⽐如邻接矩阵可以⼀次查找得到，却⽤了邻接表⼀个个查找），以空间换时间的⽅式是常⽤降低算法时间复杂度的⽅式～</p></li></ol><blockquote><p>这个我就在昨天的pop sequence中刚用到！确实省了很多时间</p></blockquote><ol start="9"><li>使⽤ map 存储如果超时了，⽽题⽬⼜没有要求排序，换成⽤ unordered_map 就不会超时啦～同理，使⽤ set 存储如果超时了，可以考虑换成 unordered_set 避免超时～</li></ol></li><li><p><strong>有⼏个测试点答案错误</strong></p><ol><li><p>输出语句的错误。⽐如输出的个别字⺟不正确、输出 yes / no 的⼤⼩写没有按照要求、 true / false 拼写错误、 1 后⾯单词单数不要加 s ， 2 以上的个数后⾯单词复数要加 s 、除了单复数s还有be动词的 is 和 are 的区别等问题</p></li><li><p>switch 后⾯只能 int 或者 char 类型 其它类型不可以</p></li></ol><blockquote><p>这个我才知道TAT</p></blockquote><ol start="3"><li><p>memset 只能赋值 0 、 -1 和最⼤值（因为 memest 函数是⽤按位赋值的），如果你想要给数组赋值⼀个特定的值，请使⽤ fill 函数～</p><blockquote><p>这个我也才知道TAT</p></blockquote></li><li><p>getline 读取的是⼀整⾏字符串，如果接下来还要读取字符 char ，会读取到上⼀⾏字符串末尾的回⻋换⾏符，所以为了避免这种情况，要在 getline(cin, s); 后⾯加⼀句 getchar(); 才能得到接下来⾃⼰想要读取到的 char ～</p></li><li><p>int + int 、 int * int 的过程中都有可能出现结果超过了 int 的值⽽产⽣溢出的情况，这样就会使⼀些数据᫾⼤的测试⽤例因为溢出变成了别的数字⽽得到答案错误～（所以不要觉得题⽬中给出的数据都在 int 范围之内就只⽤ int 存储所有变量，因为可能在计算加法或者乘法的过程中超出 int 的范围）</p></li><li><p>有时候会给⼀组ab区间，但是a b并没有按照从⼩到⼤的⽅式输⼊，可能个别数据是 a &gt; b ，所以要先判断⼀下给出的区间ab谁⼤谁⼩，如果a⼤b⼩就应该使⽤ swap 函数交换⼀下</p></li><li><p>如果是给id的题⽬，可能输出中要求按照不满4位在前⾯补 0 的情况，所以要⽤printf(“%04d”, a); 的⽅式输出，否则遇到不满4位的id输出结果可能会导致答案错误（有时题⽬会显示为格式错误）</p><blockquote><p>这个反转链表中有遇到~</p></blockquote></li></ol></li><li><p><strong>内存超限</strong></p><ol><li>可以考虑开 vector 或者动态开辟数组的⽅式避免直接开 1000000 这样很⼤的数组</li><li>如果是为了存储⼀些键值对，可以避免开 int hash[100000] 这样的⼤数组，⽽是⽤ map 或者 unordered_map 来处理键值对的映射</li><li>如果你开⼤数组是为了存储稀疏矩阵，可以⽤邻接表存储的⽅式代替邻接矩阵来降低空间复杂度（以时间复杂度换空间复杂度的⽅式）～</li></ol></li><li><p><strong>提交第⼀次超时了，第⼆次却</strong>AC<strong>了</strong><a href="https://imgtg.com/image/QEDRa"><img src="https://i.imgtg.com/2023/01/17/QEDRa.png" alt="QEDRa.png"></a></p></li><li><p><strong>浮点错误</strong></p><ol><li>程序中出现了除以 0 、取余 0 的这种⾮法操作</li></ol></li><li><p><strong>返回⾮零</strong></p><ol><li>如果你⽤的是 C/C++ ，请使⽤ int main 和 return 0;</li></ol></li><li><p><strong>格式错误</strong></p><ol><li>可能是换⾏、空格等出现了问题，输出语句内可能有拼写错误、空格多打少打等情况</li><li>题⽬要求输出4位数字不⾜前⾯添加 0</li></ol></li></ol><h2><span id="leetcode">LeetCode</span></h2><ul><li>去上面找针对性练习</li><li>去讨论区学习</li><li>利用碎片化时间</li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_HEAP&amp;STACK_PopSequence</title>
      <link href="/2023/01/15/DS-HEAP&amp;STACK-PopSequence/"/>
      <url>/2023/01/15/DS-HEAP&amp;STACK-PopSequence/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_heapampstack_popsequence">DS_HEAP&amp;STACK_PopSequence</span></h1><blockquote><p>4.5h</p></blockquote><h2><span id="description">Description</span></h2><p>Given a stack which can keep M numbers at most.  Push N numbers in the order of 1, 2, 3, …, N and pop randomly.  You are supposed to tell if a given sequence of  numbers is a possible pop sequence of the stack.  For example, if M is 5 and N is 7, we can obtain 1, 2, 3, 4, 5, 6, 7 from the stack, but not 3, 2, 1, 7, 5, 6, 4.</p><h3><span id="input-specification">Input Specification:</span></h3><p>Each input file contains one test case.  For each case, the first line contains 3 numbers (all no more than 1000): M (the maximum capacity of the stack), N (the length of push sequence), and K (the number of pop sequences to be checked).  Then K lines follow, each contains a pop sequence of N numbers.  All the numbers in a line are separated by a space.</p><h3><span id="output-specification">Output Specification:</span></h3><p>For each pop sequence, print in one line “YES” if it is indeed a possible pop sequence of the stack, or “NO” if not.</p><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">5 7 51 2 3 4 5 6 73 2 1 7 5 6 47 6 5 4 3 2 15 6 4 3 7 2 11 7 6 5 4 3 2</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">YESNONOYESNO</code></pre><h2><span id="gains">Gains</span></h2><h3><span id="knowledge">Knowledge</span></h3><ol><li><p><a href="https://blog.csdn.net/gywwwwwxxxyy/article/details/125566932">break的用法</a></p><blockquote><p>超链接为参考博客</p></blockquote><ol><li>break如果用于循环是用来终止循环的；</li><li>break如果用于switch，则是用于终止switch；<ol><li>在多层switch嵌套中，break只能够终止距离其最近的switch语句</li></ol></li><li>break不能直接用于if，除非if属于循环内部的一个子句；<ol><li>在多层循环中，break只能终止其最近的循环</li></ol></li></ol><pre><code class="language-c">//多层switchint x=1, y=0, a=0, b=0; switch(x)//第一个switch&#123;case 1:    switch(y)//第二个switch    &#123;    case 0        a++;        break;//终止第二个switch    case 1:        b++;        break;    &#125;    b=100;    break;//终止第一个switchcase 2:    a++;    b++;    break;&#125;//多层forfor (i=0; i&lt;3; ++i)&#123;    for (j=1; j&lt;4; ++j)        break:    printf(&quot;HAHA\n&quot;)；&#125;</code></pre></li><li><p><a href="https://blog.csdn.net/qq_42532658/article/details/105587327?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167376774716800182788610%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167376774716800182788610&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-105587327-null-null.142%5Ev71%5Einsert_chatgpt,201%5Ev4%5Eadd_ask&amp;utm_term=%E6%95%B0%E7%BB%84%E8%B5%8B%E5%88%9D%E5%80%BC&amp;spm=1018.2226.3001.4187">数组赋初值</a></p><blockquote><p>超链接为参考博客</p><p>数组必须指定长度，而其数组定义的长度不能是变量或者浮点数，一定是常量表达式</p></blockquote><ol><li><p>全局数组</p><blockquote><p>全局情况下int默认初始值为0，double默认初始值为0</p></blockquote></li><li><p>非全局数组</p><blockquote><p>非全局情况int默认都是垃圾值</p></blockquote><ol><li><p>C/C++不支持数组的整体赋值，只能声明数组时整体初始化，并且只能初始化为0</p></li><li><p>若整体初始化为其他数字比如1，则只有第一位是1，其余均为0</p></li><li><p>若要初始化为其他数组，则用for循环手动赋值，或者memset和fill函数</p><ol><li>memset（一般只能用来填充<code>char</code>型数组）<ol><li>按照字节填充某字符</li><li>在头文件<code>&lt;cstring&gt;</code>里面</li><li>使用方法memset(数组名，要填充的内容，单元大小)</li></ol></li><li>fill（可以赋值任何）（C++）<ol><li>按照单元赋值，将一个区间的元素都赋同一个值</li><li>在头文件<code>&lt;algorithm&gt;</code>里面</li><li>使用方法：fill(起始地址,结束地址, 要填入的内容)；</li></ol></li></ol><pre><code class="language-c">//非全局情况char p[10]=&#123;'1'&#125;;int pp[10]=&#123;1&#125;;char d[10];memset(d,'1',sizeof(d));//结果11 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 </code></pre></li></ol></li><li><p><a href="https://blog.csdn.net/GuiMa005/article/details/78670223?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167376779116782428626131%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=167376779116782428626131&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-4-78670223-null-null.142%5Ev71%5Einsert_chatgpt,201%5Ev4%5Eadd_ask&amp;utm_term=c%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84%E8%B5%8B%E5%88%9D%E5%80%BC&amp;spm=1018.2226.3001.4187">字符数组的特殊处理办法</a></p><blockquote><p>超链接为参考博客</p></blockquote><ol><li><p>定义时用直接字符串赋值</p><pre><code class="language-c">char a[10]=&quot;hello&quot;; //不能先定义再给它赋值char a[10]; a[10]=&quot;hello&quot;;//错误！一个字符怎么能容纳一个字符串？况且a[10]也是不存在的！</code></pre></li><li><p>对数组中字符逐个赋值</p><pre><code class="language-c">char a[10]=&#123;'h','e','l','l','o'&#125;; </code></pre></li><li><p>利用strcpy</p><pre><code class="language-c">char a[10]; strcpy(a, &quot;hello&quot;); </code></pre></li><li><p>常见错误</p><pre><code class="language-c">char a[10]; a[10]=&quot;hello&quot;;//一个字符怎么能容纳一个字符串？况且a[10]也是不存在的！char a[10]; a=&quot;hello&quot;;//这种情况容易出现，a虽然是指针，但是它已经指向在堆栈中分配的10个字符空间，现在这个情况a又指向数据区中的hello常量，这里的指针a出现混乱，不允许！// C语言的运算符根本无法操作字符串。在C语言中把字符串当作数组来处理，因此，对字符串的限制方式和对数组的一样，特别是，它们都不能用C语言的运算符进行复制和比较操作。直接尝试对字符串进行复制或比较操作会失败。char str1[10], str2[10];//利用=运算符来把字符串复制到字符数组中是不可能的：str1 = &quot;abc&quot;;     /*** WRONG ***/str2 = str1;       /*** WRONG ***///C语言把这些语句解释为一个指针与另一个指针之间的（非法的）赋值运算。但是，使用=初始化字符数组是合法的： char str1[10] = &quot;abc&quot;;//这是因为在声明中，=不是赋值运算符。//试图使用关系运算符或判等运算符来比较字符串是合法的，但不会产生预期的结果：if (str1==str2) ...    /*** WRONG ***///这条语句把str1和str2作为指针来进行比较，而不是比较两个数组的内容。因为str1和str2有不同的地址，所以表达式str1 == str2的值一定为0。</code></pre></li></ol></li></ol></li></ol><h3><span id="notice">Notice</span></h3><ol><li>堆栈下标一类的问题</li><li>在读取一行输入时，如果中途发现有错误，可以用fgets吃掉一整行，然后扔掉这部分空间</li><li>循环变量不要滥用i，j！用之前要注意看一下会不会导致错误</li><li>一些全局变量若被不同情况下重复使用（比如pop sequence中的lastpush 以及Stack[n]），开启新的循环时要先将全局变量初始化</li></ol><h2><span id="process">Process</span></h2><ul><li>呜呜呜，好希望一遍AC</li></ul><p><a href="https://imgtg.com/image/QyYzl"><img src="https://i.imgtg.com/2023/01/15/QyYzl.png" alt="QyYzl.png"></a></p><ul><li>害</li></ul><p><a href="https://imgtg.com/image/QyILC"><img src="https://i.imgtg.com/2023/01/15/QyILC.md.png" alt="QyILC.md.png"></a></p><p>不知道咋的，只读了两行；改之前的还能多读几行捏TAT</p><p><a href="https://imgtg.com/image/Qy3uL"><img src="https://i.imgtg.com/2023/01/15/Qy3uL.png" alt="Qy3uL.png"></a></p><ul><li>这没全部显示是什么意思捏？堆栈下标真的搞死我了TAT</li></ul><p><a href="https://imgtg.com/image/Qg8bM"><img src="https://i.imgtg.com/2023/01/15/Qg8bM.png" alt="Qg8bM.png"></a></p><ul><li>在不同循环中都要用到的全局变量注意赋初值！！！</li></ul><p><a href="https://imgtg.com/image/QmBbg"><img src="https://i.imgtg.com/2023/01/15/QmBbg.png" alt="QmBbg.png"></a></p><ul><li>错误率3/5 TAT</li></ul><p><a href="https://imgtg.com/image/QmTmB"><img src="https://i.imgtg.com/2023/01/15/QmTmB.md.png" alt="QmTmB.md.png"></a></p><ul><li>不可以滥用i了！今天第二次出错了</li></ul><p><a href="https://imgtg.com/image/Qmp6c"><img src="https://i.imgtg.com/2023/01/15/Qmp6c.md.png" alt="Qmp6c.md.png"></a></p><ul><li>aaaa！太曲折力！但是也太开心了！我真的很享受这一刻！！！感觉它比生活中很多东西带给我的快乐都要多！</li></ul><p><a href="https://imgtg.com/image/QmLSD"><img src="https://i.imgtg.com/2023/01/16/QmLSD.md.png" alt="QmLSD.md.png"></a></p><h2><span id="source-code">Source Code</span></h2><h3><span id="version-1">Version-1</span></h3><pre><code class="language-c">//Pop Sequence//M (the maximum capacity of the stack)//N (the length of push sequence)//K (the number of pop sequences to be checked)#include &lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define MAXSIZE 1000int Stack[MAXSIZE+1];int M,N,K;int instack = 0;int popped[MAXSIZE+1]= &#123;0&#125;;int ans[MAXSIZE+1];int lastpush = 0;int top = 0;char buffer[2*MAXSIZE];int isfull(int n);//0--&gt;unfilled;1--&gt;fullvoid push(int n);void pop();void Print();int main()&#123;int i,j,t,n,flag;//ans=0--&gt;NO;and=1--&gt;YESscanf(&quot;%d %d %d&quot;,&amp;M,&amp;N,&amp;K);for(i = 0; i &lt; MAXSIZE+1; i++)ans[i] = 1;for(i = 0; i &lt; K; i++)&#123;lastpush = 0;top = 0;instack = 0;for(t = 0; t &lt; MAXSIZE+1; t++)&#123;popped[t] = 0;Stack[t] = 0;&#125;for(j = 0; j &lt; N; j++)&#123;scanf(&quot;%d&quot;, &amp;n);if(top == 0)&#123;instack = 0;flag = isfull(n);if(!flag)&#123;//top++;push(n);pop(top);&#125;else&#123;ans[i] = 0;fgets(buffer,MAXSIZE,stdin);break;&#125;&#125;else&#123;if(n&lt;Stack[top-1])//不可能同一批先入栈的先出&#123;fgets(buffer,MAXSIZE,stdin);ans[i] = 0;break;&#125;else if(n == Stack[top-1])&#123;pop(top);&#125;else if(n &gt; Stack[top-1])&#123;flag = isfull(n);if(!flag)&#123;push(n);pop();&#125;else&#123;fgets(buffer,2*MAXSIZE,stdin);ans[i] = 0;break;&#125;&#125;&#125;&#125;&#125;Print();system (&quot;pause&quot;);return 0;&#125;int isfull(int n)&#123;int flag = 0;if(instack == 0)&#123;//int i = n;//while(popped[i] == 0)i--;if(n - lastpush &gt; M)flag = 1;&#125;else&#123;int tmp = Stack[top-1];int gap = 0;while(tmp&lt;n)//去掉已经被弹出的元素&#123;if(popped[++tmp])gap++;&#125;if(instack + n - Stack[top-1] - gap &gt; M)flag = 1;&#125;return flag;&#125;void push(int n)&#123;int i;for(i = lastpush+1; i &lt;= n; i++)&#123;Stack[top++] = i;instack++;&#125;lastpush = n;return ;&#125;void pop()&#123;int tmp = Stack[--top];Stack[top] = 0;popped[tmp] = 1;instack--;return ;&#125;void Print()&#123;int i;for(i = 0; i &lt; K-1; i++)&#123;if(ans[i]==1)printf(&quot;YES\n&quot;);elseprintf(&quot;NO\n&quot;);&#125;if(ans[i]==1)printf(&quot;YES&quot;);elseprintf(&quot;NO&quot;);return ;&#125;</code></pre><p>感觉还是丑了点……写了这么多行TAT</p><p><strong>提交结果</strong></p><p><a href="https://imgtg.com/image/QXIFD"><img src="https://i.imgtg.com/2023/01/19/QXIFD.md.png" alt="QXIFD.md.png"></a></p><h3><span id="version-2">Version-2</span></h3><p>参考了这篇博客的代码，改进了以下几点</p><ol><li>不需要instack， 直接看top就可以了</li><li>不用top的值作为分类标准，用出栈元素与栈顶值的大小关系分类</li><li>相比该博主的代码 ，我改进了读入的操作，是边读边判断，而不是一行全部先读入再逐个判断，这样更省时间(可能？)。但是要注意在一行内中断读入后，要用fgets舍弃这一行，才能从下一行开始读入</li><li>原来的buffer开成全局变量有问题，改为第一层循环内的局部变量了</li><li>这里两个判断语句的前后顺序还是很容易出错的，比如“5 6 4 3 7 2 1”这组输入，如果用如图的顺序判断就会被当作堆栈溢出报错，而顺序换一下的话，原来栈顶元素5被弹出后再压入6，栈空间就不会溢出</li></ol><p><a href="https://imgtg.com/image/QcyMq"><img src="https://i.imgtg.com/2023/01/17/QcyMq.png" alt="QcyMq.png"></a></p><ol start="6"><li>另外，因为*处忘记了这段语句还卡了半天没跳出来，以后注意，要么一行行读进来再判断，要么记得更新读入的位置</li></ol><pre><code class="language-c">fgets(buffer, MAXSIZE,stdin);</code></pre><pre><code class="language-c">#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define MAXSIZE 1000int main()&#123;int M,N,K;int i,j,k;scanf(&quot;%d %d %d&quot;,&amp;M,&amp;N,&amp;K);for(i = 0; i &lt; K; i++)&#123;int top = -1;int Stack[MAXSIZE] = &#123;0&#125;;int num = 0;char buffer[2*MAXSIZE];Stack[++top] = ++num;for(j = 0; j &lt; N; j++)&#123;int input;scanf(&quot;%d&quot;, &amp;input);if(input&lt;Stack[top])&#123;fgets(buffer, MAXSIZE,stdin);break;&#125;else if(input &gt; Stack[top])while(num&lt;input)Stack[++top] = ++num;if(top&gt;=M)&#123;fgets(buffer, MAXSIZE,stdin);break;&#125;if(input == Stack[top])top--;if(top&lt;0)Stack[++top] = ++num;&#125;if(i&lt;K)&#123;if(j==N)printf(&quot;YES\n&quot;);elseprintf(&quot;NO\n&quot;);&#125;else&#123;if(j==N)printf(&quot;YES&quot;);elseprintf(&quot;NO&quot;);&#125;&#125;return 0;&#125;</code></pre><p><strong>提交结果</strong></p><p><a href="https://imgtg.com/image/QX0up"><img src="https://i.imgtg.com/2023/01/19/QX0up.md.png" alt="QX0up.md.png"></a></p><h3><span id="version-3">Version-3</span></h3><p>仿照博主的整行读入的方式再写了一版</p><pre><code class="language-c">#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define MAXSIZE 1000int main()&#123;int M,N,K;int i,j,k;int in[MAXSIZE] = &#123;0&#125;;scanf(&quot;%d %d %d&quot;,&amp;M,&amp;N,&amp;K);for(i = 0; i &lt; K; i++)&#123;int top = -1;int Stack[MAXSIZE] = &#123;0&#125;;int num = 0;int input;char buffer[2*MAXSIZE];Stack[++top] = ++num;for(k = 0; k &lt; N; k++)&#123;scanf(&quot;%d&quot;, &amp;input);in[k] = input;&#125;for(j = 0; j &lt; N; j++)&#123;if(in[j]&lt;Stack[top])break;else if(in[j] &gt; Stack[top])&#123;while(num&lt;in[j])Stack[++top] = ++num;&#125;if(top&gt;=M)break;if(in[j] == Stack[top])top--;if(top&lt;0)Stack[++top] = ++num;&#125;if(i&lt;K)&#123;if(j==N)printf(&quot;YES\n&quot;);elseprintf(&quot;NO\n&quot;);&#125;else&#123;if(j==N)printf(&quot;YES&quot;);elseprintf(&quot;NO&quot;);&#125;&#125;return 0;&#125;</code></pre><p><strong>提交结果</strong></p><p><a href="https://imgtg.com/image/QX3RF"><img src="https://i.imgtg.com/2023/01/19/QX3RF.md.png" alt="QX3RF.md.png"></a></p><p>我的确实快一点嘿嘿嘿</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
            <tag> 堆栈 </tag>
            
            <tag> 数组 </tag>
            
            <tag> 下标 </tag>
            
            <tag> break </tag>
            
            <tag> 全局变量 </tag>
            
            <tag> 循环变量 </tag>
            
            <tag> fgets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_LIST_ReversingLinkedList</title>
      <link href="/2023/01/14/DS-LIST-ReversingLinkedList/"/>
      <url>/2023/01/14/DS-LIST-ReversingLinkedList/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_list_reversinglinkedlist">DS_LIST_ReversingLinkedList</span></h1><blockquote><p>这题保守估计写了6个小时TAT</p></blockquote><h2><span id="description">Description</span></h2><p>Given a constant K and a singly linked list L, you are supposed to reverse the links of every K elements on L.  For example, given L being 1→2→3→4→5→6, if K=3, then you must output 3→2→1→6→5→4; if K=4, you must output 4→3→2→1→5→6.</p><h3><span id="input-specification">Input Specification:</span></h3><p>Each input file contains one test case.  For each case, the first line contains the address of the first node, a positive N (≤105) which is the total number of nodes, and a positive K (≤N) which is the length of the sublist to be reversed.  The address of a  node is a 5-digit nonnegative integer, and NULL is represented by -1.</p><p>Then N lines follow, each describes a node in the format:</p><pre><code>Address Data Next</code></pre><p>where <code>Address</code> is the position of the node, <code>Data</code> is an integer, and <code>Next</code> is the position of the next node.</p><h3><span id="output-specification">Output Specification:</span></h3><p>For each case, output the resulting ordered linked list.  Each node  occupies a line, and is printed in the same format as in the input.</p><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">00100 6 400000 4 9999900100 1 1230968237 6 -133218 3 0000099999 5 6823712309 2 33218</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">00000 4 3321833218 3 1230912309 2 0010000100 1 9999999999 5 6823768237 6 -1</code></pre><h2><span id="gains">Gains</span></h2><ol><li><a href="https://blog.csdn.net/weixin_45073772/article/details/106493393?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-106493393-blog-108843318.pc_relevant_3mothn_strategy_and_data_recovery&amp;spm=1001.2101.3001.4242.1&amp;utm_relevant_index=2">struct Node 和typedef struct Node的区分和理解</a></li><li>把题目意思先看明白，别那么急着做题。不然好多要推翻重来捏，比如时间复杂度；别的像输出格式，可以在输出的时候再仔细看一下</li><li>我觉得这题的最后一个测试点没什么意思捏</li></ol><h2><span id="process">Process</span></h2><ul><li>本大小姐服了TAT</li></ul><p><a href="https://imgtg.com/image/Q1yKc"><img src="https://i.imgtg.com/2023/01/14/Q1yKc.md.png" alt="Q1yKc.md.png"></a></p><ul><li>改了一下scanf里面赋值的时候直接用数组里面的值接收变量了，改成用地址接收</li></ul><p><a href="https://imgtg.com/image/Q1pMM"><img src="https://i.imgtg.com/2023/01/14/Q1pMM.md.png" alt="Q1pMM.md.png"></a></p><ul><li>我的妈耶，这代码写的有够烂的</li></ul><p><a href="https://imgtg.com/image/QA06G"><img src="https://i.imgtg.com/2023/01/15/QA06G.md.png" alt="QA06G.md.png"></a></p><ul><li>读入的时候好好的，传参出问题了</li></ul><p><a href="https://imgtg.com/image/QAdk1"><img src="https://i.imgtg.com/2023/01/15/QAdk1.md.png" alt="QAdk1.md.png"></a></p><ul><li>你这个输出格式显然有问题，而且节点之间的连接关系好像也不对啊</li></ul><p><a href="https://imgtg.com/image/QAsmI"><img src="https://i.imgtg.com/2023/01/15/QAsmI.md.png" alt="QAsmI.md.png"></a></p><ul><li>继续解决奇怪头节点和对应关系的问题</li></ul><p><a href="https://imgtg.com/image/QAVYD"><img src="https://i.imgtg.com/2023/01/15/QAVYD.md.png" alt="QAVYD.md.png"></a></p><ul><li>很好，加了Next的更新之后有点样子了，但是为什么节点重复了？</li></ul><p><a href="https://imgtg.com/image/QAf5F"><img src="https://i.imgtg.com/2023/01/15/QAf5F.md.png" alt="QAf5F.md.png"></a></p><p><a href="https://imgtg.com/image/QAlA6"><img src="https://i.imgtg.com/2023/01/15/QAlA6.png" alt="QAlA6.png"></a></p><ul><li>调试了两步，卓有成效</li></ul><p><a href="https://imgtg.com/image/QA8Dg"><img src="https://i.imgtg.com/2023/01/15/QA8Dg.md.png" alt="QA8Dg.md.png"></a></p><p>这里k从sindex开始的话，就有重复节点了</p><p><a href="https://imgtg.com/image/QAX8B"><img src="https://i.imgtg.com/2023/01/15/QAX8B.png" alt="QAX8B.png"></a></p><p>这里忘了把rindex初值改成0，导致原来头节点数字很奇怪</p><p><a href="https://imgtg.com/image/QAIks"><img src="https://i.imgtg.com/2023/01/15/QAIks.png" alt="QAIks.png"></a></p><p>不过这运行超时有点难绷</p><ul><li>直接按data顺序读入节点后再直接反转，跳过sort这一步。但是这个PTA报错我完全不能理解啊，为什么我自己测试用例都是对的，放这上面就全错了 ？</li></ul><p><a href="https://imgtg.com/image/QKh0v"><img src="https://i.imgtg.com/2023/01/15/QKh0v.md.png" alt="QKh0v.md.png"></a></p><p>怎么出测试用例都是对的鸭，什么情况啊我哭死</p><p><a href="https://imgtg.com/image/QK7Hr"><img src="https://i.imgtg.com/2023/01/15/QK7Hr.png" alt="QK7Hr.png"></a></p><p><a href="https://imgtg.com/image/QKAJ1"><img src="https://i.imgtg.com/2023/01/15/QKAJ1.md.png" alt="QKAJ1.md.png"></a></p><p><a href="https://imgtg.com/image/QKKfI"><img src="https://i.imgtg.com/2023/01/15/QKKfI.png" alt="QKKfI.png"></a></p><p><a href="https://imgtg.com/image/QKvBD"><img src="https://i.imgtg.com/2023/01/15/QKvBD.png" alt="QKvBD.png"></a></p><ul><li>原来data不是和节点顺序对应的。参考别人，用下标=地址，拿空间换时间，就剩最后一个测试点了！</li></ul><p><a href="https://imgtg.com/image/QKDJs"><img src="https://i.imgtg.com/2023/01/15/QKDJs.md.png" alt="QKDJs.md.png"></a></p><p><a href="https://imgtg.com/image/QKHlK"><img src="https://i.imgtg.com/2023/01/15/QKHlK.png" alt="QKHlK.png"></a></p><ul><li>多余节点的测试情况</li></ul><p><a href="https://imgtg.com/image/QKETa"><img src="https://i.imgtg.com/2023/01/15/QKETa.png" alt="QKETa.png"></a></p><ul><li>因为N包含了多余结点，遍历一下整条链表，重新算一下N的个数之后就成功力！</li></ul><p><a href="https://imgtg.com/image/QKjTp"><img src="https://i.imgtg.com/2023/01/15/QKjTp.md.png" alt="QKjTp.md.png"></a></p><h2><span id="source-code">Source Code</span></h2><pre><code class="language-c">//Reversing Linked List//special case#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define N 100001struct Node &#123;    int Address;int Data;int Next;&#125;;void Rev(struct Node* l, struct Node* rl, int n, int ReUnit, int Head);void Print(struct  Node* rl, int n);int Check(struct Node* l, int Head);int main()&#123;int n, ReUnit, Head, i, addr, data, next;scanf(&quot;%d %d %d&quot;, &amp;Head, &amp;n, &amp;ReUnit);struct Node l[N];struct Node rl[n];int inList[N] = &#123;0&#125;;inList[Head] = 1;for(i = 0; i &lt; n; i++)&#123;scanf(&quot;%d&quot;, &amp;addr);scanf(&quot;%d&quot;, &amp;data);scanf(&quot;%d&quot;, &amp;next);l[addr].Address = addr;l[addr].Data = data;l[addr].Next = next;if(next != -1)inList[next] = 1;&#125;n = Check(l, Head);//printf(&quot;%d\n&quot;,n);Rev(l, rl, n, ReUnit, Head);Print(rl, n);system (&quot;pause&quot;);return 0;&#125;int Check(struct Node* l, int Head)&#123;int num=0;int index = Head;while(index != -1)&#123;num++;index = l[index].Next;&#125;return num;&#125;void Rev(struct Node* l, struct Node* rl, int n, int ReUnit, int Head)&#123;int times = n/ReUnit;int i, nehead=0, rindex = 0, j, k=0, haddr, index;haddr = l[Head].Address;if(ReUnit == 1 || times == 0)&#123;index = haddr;rindex = 0;while(index != -1)&#123;rl[rindex].Address = l[index].Address;rl[rindex].Data = l[index].Data;rl[rindex].Next = l[index].Next;rindex++;index = l[index].Next;&#125;&#125;else &#123;nehead = haddr;for(i = 1; i &lt;= times; i++)&#123;rindex = i*ReUnit - 1;index = nehead;for(j = 0; j &lt; ReUnit-1; j++)&#123;rl[rindex].Address = l[index].Address;rl[rindex].Data = l[index].Data;rindex--;index = l[index].Next;&#125;nehead = l[index].Next;rl[rindex].Address = l[index].Address;rl[rindex].Data = l[index].Data;&#125;rindex += ReUnit;if(rindex &lt; n )&#123;index = nehead;for(; index != -1; index = l[index].Next)&#123;rl[rindex].Address = l[index].Address;rl[rindex].Data = l[index].Data;rindex++;&#125;&#125;for( k = 0; k &lt; n-1; k++)&#123;rl[k].Next = rl[k+1].Address;&#125;rl[k].Next = -1;&#125;return ;&#125;void Print(struct Node* rl, int n)&#123;int i;for(i = 0; i &lt; n-1; i++)&#123;printf(&quot;%05d %d %05d\n&quot;, rl[i].Address, rl[i].Data, rl[i].Next);&#125;printf(&quot;%05d %d %d&quot;, rl[i].Address, rl[i].Data, rl[i].Next);return ;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_LIST_MaximumSubsequenceSum</title>
      <link href="/2023/01/14/DS-LIST-MaximumSubsequenceSum/"/>
      <url>/2023/01/14/DS-LIST-MaximumSubsequenceSum/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_list_maximumsubsequencesum">DS_LIST_MaximumSubsequenceSum</span></h1><blockquote><p>50MIN</p></blockquote><h2><span id="description">Description</span></h2><p>Given a sequence of K integers { N1, N2, …, NK }. A continuous subsequence is defined to be { Ni, Ni+1, …, Nj } where 1≤i≤j≤K. The Maximum Subsequence is the continuous subsequence which has the  largest sum of its elements. For example, given sequence { -2, 11, -4,  13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.</p><p>Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.</p><h3><span id="input-specification">Input Specification:</span></h3><p>Each input file contains one test case. Each case occupies two lines. The first line contains a positive integer K (≤10000). The second line contains K numbers, separated by a space.</p><h3><span id="output-specification">Output Specification:</span></h3><p>For each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers  must be separated by one space, but there must be no extra space at the  end of a line. In case that the maximum subsequence is not unique,  output the one with the smallest indices i and j (as shown by the sample case). If all the K numbers are negative, then its maximum sum is defined to be 0, and you  are supposed to output the first and the last numbers of the whole  sequence.</p><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">10-10 1 2 3 4 -5 -23 3 7 -21</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">10 1 4</code></pre><p>代码长度限制</p><p>16 KB</p><p>时间限制</p><p>200 ms</p><p>内存限制</p><p>64 MB</p><p>50min</p><h2><span id="process">Process</span></h2><ul><li>这都错了不能原谅捏！！！</li></ul><p><a href="https://imgtg.com/image/Qn9SM"><img src="https://i.imgtg.com/2023/01/14/Qn9SM.md.png" alt="Qn9SM.md.png"></a></p><ul><li>调试用的print大法忘记注释掉了</li></ul><p><a href="https://imgtg.com/image/QnjCG"><img src="https://i.imgtg.com/2023/01/14/QnjCG.md.png" alt="QnjCG.md.png"></a></p><ul><li>这里没办法实现端点的更新捏</li></ul><p><a href="https://imgtg.com/image/QnCYP"><img src="https://i.imgtg.com/2023/01/14/QnCYP.md.png" alt="QnCYP.md.png"></a></p><ul><li>OK这样改就AC了，要想清楚不能贪快捏</li></ul><pre><code class="language-c">for(i = 0; i &lt; n; i++)&#123;curmax = 0;for(j = i; j &lt; n; j++)&#123;curmax += str[j];/*max = getmax(curmax,max);*/if(max == curmax)&#123;l = getmin(l, i);r = getmin(r, j);&#125;else if(max &lt; curmax)&#123;max = curmax;l = i;r = j;&#125;&#125;&#125;</code></pre><p><a href="https://imgtg.com/image/Q1M5b"><img src="https://i.imgtg.com/2023/01/14/Q1M5b.md.png" alt="Q1M5b.md.png"></a></p><h2><span id="source-code-c">Source Code C</span></h2><pre><code class="language-C">//Maximum Subsequence Sum//special cases://1. all negetive#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int getmin(int a, int b);int main()&#123;int n, *str, i, j, max = 0, curmax = 0, l, r;scanf(&quot;%d&quot;,&amp;n);r = l = n;str = (int*)malloc(sizeof(int)*n);for(i = 0; i &lt; n; i++)scanf(&quot;%d&quot;, str + i);for(i = 0; i &lt; n; i++)&#123;curmax = 0;for(j = i; j &lt; n; j++)&#123;curmax += str[j];if(max == curmax)&#123;l = getmin(l, i);r = getmin(r, j);&#125;else if(max &lt; curmax)&#123;max = curmax;l = i;r = j;&#125;&#125;&#125;if(r == n &amp;&amp; l == n)&#123;l = str[0];r = str[n-1];&#125;else&#123;l = str[l];r = str[r];&#125;printf(&quot;%d %d %d&quot;, max, l, r);system(&quot;pause&quot;);return 0;&#125;int getmin(int a, int b)&#123;return (a&lt;b) ? a:b;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_TREE</title>
      <link href="/2023/01/13/DS-TREE/"/>
      <url>/2023/01/13/DS-TREE/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_tree">DS_Tree</span></h1><h2><span id="查找searching">查找（Searching）</span></h2><h3><span id="顺序查找sequential-search">顺序查找（Sequential Search）</span></h3><p><a href="https://imgtg.com/image/QxfJb"><img src="https://i.imgtg.com/2023/01/13/QxfJb.md.png" alt="QxfJb.md.png"></a></p><ul><li>巧妙的是将下标为0处的哨兵的值改成要查的元素，这样就不用判断下标是否越界</li></ul><h3><span id="二分查找binary-search">二分查找（Binary Search）</span></h3><h5><span id="代码表示">代码表示</span></h5><p><a href="https://imgtg.com/image/Qxlfl"><img src="https://i.imgtg.com/2023/01/13/Qxlfl.md.png" alt="Qxlfl.md.png"></a></p><h5><span id="二分查找判定树">二分查找判定树</span></h5><p><a href="https://imgtg.com/image/Qx2ZB"><img src="https://i.imgtg.com/2023/01/13/Qx2ZB.png" alt="Qx2ZB.png"></a></p><p>ASL：平均成功查找次数</p><blockquote><p>斐波那契查找（黄金分割法查找）算法</p><p>二分法每次能有100%的概率能只剩50%的数据，每次剩下的期望为50%，即每次除以2。</p><p>而黄金分割的话每次都有0.618的概率是0.618，0.382的概率是0.382，每次剩下的期望为0.528，即每次除以1.894。</p></blockquote><h2><span id="树tree">树（Tree）</span></h2><h3><span id="定义">定义</span></h3><p><a href="https://imgtg.com/image/QxIHS"><img src="https://i.imgtg.com/2023/01/13/QxIHS.png" alt="QxIHS.png"></a></p><h5><span id="树与非树">树与非树</span></h5><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230113104926143.png" alt="image-20230113104926143"></p><ul><li>树是保证节点连通的最小方式</li></ul><h3><span id="基本术语">基本术语</span></h3><p><a href="https://imgtg.com/image/QzqZt"><img src="https://i.imgtg.com/2023/01/13/QzqZt.png" alt="QzqZt.png"></a></p><p><a href="https://imgtg.com/image/Qz5cx"><img src="https://i.imgtg.com/2023/01/13/Qz5cx.png" alt="Qz5cx.png"></a></p><ul><li>根结点的层数是1</li></ul><h3><span id="树的表示">树的表示</span></h3><h4><span id="儿子-兄弟表示法">儿子-兄弟表示法</span></h4><p><a href="https://imgtg.com/image/QzU7p"><img src="https://i.imgtg.com/2023/01/13/QzU7p.png" alt="QzU7p.png"></a></p><h5><span id="转变为二叉树">转变为二叉树</span></h5><p><a href="https://imgtg.com/image/QzWLU"><img src="https://i.imgtg.com/2023/01/13/QzWLU.png" alt="QzWLU.png"></a></p><h2><span id="二叉树">二叉树</span></h2><h3><span id="定义">定义</span></h3><p><a href="https://imgtg.com/image/QzbXY"><img src="https://i.imgtg.com/2023/01/13/QzbXY.md.png" alt="QzbXY.md.png"></a></p><ul><li>二叉树的子树有左右之分</li></ul><p><a href="https://imgtg.com/image/Qzxzv"><img src="https://i.imgtg.com/2023/01/13/Qzxzv.md.png" alt="Qzxzv.md.png"></a></p><ul><li>完全二叉树可以是满二叉树去掉黄色部分</li></ul><p><a href="https://imgtg.com/image/QzzPq"><img src="https://i.imgtg.com/2023/01/13/QzzPq.png" alt="QzzPq.png"></a></p><ul><li>下面的就不是完全二叉树</li></ul><h3><span id="重要性质">重要性质</span></h3><p>n~0~ = n~2~+1</p><p><a href="https://imgtg.com/image/QziTr"><img src="https://i.imgtg.com/2023/01/13/QziTr.png" alt="QziTr.png"></a></p><p><a href="https://imgtg.com/image/QzFlc"><img src="https://i.imgtg.com/2023/01/13/QzFlc.png" alt="QzFlc.png"></a></p><ul><li>因此，m叉树中各类节点的关系为：$$\sum (i-1)n$$~i~ = $$n$$~0~</li></ul><h3><span id="抽象数据类型定义">抽象数据类型定义</span></h3><p><a href="https://imgtg.com/image/QznvM"><img src="https://i.imgtg.com/2023/01/13/QznvM.png" alt="QznvM.png"></a></p><p><a href="https://imgtg.com/image/Qz1cG"><img src="https://i.imgtg.com/2023/01/13/Qz1cG.png" alt="Qz1cG.png"></a></p><h3><span id="存储结构">存储结构</span></h3><h4><span id="顺序存储结构">顺序存储结构</span></h4><ul><li>完全二叉树</li></ul><p><a href="https://imgtg.com/image/QzNO1"><img src="https://i.imgtg.com/2023/01/13/QzNO1.png" alt="QzNO1.png"></a></p><ul><li>一般二叉树</li></ul><p><a href="https://imgtg.com/image/Qze7I"><img src="https://i.imgtg.com/2023/01/13/Qze7I.png" alt="Qze7I.png"></a></p><h4><span id="链表存储">链表存储</span></h4><p><a href="https://imgtg.com/image/QzrLD"><img src="https://i.imgtg.com/2023/01/13/QzrLD.png" alt="QzrLD.png"></a></p><pre><code class="language-c">typedef struct TNode *Position;typedef Position BinTree; /* 二叉树类型 */struct TNode&#123; /* 树结点定义 */ElementType Data; /* 结点数据 */BinTree Left; /* 指向左子树 */BinTree Right;/* 指向右子树 */&#125;;</code></pre><h3><span id="遍历">遍历</span></h3><ol><li>先序遍历</li><li>中序遍历</li><li>后序遍历</li></ol><p><a href="https://imgtg.com/image/QzAuF"><img src="https://i.imgtg.com/2023/01/13/QzAuF.png" alt="QzAuF.png"></a></p><h4><span id="非递归遍历">非递归遍历</span></h4><p><a href="https://imgtg.com/image/QzvPP"><img src="https://i.imgtg.com/2023/01/13/QzvPP.md.png" alt="QzvPP.md.png"></a></p><ul><li>中序改先序-&gt;第一次碰到就print就可以了，因为路径是一样的</li></ul><ol start="4"><li>层序遍历<ol><li>队列实现<a href="https://imgtg.com/image/QhWkv"><img src="https://i.imgtg.com/2023/01/13/QhWkv.md.png" alt="QhWkv.md.png"></a></li></ol></li></ol><h4><span id="遍历举例">遍历举例</span></h4><p><a href="https://imgtg.com/image/Qhbpq"><img src="https://i.imgtg.com/2023/01/13/Qhbpq.md.png" alt="Qhbpq.md.png"></a></p><p><a href="https://imgtg.com/image/Qhz5r"><img src="https://i.imgtg.com/2023/01/13/Qhz5r.md.png" alt="Qhz5r.md.png"></a></p><p><a href="https://imgtg.com/image/04WAl"><img src="https://i.imgtg.com/2023/02/04/04WAl.md.png" alt="04WAl.md.png"></a></p><h2><span id></span></h2><p><a href="https://imgtg.com/image/03huB"><img src="https://i.imgtg.com/2023/02/07/03huB.png" alt="03huB.png"></a></p><p><a href="https://imgtg.com/image/03AcC"><img src="https://i.imgtg.com/2023/02/07/03AcC.png" alt="03AcC.png"></a></p><h2><span id="二叉搜索树">二叉搜索树</span></h2><h3><span id="定义">定义</span></h3><p><a href="https://imgtg.com/image/0uKWS"><img src="https://i.imgtg.com/2023/02/07/0uKWS.png" alt="0uKWS.png"></a></p><p>左&lt;中&lt;右</p><h3><span id="find函数">Find函数</span></h3><p><a href="https://imgtg.com/image/S7Y1g"><img src="https://i.imgtg.com/2023/01/24/S7Y1g.png" alt="S7Y1g.png"></a></p><p><a href="https://imgtg.com/image/S7fHB"><img src="https://i.imgtg.com/2023/01/24/S7fHB.png" alt="S7fHB.png"></a></p><p><a href="https://imgtg.com/image/0uvsC"><img src="https://i.imgtg.com/2023/02/07/0uvsC.png" alt="0uvsC.png"></a></p><ul><li>查找的效率取决于树的高度</li></ul><p><a href="https://imgtg.com/image/S7l8s"><img src="https://i.imgtg.com/2023/01/24/S7l8s.png" alt="S7l8s.png"></a></p><p>想错了，应该是中序遍历的最后一个节结点</p><h3><span id="insert">Insert</span></h3><p><a href="https://imgtg.com/image/S7jxK"><img src="https://i.imgtg.com/2023/01/24/S7jxK.md.png" alt="S7jxK.md.png"></a></p><h3><span id="delete">Delete</span></h3><ul><li>leaf node : reset its parent link to NULL</li><li>1 degree node : replace the node by its single child</li><li>2 degree node :<ul><li>Replace the node by the largest one in its left subtree or the smallest one in its right subtree.</li><li>Delete the replacing node from the subtree.</li></ul></li></ul><p><a href="https://imgtg.com/image/0umri"><img src="https://i.imgtg.com/2023/02/07/0umri.png" alt="0umri.png"></a></p><h3><span id="average-case-analysis">Average-Case Analysis</span></h3><p><a href="https://imgtg.com/image/03aXG"><img src="https://i.imgtg.com/2023/02/07/03aXG.png" alt="03aXG.png"></a></p><h2><span id="平衡二叉树是二叉搜索树fds不考">平衡二叉树（是二叉搜索树！！！）(FDS不考)</span></h2><p>BF(T) = HL-HR</p><h3><span id="平衡二叉树avl树">平衡二叉树（AVL树）</span></h3><ul><li>空树</li><li>任意节点|BF(T)|≤1</li></ul><h4><span id="最小节点数">最小节点数</span></h4><p><a href="https://imgtg.com/image/S72Ja"><img src="https://i.imgtg.com/2023/01/24/S72Ja.png" alt="S72Ja.png"></a></p><p>与斐波那契数列的关系</p><p><a href="https://imgtg.com/image/S7XBN"><img src="https://i.imgtg.com/2023/01/24/S7XBN.md.png" alt="S7XBN.md.png"></a></p><h3><span id="平衡二叉树的调整">平衡二叉树的调整</span></h3><h4><span id="rr旋转">RR旋转</span></h4><p><a href="https://imgtg.com/image/S7CMi"><img src="https://i.imgtg.com/2023/01/24/S7CMi.md.png" alt="S7CMi.md.png"></a></p><h4><span id="ll旋转">LL旋转</span></h4><p><a href="https://imgtg.com/image/S7w1X"><img src="https://i.imgtg.com/2023/01/24/S7w1X.md.png" alt="S7w1X.md.png"></a></p><h4><span id="lr旋转">LR旋转</span></h4><p><a href="https://imgtg.com/image/SNMHt"><img src="https://i.imgtg.com/2023/01/24/SNMHt.md.png" alt="SNMHt.md.png"></a></p><h4><span id="rl旋转">RL旋转</span></h4><p><a href="https://imgtg.com/image/SNOXx"><img src="https://i.imgtg.com/2023/01/24/SNOXx.md.png" alt="SNOXx.md.png"></a></p><h4><span id="example是否同一二叉搜索树">example：是否同一二叉搜索树</span></h4><h4><span id="解题思路">解题思路</span></h4><p><a href="https://imgtg.com/image/SNKOb"><img src="https://i.imgtg.com/2023/01/24/SNKOb.md.png" alt="SNKOb.md.png"></a></p><ol start="3"><li>建一棵树，再判别其他序列是否与该树一致</li></ol><h2><span id="堆">堆</span></h2><h3><span id="特性">特性</span></h3><ul><li><p>优先队列</p></li><li><p>根节点最大/最小</p></li><li><p>完全二叉树</p></li><li><p>从根结点到任意结点路径的有序性</p></li><li><p>0号2位置放置哨兵-——最大值或最小值</p></li><li><p>数组表示</p></li></ul><p><a href="https://imgtg.com/image/03cR1"><img src="https://i.imgtg.com/2023/02/07/03cR1.png" alt="03cR1.png"></a></p><h3><span id="初始化">初始化</span></h3><p><a href="https://imgtg.com/image/03VUD"><img src="https://i.imgtg.com/2023/02/07/03VUD.png" alt="03VUD.png"></a></p><h3><span id="插入">插入</span></h3><p>插在末尾，向前调整</p><p><a href="https://imgtg.com/image/03fd6"><img src="https://i.imgtg.com/2023/02/07/03fd6.png" alt="03fd6.png"></a></p><h3><span id="删除">删除</span></h3><p>只删除根的位置</p><p>将末尾换到根，向下调整</p><p><a href="https://imgtg.com/image/036Ig"><img src="https://i.imgtg.com/2023/02/07/036Ig.png" alt="036Ig.png"></a></p><h3><span id="建堆">建堆</span></h3><ol><li>先将N个元素按顺序存入，先满足完全二叉树的结构特性</li><li>再调整各结点位置，以满足最大堆的有序特性<ol><li>从最后一个有儿子的结点开始调成堆</li><li>不断向上调整（类似删除操作）</li></ol></li></ol><h2><span id="哈夫曼树与哈夫曼编码">哈夫曼树与哈夫曼编码</span></h2><h3><span id="定义">定义</span></h3><p><a href="https://imgtg.com/image/SNRTS"><img src="https://i.imgtg.com/2023/01/24/SNRTS.png" alt="SNRTS.png"></a></p><h3><span id="哈夫曼树">哈夫曼树</span></h3><ul><li>每次把权值最小的两个结点合并</li><li>新结点的权值就两结点权值之和</li><li>再从剩下的里面找最小的两个</li></ul><p><a href="https://imgtg.com/image/SNtvN"><img src="https://i.imgtg.com/2023/01/24/SNtvN.md.png" alt="SNtvN.md.png"></a></p><h3><span id="特点">特点</span></h3><p><a href="https://imgtg.com/image/SNHOL"><img src="https://i.imgtg.com/2023/01/24/SNHOL.md.png" alt="SNHOL.md.png"></a></p><h3><span id="哈夫曼编码">哈夫曼编码</span></h3><ul><li>避免二义性<ul><li>任何字符的编码都不是另一字符编码的前缀</li></ul></li></ul><h4><span id="二叉树用于编码">二叉树用于编码</span></h4><ul><li>避免二义性<ul><li>所有编码都在叶节点上</li></ul></li></ul><p><a href="https://imgtg.com/image/SNLNi"><img src="https://i.imgtg.com/2023/01/24/SNLNi.md.png" alt="SNLNi.md.png"></a></p><p><a href="https://imgtg.com/image/SNELX"><img src="https://i.imgtg.com/2023/01/24/SNELX.png" alt="SNELX.png"></a></p><p><a href="https://imgtg.com/image/SNGut"><img src="https://i.imgtg.com/2023/01/24/SNGut.md.png" alt="SNGut.md.png"></a></p><h2><span id="集合的表示">集合的表示</span></h2><h3><span id="集合运算">集合运算</span></h3><h4><span id="查找">查找</span></h4><p><a href="https://imgtg.com/image/SYsHv"><img src="https://i.imgtg.com/2023/01/28/SYsHv.png" alt="SYsHv.png"></a></p><h4><span id="并">并</span></h4><p><a href="https://imgtg.com/image/SYVXq"><img src="https://i.imgtg.com/2023/01/28/SYVXq.png" alt="SYVXq.png"></a></p><ul><li>改善，将小并到大中去</li></ul><h2><span id="例子">例子</span></h2><h3><span id="file-transfer">FILE TRANSFER</span></h3><h4><span id="按秩归并对uion的改进">按秩归并——对Uion的改进</span></h4><p><a href="https://imgtg.com/image/SfqTB"><img src="https://i.imgtg.com/2023/01/28/SfqTB.png" alt="SfqTB.png"></a></p><p>树越长越高，退化成单链表</p><h5><span id="高度">高度</span></h5><p><a href="https://imgtg.com/image/SfBcK"><img src="https://i.imgtg.com/2023/01/28/SfBcK.md.png" alt="SfBcK.md.png"></a></p><h5><span id="规模">规模</span></h5><p><a href="https://imgtg.com/image/SfUOa"><img src="https://i.imgtg.com/2023/01/28/SfUOa.md.png" alt="SfUOa.md.png"></a></p><h4><span id="路径压缩对find的改进">路径压缩——对Find的改进</span></h4><p><a href="https://imgtg.com/image/SfHu6"><img src="https://i.imgtg.com/2023/01/28/SfHu6.png" alt="SfHu6.png"></a></p><h5><span id="时间复杂度">时间复杂度</span></h5><p><a href="https://imgtg.com/image/SfGRb"><img src="https://i.imgtg.com/2023/01/28/SfGRb.png" alt="SfGRb.png"></a></p><h2><span id="补充">补充</span></h2><h3><span id="尾递归与普通递归">尾递归与普通递归</span></h3><p><a href="https://blog.csdn.net/weixin_40539125/article/details/88043983">参考博客</a></p><p><strong>尾递归的判断标准是函数运行最后一步是否调用自身，而不是是否在函数的最后一行调用自身。</strong></p><ul><li>非尾递归，下一个函数结束以后此函数还有后续，所以必须保存本身的环境以供处理返回值。</li><li>尾递归，进入下一个函数不再需要上一个函数的环境了，得出结果以后直接返回。</li></ul><p>普通递归实现阶加函数</p><pre><code class="language-c">int recsum(int n) &#123;    if (n &lt; 0)        return 0;    else if(n == 0 || n == 1)        return 1;    else        return n + recsum(n - 1);&#125;</code></pre><pre><code class="language-c">recsum(5)5 + recsum(4)5 + (4 + recsum(3))5 + (4 + (3 + recsum(2)))5 + (4 + (3 + (2 + recsum(1))))5 + (4 + (3 + (2 + 1)))5 + (4 + (3 + 3))5 + (4 + 6)5 + 1015 </code></pre><p>尾递归</p><pre><code class="language-c">int tailrecsum(int n, int res=0)&#123;    if (n &lt; 0)        return 0;    else if(n == 0)        return res;    else        return tailrecsum(n - 1, n + res);&#125;</code></pre><pre><code class="language-c">tailrecsum(5, 0)tailrecsum(4, 5)tailrecsum(3, 9)tailrecsum(2, 12)tailrecsum(1, 14)tailrecsum(0, 15)15</code></pre><p>使用尾递归可以带来一个好处：<strong>因为进入最后一步后不再需要参考外层函数（caller）的信息，因此没必要保存外层函数的stack，递归需要用的stack只有目前这层函数的，因此避免了栈溢出风险</strong></p><p>因此尾递归很容易改成循环</p><h3><span id="尾递归">尾递归</span></h3><p><a href="https://blog.csdn.net/qq_52828510/article/details/119994158">参考博客</a></p><p>如果一个函数中所有递归形式的调用都出现在函数的末尾，我们称这个递归函数是尾递归的。当递归调用是整个函数体中最后执行的语句且它的返回值不属于表达式的一部分时，这个递归调用就是尾递归。尾递归函数的特点是在回归过程中不用做任何操作，这个特性很重要，因为大多数现代的编译器会利用这种特点自动生成优化的代码。</p><h4><span id="11-原理">1.1 原理</span></h4><p>当编译器检测到一个函数调用是尾递归的时候，它就覆盖当前的活动记录而不是在栈中去创建一个新的。编译器可以做到这点，因为递归调用是当前活跃期内最后一条待执行的语句，于是当这个调用返回时栈帧中并没有其他事情可做，因此也就没有保存栈帧的必要了。<strong>通过覆盖当前的栈帧而不是在其之上重新添加一个</strong>，这样所使用的栈空间就大大缩减了，这使得实际的运行效率会变得更高。</p><h4><span id="12-实例">1.2 实例</span></h4><pre><code class="language-c">unsigned int factorial(unsigned int n)        // 阶乘的非尾递归形式（又叫线性递归）&#123;    if(n = 0 || n = 1)        return 1;    else        return n * factorial(n - 1);&#125;</code></pre><p>尾递归形式</p><pre><code class="language-c">unsigned int factorial(unsigned int n, unsigned int a = 1)        // 阶乘的尾递归形式&#123;    if(n == 0)        return 1;     if(n == 1)        return a;    else        return factorial(n - 1, a * n);&#125;</code></pre><h3><span id="为什么按规模归并与路径压缩配合使用更方便">为什么按规模归并与路径压缩配合使用更方便？</span></h3><p>在用了路径压缩之后，整棵树会变矮，这给给我们带了一个好处，那就是如果我每次都要遍历最底下未寻找过的结点，对一棵不用按秩归并处理的树来说，需要O(N2)的时间复杂度，对于用按秩归并的树来说，需要O(Nlog2N)的时间复杂度。而如果我们做了路径压缩，很有可能在做Find操作时所需要的时间复杂度为O(1)。</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 树 </tag>
            
            <tag> 递归 </tag>
            
            <tag> 尾递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变美_有村架纯</title>
      <link href="/2023/01/12/%E5%8F%98%E7%BE%8E-%E6%9C%89%E6%9D%91%E6%9E%B6%E7%BA%AF/"/>
      <url>/2023/01/12/%E5%8F%98%E7%BE%8E-%E6%9C%89%E6%9D%91%E6%9E%B6%E7%BA%AF/</url>
      
        <content type="html"><![CDATA[<h1><span id="变美_有村架纯">变美_有村架纯</span></h1><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230112212220921.png" alt="image-20230112212220921"></p><h2><span id="妆容">妆容</span></h2><ul><li>底妆清透自然</li><li>清透</li><li>浅棕色</li></ul><h2><span id="发型">发型</span></h2><ul><li>层次感</li><li>发根蓬松</li></ul><h2><span id="服饰">服饰</span></h2><ul><li><p>领口</p></li><li><p>露肤度高</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 变美 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GRE_备考</title>
      <link href="/2023/01/12/GRE-%E5%A4%87%E8%80%83/"/>
      <url>/2023/01/12/GRE-%E5%A4%87%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1><span id="gre_备考">GRE_备考</span></h1><blockquote><p>清楚考试的底层逻辑</p></blockquote><ul><li><p>标化考试</p></li><li><p>过平均分就可以了（but对于顶尖名校越高越好</p></li></ul><h2><span id="内容">内容</span></h2><h3><span id="作文">作文</span></h3><ol><li>ISUUE</li><li>ARGUMENT</li></ol><h3><span id="语文verbal">语文Verbal</span></h3><ol><li>10道填空</li><li>10道阅读</li></ol><h3><span id="数学quant">数学Quant</span></h3><h2><span id="备考">备考</span></h2><h3><span id="词汇">词汇</span></h3><ol><li>速刷3000 三遍</li><li>800词</li><li>六选二同义词</li><li>短语搭配</li><li>所有不认识的词</li><li>长得很像的词</li><li>数学词</li></ol><h3><span id="verbal">Verbal</span></h3><ol><li>考纲OG<ol><li><a href="https://www.ets.org/gre/test-takers/general-test/prepare.html">https://www.ets.org/gre/test-takers/general-test/prepare.html</a></li></ol></li><li>词汇和真题<ol><li>背单词<ol><li>不用一次性记全</li></ol></li><li>刷题<a href="https://gre.kmf.com/">考满分</a><ol><li>填空1200<ol><li>看皇冠GRE理论课</li><li>金皮书填空</li></ol></li><li>阅读240<ol><li>微臣教育白皮书</li><li>金皮书阅读</li><li>皇冠GRE理论课</li><li>微臣教育长难句300例</li></ol></li></ol></li></ol></li><li>模考</li></ol><h3><span id="quant">Quant</span></h3><blockquote><p>把知识点都复习到</p></blockquote><p>张鹏讲GRE数学</p><ol><li><p>张巍宝典</p></li><li><p>张巍200题</p></li><li><p>词汇公式</p></li><li><p>难题坑题</p><ol><li>张巍数学170</li></ol></li><li><p>考满分知识点排查</p></li></ol><h3><span id="作文">作文</span></h3><p>真题</p><p>颜神公开课</p><p>模板</p><h2><span id="模考">模考</span></h2><p>OG PP2</p><h2><span id="考前">考前</span></h2><ol><li>错题</li><li>自己整理的词汇</li></ol><h2><span id="我的备考计划">我的备考计划</span></h2><p>1.13——信息整理</p><ul><li>看完考纲OG</li><li>看完皇冠GRE理论课</li><li>看完《张鹏讲GRE数学》第一讲</li></ul><p>1.14GRE单词背一遍</p><p>单词刷两遍</p><p>Verbal刷完真题</p><p>数学词汇搭配刷一遍</p><p>Quant刷张巍宝典和张巍170</p><p>作文每天写</p><p>模考8份</p>]]></content>
      
      
      <categories>
          
          <category> GRE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记_沉思录</title>
      <link href="/2023/01/04/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%B2%89%E6%80%9D%E5%BD%95/"/>
      <url>/2023/01/04/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%B2%89%E6%80%9D%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1><span id="读书笔记_沉思录">读书笔记_沉思录</span></h1><p>《沉思录》奥勒留</p><h2><span id="阅读时间">阅读时间</span></h2><p>1.4-1.24 哭哭，拖了好久捏~</p><h2><span id="摘录">摘录</span></h2><ul><li>一方面能足够强健地承受，另一方面又能保持清醒的品质，正是一个拥有一颗完善的、不可战胜的灵魂的人的标志。<ul><li>这里感触蛮深的，有的人虽然在承受，看起来很强健，但是内心充满了不情愿、自怨自艾、怨天尤人等等消极情绪，仿佛所有不幸都在ta身上。反而有时候失去了这样承受的意义。</li></ul></li><li>从阿波罗尼奥斯……我懂得了在任何时候都要依赖理性，而不依赖任何别的东西。<ul><li>牢记</li></ul></li><li>从柏拉图派学者亚历山大……我懂得了我们并不是总能以紧迫事务的借口来推卸对与自己一起生活的那些人的义务。<ul><li>原来亚历山大是这样学问与生活兼顾的人啊~</li></ul></li><li>从马克西莫斯……他从未表现过奇怪和惊骇，从不匆忙，从不拖延，从不困惑或沮丧。<ul><li>好美好的品质！</li></ul></li><li>在我的父亲那里，我看到了一种温柔的气质，和在他经过适当的考虑之后对所决定的事情的不可更改的决心。<ul><li>这也是非常值得我学习的。</li></ul></li><li>他能够放弃也能够享受那些东西——这些东西是<strong>许多人太软弱以致既不能够放弃、又不能够有节制地享受的</strong>。而这种<strong>一方面能够强健地承受，另一方面又能保持清醒的品质</strong>，正是一个拥有一颗完善的、不可战胜的灵魂的人的标志。<ul><li>原来原话是这个意思~不过这方面的品质也非常值得我学习。比如处理爱情，荣誉等等，都适用。</li></ul></li><li>唯一能从一个人那里夺走的只是现在。如果这是真的，即一个人只拥有现在，那么一个人就不可能丧失一件他并不拥有的东西。</li><li><a href="https://imgtg.com/image/EuRes"><img src="https://i.imgtg.com/2023/01/04/EuRes.md.jpg" alt="EuRes.md.jpg"></a></li></ul><p>《沉思录》<br>奥勒留<br>55个笔记</p><p>◆  点评</p><p>2023/1/24 认为好看<br>梁实秋先生的译文还是信达的，不过我觉得雅上略有欠缺，当然这与原文的文体有很大关系。总之，是一本智慧的凝结，值得多看。</p><p>◆  卷四</p><blockquote><blockquote><p>所以从今以后，你该退隐到自己那块小天地里去，不要过分紧张、不要急躁，要从容自持，要像一个人，一个有人性的人，一个公民，一个尘世凡人那样地去面对人生。但是最方便的宗旨当中，有两项你要注意：第一，客观的事物并不能涉及灵魂，只是在外面静止着；烦扰皆由内心而起。第二，眼见的世界瞬息万变，然后趋于消灭；要不断地想念你自己亲见的有多少事物在变。“宇宙即变化，人生即主观。”</p></blockquote></blockquote><blockquote><blockquote><p>“人生即主观”一句是毕达哥拉斯派哲学家Democrates的格言。出现在莎士比亚《哈姆雷特》第二幕二景二五六行。原文是“There is nothing either good or bad, but thinking makes it so”。</p></blockquote></blockquote><p>◆  卷七</p><blockquote><blockquote><p>每个人的价值和他所感兴趣的事物的价值是可以等量齐观的。</p></blockquote></blockquote><blockquote><blockquote><p>在谈话中要注意所说的话，在行动中要注意所做的事。在后者中要于开始时洞察其所能引起的结果，在前者中要小心地把握其含义。</p></blockquote></blockquote><blockquote><blockquote><p>“不管别人怎样说怎样做，我终归是一块翡翠，我要保持我的颜色。”</p></blockquote></blockquote><blockquote><blockquote><p>理性永不搅乱其自身的宁静，换言之，永不使其自身陷于欲望</p></blockquote></blockquote><blockquote><blockquote><p>理性本身无所需求，除非是它自己创造需要，同样地没有什么东西能搅乱它，没有什么东西能妨碍它，除非那扰乱与妨碍来自它自身。</p></blockquote></blockquote><blockquote><blockquote><p>脸上的怒容是极其不自然的，怒容若是常常出现，则一切的美便立刻开始消失，其结果是美貌全灭而不可复燃。</p></blockquote></blockquote><blockquote><blockquote><p>佛家把“嗔”列为三毒之一，“嗔心甚于猛火”，克服嗔恚是修持的基本功夫之一。</p></blockquote></blockquote><blockquote><blockquote><p>理性的特征便是：“对于自己的正当行为及其所产生的宁静和平怡然自得。”</p></blockquote></blockquote><blockquote><blockquote><p>如有人做了什么对不起你的事，你不用介意，让做那事的人去介意。</p></blockquote></blockquote><blockquote><blockquote><p>真正的宗教信仰与热情，应求之于哲学。——梁实秋批注</p></blockquote></blockquote><blockquote><blockquote><p>对东西发怒是无益的，因为它们毫不介意。</p></blockquote></blockquote><blockquote><blockquote><p>生命像成熟的谷子一般被刈割。一批倒下去，一批又生出来。</p></blockquote></blockquote><blockquote><blockquote><p>不要随着别人恸哭，不要纵情发狂。</p></blockquote></blockquote><blockquote><blockquote><p>雅典人啊，这才是真实情形：一个人无论是被放置于最合己意的地方，还是被他的主宰者置于某地，在我看来，他都应该安心留停，坦然面对，除荣誉之外不应考虑死亡或其他任何事。</p></blockquote></blockquote><blockquote><blockquote><p>看星体运行，好像你自己也在随着转动一般；并且时时地想着元素之交相变换，因为这样的念头可以洗刷掉尘世生活的污秽。</p></blockquote></blockquote><p>2023/1/22 发表想法<br>每个人都有自己的专长所在，发现她，挖掘它，发展它，不必焦虑地与别人比较</p><blockquote><blockquote><p>一个人可能比你更善于摔跤，但是不见得就更富于服务精神或谦恭的态度，或更善于随机应变，或更能体谅邻居的缺点。</p></blockquote></blockquote><blockquote><blockquote><p>一个人可能比你更善于摔跤，但是不见得就更富于服务精神或谦恭的态度，或更善于随机应变，或更能体谅邻居的缺点</p></blockquote></blockquote><p>2023/1/22 发表想法<br>我本是一个能用理性支配一切的人，能很好地压抑情绪，杀灭偷懒的念头。但高三下半学期开始有了松懈，开始觉得自己太辛苦，常常想着让自己放松，最后高考成绩一塌糊涂，大一成绩也一塌糊涂。找回你的理性，理性占主导才能过好人生！</p><blockquote><blockquote><p>理智的活动是较优越的，永不被感觉与欲望所支配，确实是应该如此：因为理性的本质便是要支配感觉与欲望的。</p></blockquote></blockquote><blockquote><blockquote><p>要假设你现在已经死了，一生已经结束，此后残余的岁月只当作这一生的延续，要按照自然之道生活下去。</p></blockquote></blockquote><blockquote><blockquote><p>为什么不致全力于如何使意外事故成为有益的功课上呢？因为那样你便可把它们善为利用，转祸为福。</p></blockquote></blockquote><blockquote><blockquote><p>向内看。善的泉源是内在的，如果你肯发掘，它便会不断地喷涌。</p></blockquote></blockquote><blockquote><blockquote><p>与其说人生像跳舞，不如说人生像摔跤，因为它需要我们立定脚跟，准备迎接不可预见的每一次攻击</p></blockquote></blockquote><blockquote><blockquote><p>在大部分的苦痛中，可乞救于伊壁鸠鲁的一句名言——“一种苦痛永不会是不可忍的或永无休止的”，所以要记住它是有限度的，不要在想象中把它扩大。</p></blockquote></blockquote><p>2023/1/22 发表想法<br>是这样的，我们总会夸大自己经历的不如意的事情，或者在未经历时夸大它们的可怕，让自己恐惧得畏首畏尾。这就是自己把自己给吓死了，被自己的心灵给打败了。这太可笑可悲，太遗憾了。要先勇敢地去做，没有什么不可能的！</p><blockquote><blockquote><p>我们日常生活中有许多的不适，实在不是真正的苦痛，例如打瞌睡、发高烧、不思饮食。如果为这些情形所苦恼，便要对你自己说：“我是在被苦痛所降服了。”</p></blockquote></blockquote><blockquote><blockquote><p>我们日常生活中有许多的不适，实在不是真正的苦痛，例如打瞌睡、发高烧、不思饮食。如果为这些情形所苦恼，便要对你自己说：“我是在被苦痛所降服了。”</p></blockquote></blockquote><blockquote><blockquote><p>过一种幸福生活所需要的只是尽可能少的事物；不要因为你无望在辩证法与物理学领域有所造诣，就放弃做一个自由、谦恭、无私、敬神的人。</p></blockquote></blockquote><blockquote><blockquote><p>完美的性格应该是这样的——过每一天就好像是过最后一天似的，不激动、不麻痹、不虚伪。</p></blockquote></blockquote><p>◆  卷八</p><blockquote><blockquote><p>你尽管气炸了肺，他们依然要做同样的事。</p></blockquote></blockquote><blockquote><blockquote><p>悔悟乃是忽略了“某一些有益的事物”之后的一种自责。</p></blockquote></blockquote><blockquote><blockquote><p>你睡醒懒得起来时，要想想：克尽对于人群的责任，乃是你的本分，乃是合乎人性的；而睡觉的本领，乃是无理性的动物与人类所共有的。凡合乎个人本性的亦即是较为亲切的、较为亲近的、较为愉快的。</p></blockquote></blockquote><blockquote><blockquote><p>要坚持！而且如属可能，要在每一情形下坚持，用物理学、伦理学与论理学的规则去考验你的印象。</p></blockquote></blockquote><blockquote><blockquote><p>无论遇到什么人，立刻向自己提出这样一个问题：“这个人对于善与恶有什么样的见解？”</p></blockquote></blockquote><blockquote><blockquote><p>你睡醒懒得起来时，要想想：克尽对于人群的责任，乃是你的本分，乃是合乎人性的；而睡觉的本领，乃是无理性的动物与人类所共有的。凡合乎个人本性的亦即是较为亲切的、较为亲近的、较为愉快的。</p></blockquote></blockquote><blockquote><blockquote><p>看无花果树上长了无花果而表示惊讶，那固然是糊涂；看宇宙产生出其所特有的成果而表示惊讶，也是同样糊涂。犹如一个医生或一个舵手，看见一个病人发热或天上起了逆风而表示惊讶，那也是糊涂。</p></blockquote></blockquote><blockquote><blockquote><p>要记住，改变主张与接受别人的矫正，并不能算是与真正的意志自由相抵触。因为只有你自己才能决心努力，使你的行为合乎你的动机、判断，甚至你的智慧。</p></blockquote></blockquote><blockquote><blockquote><p>毫不狂妄地接受，毫不踌躇地放弃。</p></blockquote></blockquote><blockquote><blockquote><p>我若使我自己苦痛，那是不对的，因为我从来没有故意使别人苦痛过。</p></blockquote></blockquote><blockquote><blockquote><p>只为了换个地方，我的心灵便忐忑不安，自贬身价、匍匐、张皇、崩溃、恐惧，值得吗？什么事能值得它这样呢？</p></blockquote></blockquote><blockquote><blockquote><p>如果所遭遇的仅是一些自然的而且习惯的事，为什么要悲伤呢？因为宇宙自然不会带给你任何你所不能忍受的事。</p></blockquote></blockquote><blockquote><blockquote><p>你遭遇外界挫折而烦恼的时候，使你困扰的不是那件事情本身，而是你自己对那件事情的判断——这判断，你能立刻就把它消灭掉。</p></blockquote></blockquote><blockquote><blockquote><p>除了由初步的印象所获得的报告之外，不必对自己再多说什么！有人对你说，某某人在讲你的坏话；是有人这样对你说了，但是并没有对你说你受了什么伤害。我看出我的孩子生病——我是看出他有病，但是我并未看出他有危险。永远保持初步印象，不要从内心里去加补充，那么你便没有遭遇什么不幸。不过要补充这一点：世上一切可能发生的意外之事，你都是熟悉的。</p></blockquote></blockquote><blockquote><blockquote><p>“这条黄瓜是苦的。”丢掉它。“这条路上有荆棘。”转弯走。这就够了，用不着再加上一句：“为什么世上要有这种东西？”因为你会被通达自然之理的人所讥笑。</p></blockquote></blockquote><blockquote><blockquote><p>做事不可迟缓，言谈不可杂乱，思想不可模糊；心灵不可完全倾注在本身上面，亦不可任其激动。生活中总要有一点闲暇。</p></blockquote></blockquote><blockquote><blockquote><p>试想一个人站在一个晶莹透彻的泉边咒骂，泉依然会汩汩地冒出鲜凉的水。丢进泥巴，甚至秽物，它也会很快地把它们冲掉而毫无污染。</p></blockquote></blockquote><p>◆  卷九</p><blockquote><blockquote><p>今天我脱离了一切烦恼，也可以说是抛弃了一切烦恼，因为烦恼不在外面，是在里面，在我自己的想象里。</p></blockquote></blockquote><blockquote><blockquote><p>你遭遇无穷的苦恼，只因你不满足于“理性之按照其组成部分”去行事。不必再多说！</p></blockquote></blockquote><p>◆  卷十</p><blockquote><blockquote><p>悠闲而不慵懒，愉快而又镇定，做一切事均追随理性者即是如此。</p></blockquote></blockquote><p>◆  卷十一</p><blockquote><blockquote><p>理性的灵魂之作用如下：它看见自己，剖析自己，按照它自己的意志而铸造自己，自己收获自己的成果；植物界的果实以及动物之类似的产物则由他人收获；无论生活的界限划在什么地方，它都能达到自己的目标。</p></blockquote></blockquote><blockquote><blockquote><p>有人轻蔑我，将如何对待呢？那是他的事。在言行方面不做出任何令人轻蔑的事，那可是我的事。有人嫉恨我，将如何对待呢？那是他的事。但是我对任何人总要和善，</p></blockquote></blockquote><blockquote><blockquote><p>发怒不是丈夫气概，和蔼的性格较合于人性，亦较富于男性气质。是和蔼的人，不是易于发怒和易于抱怨的人，禀赋有力量、胆量与勇气。一个人越近于宁静，越近于强有力。悲哀是一种脆弱，愤怒也是。二者皆能使人受伤，皆能令人崩溃。</p></blockquote></blockquote><p>◆  卷十二</p><blockquote><blockquote><p>如果，我再说一遍，你把来自肉体影响的一切，以及过去未来之事，全都从你的理性上解除掉，把你自己变成为恩培多克勒手中的浑天仪一般——“浑圆无迹，安稳自如”，训练你自己只过自己的生活，亦即现在，那么你便可宁静地、和平地、称心如意地度过余年。</p></blockquote></blockquote><blockquote><blockquote><p>我常惊讶，我们每个人爱自己胜过爱其他的人，但是对于自己对自己的看法之重视，远不如别人对于自己的看法。</p></blockquote></blockquote><blockquote><blockquote><p>人生亦复如是，我们的全部动作在适当的时候停止，并不因此而吃亏。在适当时候，结束这一连串动作的人，也并无任何困窘之可言</p></blockquote></blockquote><blockquote><blockquote><p>“我们生存时，死尚不存在；死来时，我们已不生存，所以死与我们毫无关系。”</p></blockquote></blockquote><h2><span id="想法">想法</span></h2><p>这本书我断断续续看了20天，有拍案惊奇之处，也有懵懵懂懂之言。很多哲理都看起来很有道理，但要落实到生活中可能还需非一番努力（当然大概率是我第二天就忘记了）</p><p>我原来阅读的纸质书感觉翻译得不是很好，第七章开始就完全在手机上阅读梁秋实先生的译著了。</p><p>总之是值得一读再读的书，每次都会生发新的感慨</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记_我想和你虚度时光</title>
      <link href="/2023/01/03/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%88%91%E6%83%B3%E5%92%8C%E4%BD%A0%E8%99%9A%E5%BA%A6%E6%97%B6%E5%85%89/"/>
      <url>/2023/01/03/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%88%91%E6%83%B3%E5%92%8C%E4%BD%A0%E8%99%9A%E5%BA%A6%E6%97%B6%E5%85%89/</url>
      
        <content type="html"><![CDATA[<h1><span id="读书笔记_我想和你虚度时光">读书笔记_我想和你虚度时光</span></h1><p>这本书读来不是很懂，只觉得词藻很美，很多诗都是好像触动了我，但又说不出来在哪一方面让我触动。就简单做一下摘录吧~</p><ul><li>我想和你虚度时光——这整首诗都很美~感觉应该是这本诗集最出彩的诗歌了</li></ul><p>我想和你虚度时光，比如低头看鱼</p><p>比如把茶杯留在桌子上，离开</p><p>浪费它们好看的阴影</p><p>我还想连落日一起浪费，比如散步</p><p>一直消磨到星光满天</p><p>我还要浪费风起的时候</p><p>坐在走廊发呆，直到你眼中乌云</p><p>全部被吹到窗外</p><p>我已经虚度了世界，它经过我</p><p>疲倦，又像从未被爱过</p><p>但是明天我还要这样，虚度</p><p>满目的花草，生活应该像它们一样美好</p><p>一样无意义，像被虚度的电影</p><p>那些绝望的爱和赴死</p><p>为我们带来短暂的沉默</p><p>我想和你互相浪费</p><p>一起虚度短的沉默，长的无意义</p><p>一起消磨精致而苍老的宇宙</p><p>比如靠在栏杆上，低头看水的镜子</p><p>直到所有被虚度的事物</p><p>在我们身后，长出薄薄的翅膀</p><ul><li>黄昏</li></ul><p>黄昏是黑夜之前</p><p>一段很短的路</p><p>人生是寂静之前</p><p>一段很短的路</p><p>我们留下泛黄的照片</p><p>激动和笨拙的文字</p><p>我们留下用旧了的世界</p><p>它在变暗——</p><p>仿佛被遗弃的蝉蜕</p><ul><li>就是这样，世上又多了一个/折痕很深的人——深蓝色</li><li>关于诗</li></ul><p>[<img src="https://i.imgtg.com/2023/01/03/EjHSU.md.jpg" alt="EjHSU.md.jpg"><a href="https://imgtg.com/image/EjHSU"></a></p><ul><li>如果你试图爱上一个人</li></ul><p><a href="https://imgtg.com/image/EjLCY"><img src="https://i.imgtg.com/2023/01/03/EjLCY.md.jpg" alt="EjLCY.md.jpg"></a></p><p><a href="https://imgtg.com/image/EjGnv"><img src="https://i.imgtg.com/2023/01/03/EjGnv.md.jpg" alt="EjGnv.md.jpg"></a></p><ul><li>阅读的时候</li></ul><p><a href="https://imgtg.com/image/EjsYG"><img src="https://i.imgtg.com/2023/01/03/EjsYG.md.png" alt="EjsYG.md.png"></a></p><ul><li>从一首过时的歌中醒来</li></ul><p><a href="https://imgtg.com/image/EjY51"><img src="https://i.imgtg.com/2023/01/03/EjY51.md.jpg" alt="EjY51.md.jpg"></a></p><p><a href="https://imgtg.com/image/Ej9wF"><img src="https://i.imgtg.com/2023/01/03/Ej9wF.md.jpg" alt="Ej9wF.md.jpg"></a></p><ul><li>阅读的时候</li></ul><p><a href="https://imgtg.com/image/EjlSD"><img src="https://i.imgtg.com/2023/01/03/EjlSD.md.jpg" alt="EjlSD.md.jpg"></a><br><a href="https://imgtg.com/image/EjfAI"><img src="https://i.imgtg.com/2023/01/03/EjfAI.md.jpg" alt="EjfAI.md.jpg"></a></p><blockquote><p>要复习马原，来不及力</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年度书单</title>
      <link href="/2023/01/03/2023%E5%B9%B4%E5%BA%A6%E4%B9%A6%E5%8D%95/"/>
      <url>/2023/01/03/2023%E5%B9%B4%E5%BA%A6%E4%B9%A6%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<ol><li>《我想和你虚度时光》李元胜 现代诗歌 1.3</li><li>《沉思录》1.24</li></ol>]]></content>
      
      
      <categories>
          
          <category> 书单 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马原_期末复习</title>
      <link href="/2022/12/31/%E9%A9%AC%E5%8E%9F-%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
      <url>/2022/12/31/%E9%A9%AC%E5%8E%9F-%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1><span id="马原_期末复习">马原_期末复习</span></h1><h2><span id="导论">导论</span></h2><p><a href="https://imgtg.com/image/ESjjU"><img src="https://i.imgtg.com/2022/12/31/ESjjU.png" alt="ESjjU.png"></a></p><h3><span id="马克思主义的创立和发展">马克思主义的创立和发展</span></h3><h4><span id="马克思主义的内涵">马克思主义的内涵</span></h4><ul><li>是由马克思和恩格斯创立并为后继者所不断发展的科学理论体系，</li><li>是关于自然、社会和人类思维发展一般规律的学说，</li><li>是关于社会主义必然代替资本主义、最终实现共产主义的学说，</li><li>是关于无产阶级解放、全人类解放和每个人自由而全面发展的学说，</li><li>是指引人民创造美好生活的行动指南。</li></ul><h4><span id="马克思主义的构成">马克思主义的构成</span></h4><ul><li>马克思主义哲学</li><li>马克思主义政治经济学</li><li>科学社会主义</li></ul><h4><span id="马克思主义的基本立场">马克思主义的基本立场</span></h4><ul><li>人民</li><li>解放</li></ul><h4><span id="马克思主义的基本观点">马克思主义的基本观点</span></h4><ul><li>科学</li></ul><h4><span id="马克思主义的基本方法">马克思主义的基本方法</span></h4><ul><li>辨证分析等</li></ul><h4><span id="马克思主义的来源">马克思主义的来源</span></h4><h5><span id="1-社会根源">1. 社会根源</span></h5><p>资本主义的发展</p><h5><span id="2-阶级基础">2. 阶级基础</span></h5><p>无产阶级反抗资产阶级剥削压迫</p><h5><span id="3-思想渊源">3. 思想渊源</span></h5><ul><li>德国古典哲学</li><li>英国古典政治经济学</li><li>英法两国空想社会主义</li></ul><h5><span id="补充-经典著作">补充： 经典著作</span></h5><p><a href="https://imgtg.com/image/ES6UY"><img src="https://i.imgtg.com/2022/12/31/ES6UY.png" alt="ES6UY.png"></a></p><p><a href="https://imgtg.com/image/ES8yv"><img src="https://i.imgtg.com/2022/12/31/ES8yv.md.png" alt="ES8yv.md.png"></a></p><h3><span id="马克思主义的鲜明特征">马克思主义的鲜明特征</span></h3><h4><span id="1-科学性独有">1. 科学性（独有）</span></h4><ul><li>正确</li></ul><h4><span id="2-革命性">2. 革命性</span></h4><ul><li>彻底的批判精神——对以往理论都批判，但不全盘否定</li><li>鲜明的无产阶级立场</li></ul><h4><span id="3-实践性独有">3. 实践性（独有）</span></h4><ul><li>在实践中接受检验并随实践不断发展</li></ul><h4><span id="4-人民性">4. 人民性</span></h4><ul><li>人们性是以阶级性为深刻基础的，是无产阶级先进性的体现</li></ul><h4><span id="5-发展开放性">5. 发展开放性</span></h4><ul><li>发展：不断发展，与时俱进</li><li>开放：不断吸收，丰富自己</li></ul><h5><span id="例题">例题：</span></h5><ol><li>强大生命力：科学，实践，革命</li><li>鲜明特征：科学，实践，革命，人民，发展开放</li><li>独有特征：科学，实践</li></ol><h1><span id="马克思主义哲学">马克思主义哲学</span></h1><h2><span id="辩证唯物主义是什么">辩证唯物主义——是什么</span></h2><p><a href="https://imgtg.com/image/ESXsq"><img src="https://i.imgtg.com/2022/12/31/ESXsq.png" alt="ESXsq.png"></a></p><h3><span id="哲学及其基本问题">哲学及其基本问题</span></h3><p><a href="https://imgtg.com/image/ESIac"><img src="https://i.imgtg.com/2022/12/31/ESIac.md.png" alt="ESIac.md.png"></a></p><h3><span id="世界多样性与物质统一性">世界多样性与物质统一性</span></h3><h4><span id="物质范畴及其理论意义">物质范畴及其理论意义</span></h4><p>恩格斯：抽象概念</p><p>列宁——从物质与意识的关系上来把握</p><ol><li>通过感觉感知</li><li>不依赖于感觉存在</li><li>为感觉复写反映</li></ol><p><strong>马克思</strong></p><ol><li>客观实在</li><li>能动的反映论和可知论</li><li>唯物论和辩证法</li><li>唯物主义自然观和唯物主义历史观统一</li></ol><h4><span id="物质和运动">物质和运动</span></h4><h5><span id="运动的概念">运动的概念</span></h5><ul><li>运动是标志一切事物和现象的变化及其过程的哲学范畴</li><li>运动是物质的存在方式和根本属性</li></ul><h5><span id="物质和运动的关系">物质和运动的关系</span></h5><p>不可分割</p><h5><span id="两种错误观点">两种错误观点</span></h5><p>脱离物质谈运动，将导致唯心主义；脱离运动谈物质，将导致形而上学。</p><h5><span id="补充">补充：</span></h5><ul><li>物质的存在方式是运动</li><li>运动的存在方式是时空</li></ul><h4><span id="运动和静止">运动和静止</span></h4><h5><span id="静止">静止</span></h5><p>静止是物质运动在一定条件下的稳定状态，包括<strong>空间位置</strong>和<strong>根本性质</strong>暂时未变这样两种运动的特殊状态。</p><h5><span id="关系">关系</span></h5><p>对立统一</p><h5><span id="区别">区别</span></h5><p>运动：绝对，无条件</p><p>静止：相对，有条件</p><h5><span id="联系">联系</span></h5><p>互相依赖，互相渗透，互相包含</p><p>动中有静，静中有动</p><h5><span id="两种错误观点">两种错误观点</span></h5><p>夸大静止，否定运动将导致形而上学；夸大运动，否定静止将导致诡辩论。</p><h5><span id="补充">补充</span></h5><p>运动的快慢靠静止衡量</p><h4><span id="物质运动和时空">物质运动和时空</span></h4><h5><span id="时空">时空</span></h5><ul><li>时间是指物质运动的持续性、顺序性，特点是一维性，即一去不复返。</li><li>空间是指物质运动的广延性、伸张性，特点是三维性</li></ul><h5><span id="特点">特点</span></h5><ul><li>相对性</li><li>具体物质形态时空有限，整个物质世界的时空无限</li><li>物质运动时间和空间的客观实在性是<strong>绝对的</strong>，物质运动时间和空间的具体特性是<strong>相对的</strong>（相对论）</li></ul><h5><span id="关系">关系</span></h5><ul><li>不可分割</li><li>时空是物质运动的存在形式（方式）</li></ul><h5><span id="补充">补充</span></h5><p><a href="https://imgtg.com/image/ES3er"><img src="https://i.imgtg.com/2022/12/31/ES3er.png" alt="ES3er.png"></a></p><h4><span id="实践是自然存在与社会存在区分和统一的基础">实践是自然存在与社会存在区分和统一的基础</span></h4><h5><span id="从实践出发理解社会生活的本质">从实践出发理解社会生活的本质</span></h5><ul><li><p>一方面，实践是使物质世界<strong>分化</strong>为<strong>自然界</strong>与<strong>人类社会</strong>的<strong>历史前提</strong>，又是使自然界与人类社会<strong>统一</strong>起来的<strong>现实基础</strong><a href="https://imgtg.com/image/Edpdv"><img src="https://i.imgtg.com/2023/01/01/Edpdv.th.png" alt="Edpdv.th.png"></a></p></li><li><p>另一方面，实践是人类社会的基础，是理解和解释一切社会现象的钥匙</p></li></ul><h5><span id="社会生活的实践性主要表现在">社会生活的实践性主要表现在</span></h5><ul><li>第一，实践是社会关系形成的<strong>基础</strong>；</li><li>第二，实践是社会关系形成的<strong>基础</strong>；</li><li>第三，实践构成了社会发展的<strong>动力</strong>。</li></ul><p><a href="https://imgtg.com/image/EdPaq"><img src="https://i.imgtg.com/2023/01/01/EdPaq.png" alt="EdPaq.png"></a></p><h4><span id="意识的来源-本质和作用">意识的来源、本质和作用</span></h4><h5><span id="意识">意识</span></h5><ul><li>意识是<strong>自然界</strong>长期发展的产物，</li><li>是<strong>人脑</strong>的机能和属性，</li><li>是<strong>客观世界</strong>的主观映象</li></ul><h5><span id="来源">来源</span></h5><p>意识从其起源来看是自然界长期发展的产物</p><p>意识是人独有的</p><h5><span id="影响因素">影响因素</span></h5><ol><li><p>决定性：劳动</p><ol><li><p>劳动为意识的产生和发展提供了客观需要和可能</p></li><li><p>在人们的劳动和交往中形成的<strong>语言</strong>促进了意识的发展，语言是意识的<strong>物质外壳</strong></p><blockquote><p>语言——物质，语言含义——意识</p></blockquote></li></ol></li></ol><h5><span id="本质">本质</span></h5><p><strong>意识从其本质来看是客观世界的主观映象</strong>，是客观内容和主观形式的统一。</p><h5><span id="作用论述">作用（论述）</span></h5><ol><li>意识活动具有目的性和计划性</li><li>意识活动具有创造性</li><li>意识具有指导实践改造客观世界的作用</li><li>意识具有调控人的行为和生理活动的作用</li></ol><h5><span id="补充">补充</span></h5><p><a href="https://imgtg.com/image/EdtEr"><img src="https://i.imgtg.com/2023/01/01/EdtEr.png" alt="EdtEr.png"></a></p><h4><span id="物质与意识的辩证关系">物质与意识的辩证关系</span></h4><p><a href="https://imgtg.com/image/Ed4IM"><img src="https://i.imgtg.com/2023/01/01/Ed4IM.png" alt="Ed4IM.png"></a></p><h5><span id="主观能动性和客观规律性">主观能动性和客观规律性</span></h5><ul><li>尊重客观规律是正确发挥主观能动性的前提</li><li>只有充分发挥主观能动性，才能正确认识和利用客观规律</li></ul><h5><span id="正确发挥人的主观能动性">正确发挥人的主观能动性</span></h5><ol><li>从<strong>实际</strong>出发是正确发挥人的主观能动性的<strong>前提</strong></li><li><strong>实践</strong>是正确发挥人的主观能动性的<strong>基本途径</strong></li><li>正确发挥人的主观能动性，还需要依赖于一定的<strong>物质</strong>条件和物质手段</li></ol><h4><span id="世界的的物质统一性原理">世界的的物质统一性原理</span></h4><ul><li>世界是统一的，即世界的本原是一个</li><li>世界的统一性在于它的物质性，即世界统一的基础是物质</li><li>物质世界的统一性是多样性的统一，而不是单一的无差别的统一</li></ul><h5><span id="体现">体现</span></h5><ul><li>世界的物质统一性首先体现在，意识统一于物质</li><li>世界的物质统一性还体现在，人类社会也统一于物质<ul><li>人类社会是整个物质世界的组成部分；</li><li>人类获取生活资料的活动是物质性的活动</li><li>人类社会存在和发展的基础是物质资料的生产方式</li></ul></li></ul><h5><span id="地位论述">地位（论述）</span></h5><ul><li>世界的物质统一性原理是马克思主义的基石</li></ul><h5><span id="方法论">方法论</span></h5><ul><li>坚持实事求是，一切从实际出发。一切从实际出发</li></ul><h5><span id="补充">补充</span></h5><p><a href="https://imgtg.com/image/EdHFG"><img src="https://i.imgtg.com/2023/01/01/EdHFG.png" alt="EdHFG.png"></a></p><p><a href="https://imgtg.com/image/EdLR1"><img src="https://i.imgtg.com/2023/01/01/EdLR1.png" alt="EdLR1.png"></a></p><h3><span id="唯物论思维导图">唯物论思维导图</span></h3><p><a href="https://imgtg.com/image/EdE9I"><img src="https://i.imgtg.com/2023/01/01/EdE9I.md.png" alt="EdE9I.md.png"></a></p><h2><span id="唯物辩证法怎样的">唯物辩证法——怎样的</span></h2><p><a href="https://imgtg.com/image/EdSyF"><img src="https://i.imgtg.com/2023/01/01/EdSyF.md.png" alt="EdSyF.md.png"></a></p><h3><span id="两大总特征">两大总特征</span></h3><h4><span id="事物的普遍联系">事物的普遍联系</span></h4><h5><span id="联系的概念">联系的概念</span></h5><p>联系是指事物内部各要素之间和事物之间相互影响、相互制约和相互作用的关系。</p><h5><span id="特点">特点</span></h5><ol><li>客观性</li><li>普遍性<ol><li>事物内部结构</li><li>事物之间</li><li>整个世界</li></ol></li><li>多样性<ol><li>方式：内部联系和外部联系、直接联系和间接联系、必然联系和偶然联系、本质联系和非本质联系等</li></ol></li><li>条件性<ol><li>支持或制约</li><li>可以改变</li><li>尊重事物发展的客观规律</li></ol></li></ol><h5><span id="方法论">方法论</span></h5><p>分析事物的具体联系，确立整体性、开放性的观念，从动态中考察事物的普遍联系</p><h4><span id="事物的永恒发展">事物的永恒发展</span></h4><h5><span id="概念">概念</span></h5><p>概括一切形式的变化就是运动，运动变化的基本趋势是发展</p><h5><span id="实质">实质</span></h5><p>发展是前进上升的运动，发展的实质是新事物的产生和旧事物的灭亡</p><h5><span id="新事物和旧事物的概念">新事物和旧事物的概念</span></h5><ul><li>新事物是指合乎历史前进方向、具有远大前途的东西；</li><li>旧事物是指丧失历史必然性、日趋灭亡的东西。</li></ul><h5><span id="新事物必然战胜旧事物的原因">新事物必然战胜旧事物的原因</span></h5><ol><li>就<strong>新事物与环境的关系</strong>而言，新事物有<strong>新的结构和功能</strong>，它适应已经变化了的环境和条件；旧事物的各种要素和功能已不适应环境和客观条件的变化。</li><li>就<strong>新事物与旧事物的关系</strong>而言，新事物是在旧事物的“母体”中孕育成熟的，它既<strong>否定了旧事物中消极腐朽的东西，又保留了旧事物中合理的</strong>、仍然适合新的条件的因素，并添加了旧事物所不能容纳的新内容</li></ol><h5><span id="事物发展的过程性">事物发展的过程性</span></h5><ul><li>事物的发展是一个过程。一切事物只有经过一定的过程才能实现自身的发展</li><li>世界不是既成事物的集合体，而是过程的集合体</li></ul><h5><span id="方法论">方法论</span></h5><p>用历史的眼光看问题，把一切事物如实地看作变化、发展的过程</p><p><a href="https://imgtg.com/image/EdjjK"><img src="https://i.imgtg.com/2023/01/01/EdjjK.png" alt="EdjjK.png"></a></p><h3><span id="五对基本范畴">五对基本范畴</span></h3><h4><span id="原因和结果">原因和结果</span></h4><ul><li>原因和结果是揭示事物的前后相继、彼此制约的关系范畴</li><li>×前后相继即为因果</li></ul><h5><span id="概念">概念</span></h5><ul><li>引起某种现象的现象叫原因，</li><li>而被某种现象所引起的现象叫结果</li></ul><h5><span id="关系">关系</span></h5><p>辩证</p><ul><li>原因和结果的区分既是确定的，又是不确定的</li><li>原因和结果相互作用，互为因果</li><li>原因和结果互相渗透，结果存在于原因之中，原因表现在结果之中</li><li>原因和结果的关系是复杂多样的</li></ul><h5><span id="方法论">方法论</span></h5><p>凡事预则立，不预则废</p><h4><span id="必然和偶然">必然和偶然</span></h4><h5><span id="概念">概念</span></h5><ul><li>必然是指事物联系和发展过程中一定要发生、确定不移的趋势</li><li>偶然是指事物联系和发展过程中并非确定发生的，可以出现，也可以不出现，可以这样出现，也可以那样出现的不确定的趋势</li></ul><h5><span id="关系">关系</span></h5><p>对立统一</p><p>区别</p><ul><li>产生和形成的原因不同<ul><li>必然产生于事物内部的根本矛盾</li><li>偶然产生于非根本矛盾和外部条件</li></ul></li><li>表现形式不同<ul><li>必然——稳定</li><li>偶然——不稳定</li></ul></li><li>在事物发展中的地位和作用不同<ul><li>必然——支配</li><li>偶然——从属</li></ul></li></ul><p>联系</p><ul><li>必然存在于偶然之中，通过大量的偶然表现出来，并为自己开辟道路</li><li>偶然背后隐藏着必然，受必然的支配，偶然是必然的表现形式和补充</li><li>必然和偶然在一定条件下可以互相转化</li></ul><h5><span id="方法论">方法论</span></h5><p>既要重视事物发展的必然，把握事物发展的<strong>总趋势</strong>，又要善于从偶然中发现必然，把握有利于事物发展的<strong>机遇</strong>。</p><h4><span id="可能和现实">可能和现实</span></h4><h5><span id="概念">概念</span></h5><ul><li>可能是指事物发展过程中潜在的东西</li><li>现实是指相互联系着的实际存在的事物的综合</li></ul><h5><span id="关系">关系</span></h5><ul><li>现实蕴藏着未来的发展方向，会不断产生出新的可能</li><li>可能包含着发展成为现实的因素和根据，一旦主客观条件成熟，可能就会转化为现实</li></ul><h5><span id="方法论">方法论</span></h5><p>要求人们立足现实，展望未来，注意分析事物发展的各种可能，发挥主观能动性，做好应对不利情况的准备，争取实现好的可能</p><h5><span id="补充">补充</span></h5><ul><li>现实中是否有依据<ul><li>可能</li><li>不可能</li></ul></li><li>现实中是否有充分条件依据<ul><li>现实的可能</li><li>抽象的可能</li></ul></li></ul><h4><span id="现象和本质">现象和本质</span></h4><h5><span id="概念">概念</span></h5><ul><li>外部联系和表面特征，通过感官感知</li><li>事物的内在联系和根本性质，只有通过理性思维才能把握</li></ul><h5><span id="关系">关系</span></h5><p>区别</p><ul><li>个别，一般</li><li>多变，稳定</li><li>生动丰富，深刻单纯</li></ul><p>统一</p><ul><li>本质通过现象表现</li><li>现象表现本质，是本质的外部表现，假象也是</li></ul><h5><span id="方法论">方法论</span></h5><ul><li>能认识本质</li><li>透过现象看本质</li></ul><h5><span id="补充">补充</span></h5><ul><li>现象有真相和假象之分</li><li>假象与错觉不是一回事</li><li>假象是客观存在的</li><li>×错觉一定是被假象迷惑</li><li>×真象是正确的现象</li></ul><h4><span id="内容和形式">内容和形式</span></h4><h5><span id="概念">概念</span></h5><ul><li>内容是构成事物一切要素的总和，是事物存在的基础</li><li>形式是内容诸要素相互结合的结构和表现方式</li></ul><h5><span id="关系">关系</span></h5><ul><li><p>内容和形式是相互依赖、不可分割的</p></li><li><p>内容和形式相互作用、相互影响。</p></li><li><p>内容决定形式，形式反作用于内容。</p></li><li><p>当形式适合内容时，对内容的发展起着积极的推动作用；</p></li><li><p>当形式不适合内容时，对内容的发展起着消极的阻碍作用。</p></li></ul><h5><span id="方法论">方法论</span></h5><ul><li>既要重视内容，根据内容的需要决定形式的取舍、改造和创新；</li><li>又要善于运用形式，发挥其积极作用，利用和创造必要的形式，适时地抛弃与内容不相适应的形式</li></ul><h4><span id="总结">总结</span></h4><p><a href="https://imgtg.com/image/EdwIX"><img src="https://i.imgtg.com/2023/01/01/EdwIX.png" alt="EdwIX.png"></a></p><h3><span id="三大规律">三大规律</span></h3><h4><span id="对立统一重中之重"><em>对立统一（重中之重）</em></span></h4><h5><span id="地位">地位</span></h5><p>对立统一规律是唯物辩证法的实质和核心</p><ol><li>对立统一规律揭示了事物<strong>普遍联系</strong>的<strong>根本内容</strong>和<strong>永恒发展</strong>的<strong>内在动力</strong>，从<strong>根本</strong>上回答了<strong>事物为什么会发展</strong>的问题</li><li>对立统一规律是<strong>贯穿</strong>量变质变规律、否定之否定规律以及唯物辩证法基本范畴的中心线索，也是理解这些规律和范畴的“钥匙”</li><li>对立统一规律提供了人们认识世界和改造世界的<strong>根本方法</strong>——矛盾分析方法，它是对事物辩证认识的实质</li><li>是否承认对立统一学说是唯物辩证法和形而上学对立的实质</li></ol><h5><span id="1-矛盾同一性和斗争性的辩证关系"><em>1. 矛盾同一性和斗争性的辩证关系</em></span></h5><ul><li>矛盾是反映事物内部和事物之间对立统一关系的哲学范畴。简言之，矛盾即对立统一</li></ul><h5><span id="同一性">同一性</span></h5><p>指矛盾双方相互依存、相互贯通的性质和趋势</p><p>含义</p><ul><li>矛盾着的对立面相互依存，互为存在的前提，并共处于一个统一体中</li><li>矛盾着的对立面之间相互贯通，在一定条件下相互转化</li></ul><h5><span id="斗争性">斗争性</span></h5><p>指矛盾着的对立面之间相互排斥、相互分离的性质和趋势</p><p>对抗性&amp;非对抗性</p><h5><span id="关系">关系</span></h5><ul><li><p>矛盾的同一性和矛盾的斗争性是相互联结、相互制约的</p></li><li><p>同一性不能脱离斗争性而存在， 没有斗争性就没有同一性，斗争性寓于同一性之中，没有同一性也就没有斗争性</p></li><li><p>在事物的矛盾中，矛盾的斗争性是无条件的、绝对的，矛盾的同一性是有条件的、相对的</p></li></ul><h5><span id="方法论">方法论</span></h5><ul><li>“一分为二”</li><li>求同存异</li></ul><h5><span id="2-矛盾的同一性和斗争性在事物发展中的作用"><em>2. 矛盾的同一性和斗争性在事物发展中的作用</em></span></h5><p>同一性</p><ul><li>由于矛盾双方相互依存，互为存在的条件，矛盾双方可以利用对方的发展使自己得到发展</li><li>由于矛盾双方相互包含，矛盾双方可以相互吸取有利于自身的因素而得到发展</li><li>由于矛盾双方彼此相通，矛盾双方可以向着彼此的对立面转化而得到发展，并规定着事物发展的方向。</li></ul><p>斗争性</p><ul><li>矛盾双方的斗争推动矛盾双方力量的对比发生变化，此消彼长，造成事物的量变</li><li>矛盾双方的斗争促使矛盾双方的地位或性质发生转化，实现事物的质变</li></ul><p>方法论</p><p><strong>逆向思维</strong></p><p>矛盾的同一性和斗争性不能孤立地起作用，它们对事物发展的作用只有在二者的结合中才能实现，矛盾推动事物发展是同一性和斗争性共同作用的结果</p><h5><span id="3-矛盾的普遍性和特殊性的辩证关系">3. <em>矛盾的普遍性和特殊性的辩证关系</em></span></h5><h5><span id="普遍性">普遍性</span></h5><ul><li>矛盾存在于一切事物中，存在于一切事物发展过程的始终，旧的矛盾解决了，新的矛盾又产生。</li><li>事物始终在矛盾中运动。矛盾普遍存在，但不同事物的矛盾又是具体的、特殊的。</li></ul><h5><span id="特殊性">特殊性</span></h5><ul><li>不同事物的矛盾各有其特点</li><li>同一事物的矛盾在不同发展过程和发展阶段各有不同特点</li><li>是构成事物的诸多矛盾以及每一矛盾的不同方面各有不同的性质、地位和作用。</li></ul><h5><span id="方法论">方法论</span></h5><p>具体问题具体分析</p><h5><span id="4-矛盾的不平衡发展原理"><em>4. 矛盾的不平衡发展原理</em></span></h5><p>根本矛盾和非根本矛盾、主要矛盾和次要矛盾</p><ul><li>根本矛盾贯穿事物发展过程的始终，规定着事物的性质。</li><li>主要矛盾是矛盾体系中处于支配地位，对事物发展起决定作用的矛盾</li><li>非根本矛盾、次要矛盾是处于服从地位的矛盾</li><li>在每一对矛盾中又有矛盾的主要方面与矛盾的次要方面</li><li>矛盾的性质主要是由矛盾的主要方面决定的</li></ul><h5><span id="方法论">方法论</span></h5><p>在处理问题时，既要看到主要矛盾，强调主要矛盾，也要看到次要矛盾，不能忽略次要矛盾，做到“两点论”和“重点论”相结合。</p><p><a href="https://imgtg.com/image/Esatx"><img src="https://i.imgtg.com/2023/01/01/Esatx.png" alt="Esatx.png"></a></p><h4><span id="量变质变规律">量变质变规律</span></h4><h5><span id="概念">概念</span></h5><ol><li>质<ol><li>是一事物成为自身并区别于其他事物的内在规定性</li><li>认识质是认识和实践的起点和基础。只有认识质，才能<strong>区别</strong>事物。</li></ol></li><li>量<ol><li>量是事物的规模、程度、速度等可以用数量关系表示的规定性</li><li>一是认识事物的量是认识的深化和精确化</li><li>只有正确了解事物的量，才能正确估计事物在实践中的地位和作用，因为同质的事物由于数量不同</li></ol></li><li>度<ol><li>保持事物质的稳定性的数量界限，即事物的限度、幅度和范围</li><li>度的两端叫<strong>关节点</strong>或<strong>临界点</strong>，超出度的范围，此物就转化为他物</li></ol></li><li>量变<ol><li>事物数量的增减和组成要素排列次序的变动，</li><li>是保持事物的质的相对稳定性的不显著的变化，</li><li>体现了事物发展渐进过程的连续性</li></ol></li><li>质变<ol><li>事物性质的根本变化，是事物由一种质态向另一种质态的飞跃，</li><li>体现了事物渐进过程和连续性的中断。</li></ol></li></ol><h5><span id="量变和质变的辩证关系">量变和质变的辩证关系</span></h5><ol><li>量变是质变的必要准备</li><li>质变是量变的必然结果</li><li>量变和质变是相互渗透的<ol><li>在总的量变过程中有阶段性和局部性的部分质变</li><li>在质变过程中也有旧质在量上的收缩和新质在量上的扩张</li></ol></li></ol><h5><span id="方法论">方法论</span></h5><p>适度原则</p><h4><span id="否定之否定规律">否定之否定规律</span></h4><h5><span id="肯定因素和否定因素">肯定因素和否定因素</span></h5><ul><li>肯定因素是维持现存事物存在的因素</li><li>否定因素是促使现存事物灭亡的因素</li></ul><h5><span id="辩证否定观的基本内容">辩证否定观的基本内容</span></h5><ol><li>否定是事物的<strong>自我否定</strong>，是事物内部矛盾运动的结果</li><li>否定是事物<strong>发展的</strong>环节</li><li>否定是新旧事物联系的环节，新事物孕育产生于旧事物，<strong>新旧事物是通过否定环节联系起来的</strong></li><li>辩证否定的实质是**“扬弃”**</li></ol><h5><span id="否定之否定规律">否定之否定规律</span></h5><p>事物的辩证发展就是经过两次否定，出现三个阶段即“肯定一否定一否定之否定”，形成一个周期</p><p><strong>前进性体现在</strong>每一次否定都是质变，都把事物推到新阶段；每一个周期都是开放的，不存在不被否定的终点</p><h5><span id="方法论">方法论</span></h5><p>否定之否定规律对于人们正确认识事物发展的曲折性和前进性，具有重要的指导意义。由于事物发展是前进性和曲折性的统一，我们就不能奢望什么事情都是径情直遂、一帆风顺的,要善于洞察事物发展中的各种可能性，充分估计其困难和曲折，经得起困难和挫折的考验，坚定信心，知难而上，开辟前进的道路。</p><h3><span id="辩证思维方法">辩证思维方法</span></h3><h5><span id="1-辩证思维的主要方法">1. 辩证思维的主要方法</span></h5><p>归纳和演绎、分析和综合、从抽象上升到具体、逻辑和历史相一致等方法</p><h5><span id="2-矛盾分析方法是根本的认识方法">2. 矛盾分析方法是根本的认识方法</span></h5><h5><span id="3-学习唯物辩证法不断增强思维能力">3. 学习唯物辩证法，不断增强思维能力</span></h5><h3><span id="唯物辩证法思维导图">唯物辩证法思维导图</span></h3><p><a href="https://imgtg.com/image/Es5Wp"><img src="https://i.imgtg.com/2023/01/01/Es5Wp.md.png" alt="Es5Wp.md.png"></a></p><h2><span id="认识论">认识论</span></h2><p><a href="https://imgtg.com/image/Es7gD"><img src="https://i.imgtg.com/2023/01/01/Es7gD.md.png" alt="Es7gD.md.png"></a></p><h3><span id="认识与实践">认识与实践</span></h3><h4><span id="实践">实践</span></h4><h5><span id="本质">本质</span></h5><p>实践是感性的、对象性的物质活动，全部社会生活在本质上是实践的</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230101172827782.png" alt="image-20230101172827782"></p><h5><span id="特征">特征</span></h5><p>实践是人类能动地改造世界的社会性的物质活动</p><ol><li>直接现实性<ol><li>将人脑中的东西变成现实的东西的功能</li></ol></li><li>自觉的能动性<ol><li>有目的有意识</li></ol></li><li>有社会历史性<ol><li>受一定的社会历史条件所制约的，都是随着一定的社会历史条件的变化而变化的</li></ol></li></ol><h5><span id="基本结构">基本结构</span></h5><ol><li>实践主体<ol><li>有一定的主体能力、从事现实社会实践活动的人</li><li>能力<ol><li>自然能力</li><li>精神能力<ol><li>知识性因素</li><li>非知识性因素<ol><li>情感</li><li>意志</li></ol></li></ol></li></ol></li></ol></li><li>实践客体<ol><li>客观事物只有在被纳入主体实践活动的范围之内，为主体实践活动所指向并与主体相互作用时才成为现实的实践客体</li></ol></li><li>实践中介（必不可少）<ol><li>物质性工具系统</li><li>语言符号工具系统</li></ol></li><li>三者关系<ol><li>主体客体化<ol><li>它变了</li></ol></li><li>客体主体化<ol><li>我变了</li></ol></li></ol></li></ol><p><a href="https://imgtg.com/image/EVexx"><img src="https://i.imgtg.com/2023/01/01/EVexx.png" alt="EVexx.png"></a></p><h5><span id="形式">形式</span></h5><ul><li>三种基本类型<ul><li>物质生产实践——最基本</li><li>社会政治实践</li><li>科学文化实践</li></ul></li><li>虚拟实践——实践活动的派生形式，具有相对独立性</li></ul><h4><span id="实践对认识的决定作用">实践对认识的决定作用</span></h4><ol><li>实践是认识的来源</li><li>实践是认识发展的动力</li><li>实践是认识的目的</li><li>实践是检验认识真理性的唯一标准</li></ol><h4><span id="认识">认识</span></h4><h5><span id="本质">本质</span></h5><p>是主体在实践基础上对客体的能动反映</p><ul><li>认识的反映特性是人类认识的基本规定性</li><li>认识的能动反映具有创造性</li></ul><h5><span id="认识的反映特性和创造特性之间的关系不可分割">认识的反映特性和创造特性之间的关系：不可分割</span></h5><h5><span id="能动反映论的两个突岀特点优点">“能动反映论”的两个突岀特点（优点）：</span></h5><ul><li>把实践的观点引入认识论</li><li>把辩证法应用于反映论考察认识的发展过程，把认识看成一个由不知到知、由浅入深的充满矛盾的能动的认识过程，全面地揭示了认识过程的辩证性质。</li></ul><p><a href="https://imgtg.com/image/EVEZF"><img src="https://i.imgtg.com/2023/01/01/EVEZF.png" alt="EVEZF.png"></a></p><h5><span id="认识的过程">认识的过程</span></h5><ol><li>从实践到认识（感性认识到理性认识的飞跃）<ol><li>感性认识<ol><li>对象：事物的现象、事物的外部联系、事物的各个方面</li><li>形式：感觉、知觉和表象三种形式</li><li>特征：直接性是感性认识的突出特点</li></ol></li><li>理性认识<ol><li>对象：事物的本质、全体、内部联系和事物自身规律性的认识</li><li>形式：概念、判断、 推理</li><li>特征：理性认识的特点是它的间接性和抽象性</li></ol></li><li>关系<ol><li>第一，感性认识有待于发展和深化为理性认识。</li><li>第二，理性认识依赖于感性认识。</li><li>第三，感性认识和理性认识相互渗透、相互包含。</li></ol></li><li>实现飞跃的基本条件<ol><li>一是勇于实践，深入调查，获取十分丰富和合乎实际的感性材料。</li><li>二是必须经过理性思考的作用，将丰富的感性材料加工制作，去粗取精、去伪存真、由此及彼、由表及里，才能将感性认识上升为理性认识。</li></ol></li></ol></li></ol><p><a href="https://imgtg.com/image/EVSMP"><img src="https://i.imgtg.com/2023/01/01/EVSMP.png" alt="EVSMP.png"></a></p><ol start="2"><li><p>从认识到实践（理性认识到实践的飞跃）</p><ol><li><p>重要性：更为重要</p></li><li><p>条件：要中介</p></li></ol></li></ol><h5><span id="认识过程中的影响因素">认识过程中的影响因素</span></h5><ol><li>理性因素<ol><li>概念：人的理性直观、理性思维等能力</li><li>作用：指导作用、解释作用和预见作用</li></ol></li><li>非理性因素<ol><li>概念：非理性因素主要是指认识主体的情感和意志</li><li>作用：有激活、驱动和控制</li></ol></li></ol><h5><span id="认识的两大规律">认识的两大规律</span></h5><ol><li>反复性<ol><li>事物的各个侧面及其本质的暴露有一个过程</li><li>人的认识能力有一个提高的过程</li></ol></li><li>无限性<ol><li>对于事物发展过程的推移来说，人类的认识是永无止境、无限发展的</li><li>表现：由初级阶段向高级阶段不断推移的永无止境的前进运动</li><li>形式：是循环往复的，实质上是前进上升的</li></ol></li></ol><h3><span id="真理与价值">真理与价值</span></h3><h4><span id="真理">真理</span></h4><h5><span id="定义">定义</span></h5><p>真理是标志主观与客观相符合的哲学范畴，是对客观事物及其规律的正确反映</p><h5><span id="客观性">客观性</span></h5><ul><li><p>内容：物质世界——客观</p></li><li><p>检验标准：实践——客观</p></li><li><p>体现了一元性</p></li></ul><h5><span id="绝对性">绝对性</span></h5><ul><li>绝对是客观：是任何真理都必然包含同客观对象相符合的客观内容，都同谬误有原则的界限。否则就不称其为真理，这一点是无条件的、绝对的</li><li>绝对能认识：人类认识按其本性来说，能够正确认识无限发展着的物质世界，认识每前进一步，都是对无限发展着的物质世界的接近，这一点也是无条件的、绝对的</li></ul><h5><span id="相对性">相对性</span></h5><ul><li>对象有条件，有限</li><li>正确程度有条件，有限</li></ul><p><a href="https://imgtg.com/image/EV07b"><img src="https://i.imgtg.com/2023/01/01/EV07b.png" alt="EV07b.png"></a></p><h5><span id="绝对性amp相对性">绝对性&amp;相对性</span></h5><ol><li>互相依存</li><li>互相包含<ol><li>真理的绝对性寓于真理的相对性之中</li><li>真理的相对性必然包含并表现着真理的绝对性</li><li>无数相对的真理之总和，就是绝对的真理</li></ol></li><li>根源：人的认识能力、思维能力的矛盾本性，是人的思维的至上性和非至上性或人的认识能力的无限性和有限性的矛盾</li></ol><h5><span id="批判两种错误观点">批判两种错误观点</span></h5><ol><li>只看绝对：教条</li><li>只看相对：诡辩论（怀疑主义）</li></ol><h5><span id="真理和谬误">真理和谬误</span></h5><ul><li><p>区别：真理和谬误决定于认识的内容是否如实地反映了客观事物，因此真理和谬误是性质不同的两种认识，它们是对立的</p></li><li><p>联系：真理和谬误是统一的，它们相互依存、相互转化</p></li></ul><h5><span id="真理的检验标准">真理的检验标准</span></h5><ul><li>实践是检验真理的唯一标准，这是由真理的本性和实践的特点决定的。</li><li>实践是检验真理的唯一标准，并不排斥逻辑证明的作用</li></ul><h5><span id="实践标准的确定性与不确定性">实践标准的确定性与不确定性</span></h5><p>绝对性</p><ul><li>实践是检验真理的唯一标准，此外再无别的标准；</li><li>凡经过实践证明了的一切认识都是客观真理，都具有不可推翻的性质；</li><li>实践能够检验一切认识，即使当前的实践还不能加以判定，最终也会被以后的实践作出裁决</li></ul><p>不确定性</p><ul><li>一定历史阶段上的具体实践具有局限性，它往往不能充分证明或驳倒某一认识的真理性；</li><li>实践检验真理是一个过程，不是一次完成的；</li><li>已被实践检验过的真理还要继续经受实践的检验</li></ul><p><a href="https://imgtg.com/image/EVcHl"><img src="https://i.imgtg.com/2023/01/01/EVcHl.png" alt="EVcHl.png"></a></p><h4><span id="真理与价值的辩证统一">真理与价值的辩证统一</span></h4><ul><li>成功的实践必然是以真理和价值的辩证统一为前提的</li><li>价值的形成和实现必须以坚持真理为前提，而真理又必然是具有价值的</li><li>真理和价值在实践和认识活动中是相互制约、相互引导、相互促进的</li></ul><h4><span id="价值">价值</span></h4><h5><span id="概念">概念</span></h5><p>价值是指在实践基础上形成的主体和客体之间的<strong>意义关系</strong>，是客体对个人、 群体乃至整个社会的生活和活动所具有的<strong>积极意义</strong></p><h5><span id="特性">特性</span></h5><ol><li>主体性——主体不同，价值不同，不是主观性</li><li>客观性——不以人的意志为转移</li><li>多维性——维度不同，价值不同</li><li>社会历史性——历史时期不同，价值不同</li></ol><h5><span id="价值评价的特点">价值评价的特点</span></h5><ol><li>评价以主客体的价值关系为认识对象</li><li>评价结果与评价主体直接相关</li><li>评价结果的正确与否依赖于对客体状况和主体需要的认识</li></ol><p>表明</p><ul><li>评价并不是一种主观随意性的认识活动，而是具有客观性的认识活动</li><li>因此对于任何价值评价的主体而言，其价值评价只有与人类整体的要求或利益相一致，才是正确的价值评价。</li></ul><h4><span id="认识世界和改造世界">认识世界和改造世界</span></h4><p>认识世界和改造世界必须勇于创新</p><h4><span id="从必然走向自由">从必然走向自由</span></h4><ul><li><p>必然——该怎样——客观事物的规律性</p></li><li><p>自由——想怎样——人的能动性</p></li><li><p>自由是历史发展的产物，自由是有条件的</p><ul><li>认识条件<ul><li>认识越多越自由</li></ul></li><li>实践条件<ul><li>自由以必然为限度</li><li>自由以不牺牲别人自由为限度</li></ul></li></ul></li></ul><h3><span id="认识论思维导图">认识论思维导图</span></h3><p><a href="https://imgtg.com/image/EVVzB"><img src="https://i.imgtg.com/2023/01/01/EVVzB.md.png" alt="EVVzB.md.png"></a></p><h2><span id="唯物史观">唯物史观</span></h2><p><a href="https://imgtg.com/image/EYeEb"><img src="https://i.imgtg.com/2023/01/01/EYeEb.png" alt="EYeEb.png"></a></p><h3><span id="社会基本矛盾及其运动规律">社会基本矛盾及其运动规律</span></h3><h4><span id="唯物史观和唯心史观的对立">唯物史观和唯心史观的对立</span></h4><h5><span id="社会历史观的基本问题">社会历史观的基本问题</span></h5><p>社会存在和社会意识的关系问题</p><h5><span id="唯心史观的缺陷">唯心史观的缺陷</span></h5><ol><li>至多考察人们活动的思想动机，而没有进一步追究思想动机背后的物质动因</li><li>只看到个人在历史上的作用，而忽视人民群众创造历史的决定作用</li></ol><p><a href="https://imgtg.com/image/EVYJs"><img src="https://i.imgtg.com/2023/01/01/EVYJs.png" alt="EVYJs.png"></a></p><h4><span id="社会存在和社会意识">社会存在和社会意识</span></h4><h5><span id="社会存在">社会存在</span></h5><p><a href="https://imgtg.com/image/EVflK"><img src="https://i.imgtg.com/2023/01/01/EVflK.png" alt="EVflK.png"></a></p><h5><span id="社会意识">社会意识</span></h5><p><a href="https://imgtg.com/image/EV9Ta"><img src="https://i.imgtg.com/2023/01/01/EV9Ta.png" alt="EV9Ta.png"></a></p><h5><span id="辩证关系">辩证关系</span></h5><ol><li>社会存在决定社会意识，社会意识是社会存在的反映，并反作用于社会存在<ol><li>社会存在是社会意识内容的客观来源，社会意识是社会物质生活过程及其条件的主观反映</li><li>社会意识是人们进行社会物质交往的产物</li><li>随着社会存在的发展，社会意识也相应地或迟或早地发生变化和发展</li></ol></li><li>是社会意识具有相对独立性，它在反映社会存在的同时具有自己特有的发展形式和规律。<ol><li>社会意识与社会存在发展的不完全同步性和不平衡性</li><li>社会意识内部各种形式之间的相互影响及各自具有的历史继承性</li><li>社会意识对社会存在的能动的反作用。这是社会意识相对独立性的突出表现<ol><li>先进的社会意识对社会发展起积极的促进作用；落后的社会意识对社会发展起消极的阻碍作用</li></ol></li></ol></li></ol><h5><span id="文化对社会发展的重要作用">文化对社会发展的重要作用</span></h5><ol><li>文化为社会发展提供思想保证</li><li>文化为社会发展提供精神动力</li><li>文化为社会发展提供凝聚力量</li><li>文化为社会发展提供智力支持</li></ol><h4><span id="生产力和生产关系矛盾运动的规律">生产力和生产关系矛盾运动的规律</span></h4><h5><span id="生产力">生产力</span></h5><ul><li>生产力是人类在生产实践中形成的改造和影响自然以使其适应社会需要的物质力量</li><li>在哲学上，生产力是标志人类改造自然的实际程度和实际能力的范畴，它表示人与自然的关系</li></ul><h5><span id="生产力的基本要素">生产力的基本要素</span></h5><ol><li>劳动资料，即劳动手段<ol><li>其中最重要的是生产工具<ol><li>生产力发展水平的客观尺度</li><li>区分社会经济时代的客观依据</li></ol></li></ol></li><li>劳动对象</li><li>劳动者<ol><li>生产力中最活跃的因素</li></ol></li><li>生产力中还包含科学技术<ol><li>科技不是生产力中的独立要素</li><li>科技在生产劳动中是决定性因素，但在社会历史中不是</li></ol></li></ol><h5><span id="生产关系">生产关系</span></h5><ul><li><p>生产关系是人们在物质生产过程中形成的不以人的意志为转移的经济关系</p></li><li><p>包括</p><ul><li>生产资料所有制关系<ul><li>最基本、决定性</li><li>区分不同生产方式、判定社会经济结构性质的客观依据</li></ul></li><li>生产中人与人的关系</li><li>产品分配关系</li></ul></li><li><p>生产关系是一种客观的物质的社会关系。生产关系虽然是一种人与人的关系，但它是在物质生产过程中结成的关系，是不以人的意志为转移的</p></li></ul><h5><span id="生产力和生产关系的辩证关系">生产力和生产关系的辩证关系</span></h5><ul><li>在社会生产中，生产力是生产的物质<strong>内容</strong>，生产关系是生产的社会<strong>形式</strong>，二者的有机结合和统一，构成社会的生产方式。</li><li>生产力决定生产关系，生产关系反作用于生产力。</li></ul><h5><span id="生产力与生产关系的矛盾运动规律人类社会发展第一规律">生产力与生产关系的矛盾运动规律（人类社会发展第一规律）</span></h5><ul><li>生产力的状况决定一定的生产关系的产生及其变化发展的方向和形式</li><li>生产关系反作用于生产力， 当生产关系适合生产力的状况时对生产力发展起促进作用，反之将起阻碍作用。</li></ul><h4><span id="经济基础和上层建筑矛盾运动的规律第二对社会基本矛盾">经济基础和上层建筑矛盾运动的规律（第二对社会基本矛盾）</span></h4><h5><span id="经济基础">经济基础</span></h5><p>经济基础是指由社会一定发展阶段的生产力所决定的<strong>生产关系</strong>的总和</p><h5><span id="上层建筑">上层建筑</span></h5><p>上层建筑是指建立在一定经济基础之上的<strong>意识形态</strong>以及相应的<strong>制度、组织和设施</strong></p><p><a href="https://imgtg.com/image/EYWur"><img src="https://i.imgtg.com/2023/01/01/EYWur.jpg" alt="EYWur.jpg"></a></p><ul><li>属于上层建筑的社会意识就是社会意识形态</li><li>在整个上层建筑中，政治上层建筑占据主导地位</li></ul><h5><span id="经济基础与上层建筑的辩证关系">经济基础与上层建筑的辩证关系</span></h5><ul><li>经济基础决定上层建筑<ul><li>经济基础的需要决定上层建筑的产生</li><li>经济基础的性质决定上层建筑的性质</li><li>经济基础的变化发展决定上层建筑的变化发展及其方向</li></ul></li><li>上层建筑对经济基础具有反作用<ul><li>取决于是否有利于<strong>生产力的发展</strong></li></ul></li></ul><h5><span id="经济基础与上层建筑的矛盾运动及其规律">经济基础与上层建筑的矛盾运动及其规律</span></h5><p>上层建筑一定要适应经济基础状况</p><h4><span id="社会形态更替的一般规律及特殊形式">社会形态更替的一般规律及特殊形式</span></h4><h5><span id="社会形态的内涵">社会形态的内涵</span></h5><ul><li>社会运动的具体形式、发展阶段和不同质态的范畴</li><li>是同生产力发展一定阶段相适应的经济基础与上层建筑的统一体</li><li>包括：经济形态、政治形态和意识形态</li></ul><h5><span id="社会形态的特点">社会形态的特点</span></h5><ul><li>社会形态的内容是全面的，既包括经济基础，又包括上层建筑，二者缺一不可</li><li>社会形态是具体的，不是抽象的</li><li>社会形态是历史的，有其产生、发展和灭亡的过程</li></ul><h5><span id="社会形态更替的特点">社会形态更替的特点</span></h5><ul><li>统一性和多样性<ul><li>纵向<ul><li>社会形态更替的统一性和多样性</li></ul></li><li>横向<ul><li>同类社会形态既有共同的本质，又有各自的特点</li></ul></li></ul></li><li>必然性与人们的历史选择性<ul><li>民族选择<ul><li>民族利益</li><li>交往</li><li>对历史必然性以及本民族特点的把握程度</li></ul></li></ul></li><li>前进性与曲折性</li></ul><h3><span id="社会历史发展的动力">社会历史发展的动力</span></h3><h4><span id="社会基本矛盾是社会发展的根本动力第一动力">社会基本矛盾是社会发展的根本动力（第一动力）</span></h4><h5><span id="社会基本矛盾">社会基本矛盾</span></h5><p>生产力和生产关系、经济基础和上层建筑的矛盾</p><h5><span id="社会基本矛盾在历史中的作用">社会基本矛盾在历史中的作用</span></h5><ol><li>生产力是社会基本矛盾运动中最基本的动力因素，是人类社会发展和进步的最终决定力量</li><li>社会基本矛盾特别是生产力和生产关系的矛盾，是“一切历史冲突的根源”，决定着社会中其他矛盾的存在和发展</li><li>社会基本矛盾具有不同的表现形式和解决方式，并从根本上影响和促进社会形态的变化和发展。</li></ol><h4><span id="科学技术在社会发展中的作用第五动力">科学技术在社会发展中的作用（第五动力）</span></h4><ul><li>科学技术革命是社会动力体系中的一种重要动力</li><li>现代科学技术革命对生产方式产生了深刻影响</li><li>现代科学技术革命对生活方式产生了巨大影响</li><li>现代科学技术革命促进了思维方式的变革</li></ul><p><a href="https://imgtg.com/image/EY7O6"><img src="https://i.imgtg.com/2023/01/01/EY7O6.png" alt="EY7O6.png"></a></p><h3><span id="人民群众在历史发展中的作用">人民群众在历史发展中的作用</span></h3><h4><span id="唯物史观考察历史创造者问题的原则">唯物史观考察历史创造者问题的原则</span></h4><ul><li>唯物史观立足于现实的人及其本质来把握历史的创造者</li><li>唯物史观立足于整体的社会历史过程来探究谁是历史的创造者</li><li>唯物史观从社会历史发展的必然性入手来考察和说明谁是历史的创造者</li><li>唯物史观从人与历史关系的不同层次上考察谁是历史的创造者</li></ul><h4><span id="现实的人及其本质">现实的人及其本质</span></h4><h5><span id="现实的人">现实的人</span></h5><p>不是处在某种虚幻的离群索居和固定不变状态中的人，而是处在现实的、可以通过经验观察到的、在一定条件下进行的发展过程中的人”</p><h5><span id="人的本质">人的本质</span></h5><ul><li><p>从人与动物相区别的层次上看，人的本质在于劳动</p></li><li><p>从人与人相区别的层次上看，人的本质是一切社会关系的总和</p></li></ul><h4><span id="人民群众创造历史">人民群众创造历史</span></h4><h5><span id="人民群众在创造历史过程中的决定作用">人民群众在创造历史过程中的决定作用</span></h5><p>定义</p><ul><li><p>人民群众是一个历史范畴。</p></li><li><p>从质上说，人民群众是指一切对社会历史发展起推动作用的人</p></li><li><p>从量上说，是指社会人口中的绝大多数</p></li><li><p>人民群众中最稳定的主体部分始终是从事物质资料生产的劳动群众及知识分子</p></li></ul><p>作用</p><ul><li>首先，人民群众是社会物质财富的创造者；</li><li>其次，人民群众是社会精神财富的创造者；</li><li>再其次，人民群众是社会变革的决定力量；</li><li>最后，人民群众既是先进生产力和先进文化的创造主体，也是实现自身利益的根本力量</li><li>历史是人民群众创造的，但人民群众创造历史的活动及作用又受到社会历史条件的制约。这些条件包括经济条件、政治条件和精神文化条件。</li></ul><h5><span id="群众观点">群众观点</span></h5><p>坚信人民群众自己解放自己的观点，全心全意为人民服务的观点,一切向人民群众负责的观点，虚心向群众学习的观点。</p><h5><span id="群众路线">群众路线</span></h5><ul><li><p>一切为了群众，一切依靠群众，从群众中来，到群众中去。</p></li><li><p>群众路线是无产阶级政党的根本路线，也是党的根本领导方法和工作方法</p></li></ul><h4><span id="个人在社会历史中的作用">个人在社会历史中的作用</span></h4><ul><li>历史人物是历史事件的发起者、当事者；</li><li>历史人物是实现一定历史任务的组织者、领导者；</li><li>历史人物是历史进程的影响者，它可以加速或延缓历史任务的解决。</li><li>因此，历史人物对历史发展的具体过程始终起着一定的作用，有时甚至对历史事件的进程和结局产生决定性的影响，但不能决定历史发展的基本趋势</li></ul><p><a href="https://imgtg.com/image/EYNNP"><img src="https://i.imgtg.com/2023/01/01/EYNNP.png" alt="EYNNP.png"></a></p><h3><span id="唯物史观思维导图">唯物史观思维导图</span></h3><p><a href="https://imgtg.com/image/EYKFg"><img src="https://i.imgtg.com/2023/01/01/EYKFg.md.png" alt="EYKFg.md.png"></a></p><h1><span id="马克思主义政治经济学">马克思主义政治经济学</span></h1><p><a href="https://imgtg.com/image/EYv9s"><img src="https://i.imgtg.com/2023/01/01/EYv9s.md.png" alt="EYv9s.md.png"></a></p><h2><span id="简单商品经济商品经济和价值规律">简单商品经济——商品经济和价值规律</span></h2><h4><span id="价值是什么">价值是什么</span></h4><h5><span id="商品经济产生的历史条件">商品经济产生的历史条件</span></h5><ol><li>社会分工的存在</li><li>生产资料和劳动产品属于不同的所有者</li></ol><h5><span id="商品的二因素">商品的二因素</span></h5><ol><li>使用价值<ol><li>自然属性</li></ol></li><li>价值<ol><li>社会属性</li><li>人类劳动</li></ol></li><li>交换价值（不是因素）</li><li>关系<ol><li>对立统一</li><li>二者不可兼得</li></ol></li></ol><h5><span id="生产商品的劳动二重性">生产商品的劳动二重性</span></h5><ol><li>具体劳动<ol><li>具体形式，有用劳动</li></ol></li><li>抽象劳动<ol><li>无差别，体力脑力消耗</li></ol></li><li>决定商品二因素</li></ol><h4><span id="价值如何衡量">价值如何衡量</span></h4><h5><span id="价值量的决定">价值量的决定</span></h5><p>社会必要劳动时间</p><h5><span id="价值量与劳动生产率">价值量与劳动生产率</span></h5><p>时间正比，产率反比</p><h5><span id="影响劳动生产率">影响劳动生产率</span></h5><ol><li>劳动者平均熟练程度</li><li>科技发展</li><li>生产过程的社会结合</li><li>生产资料的规模和效能及自然条件</li></ol><h4><span id="价值如何表现">价值如何表现</span></h4><h5><span id="四个阶段">四个阶段</span></h5><p><em>简单的或偶然的价值形式</em>（初级表达）</p><p>总和的或扩大的价值形式</p><p>一般的价值形式</p><p><em>货币形式</em>（终极形式）</p><h5><span id="货币">货币</span></h5><ol><li>概念<ol><li>货币是在长期交换过程中形成的固定地充当—般等价物的<strong>商品</strong></li></ol></li><li>基本职能<ol><li>价值尺度<ol><li>因为是商品，有价值，所以可以衡量其他商品的价值</li><li>观念上的货币就可以</li></ol></li><li>流通手段<ol><li>现货交易</li><li>可以不足值——纸币</li></ol></li><li>贮藏手段</li><li>支付手段<ol><li>没有现货</li></ol></li><li>世界货币</li></ol></li><li>产生后整个商品世界的变化——分化为两级<ol><li>一极是各种各样的具体商品，它们分别代表不同的使用价值</li><li>另一极是货币，它们只代表商品的价值</li></ol></li></ol><h4><span id="价值有何规律">价值有何规律</span></h4><h5><span id="内容">内容</span></h5><ol><li>商品的价值量由生产商品的社会必要劳动时间<strong>决定</strong></li><li>商品交换以价值量为基础，按照<strong>等价交换</strong>的原则进行。</li></ol><h5><span id="表现形式">表现形式</span></h5><p>商品的价格围绕价值自发波动</p><h5><span id="积极作用">积极作用</span></h5><p>第一，自发地调节<strong>生产资料和劳动力</strong>在社会各生产部门之间的<strong>分配</strong>比例；</p><p>第二，自发地刺激社会<strong>生产力的发展</strong>；</p><p>第三，自发地调节社会<strong>收入分配</strong>。</p><h5><span id="消极作用">消极作用</span></h5><p>第一，比例失调，导致社会资源浪费；</p><p>第二，导致收入两极分化；</p><p>第三，出现垄断，阻碍技术的进步。</p><h4><span id="私有制基础上商品经济的基本矛盾">私有制基础上商品经济的基本矛盾</span></h4><p>私人劳动和社会劳动的矛盾构成私有制商品经济的基本矛盾</p><p>私人劳动和社会劳动之间的矛盾在资本主义制度下，进一步发展成资本主义的基本矛盾,即生产资料的资本主义私人占有和生产社会化之间的矛盾，正是这一矛盾的不断运动，才使资本主义制度最终被社会主义制度所代替具有了客观必然性</p><h4><span id="马克思劳动价值论的意义">马克思劳动价值论的意义</span></h4><ol><li>马克思在继承古典政治经济学劳动创造价值理论的同时，创立了劳动二重性理论</li><li>劳动二重性理论成为理解政治经济学的枢纽</li></ol><h5><span id="深化认识">深化认识</span></h5><p>第一，深化对创造价值的<strong>劳动</strong>的认识，对生产性劳动作出新的界定；</p><p>第二，深化对<strong>科技人员、经营管理人员</strong>在社会生产和价值创造中所起的作用的认识；</p><p>第三，深化对<strong>科技、知识、信息</strong>等新的生产要素在财富和价值创造中的作用的认识；</p><p>第四,深化对<strong>价值创造与价值分配关系</strong>的认识</p><h2><span id="发达商品经济">发达商品经济</span></h2><p>区别：劳动力成为商品</p><h3><span id="劳动力">劳动力</span></h3><h4><span id="劳动力概念">劳动力概念</span></h4><p>体力和脑力</p><h4><span id="成为商品条件">成为商品条件</span></h4><ol><li>自由人</li><li>除了自由一无所有</li></ol><h4><span id="劳动力商品价值">劳动力商品价值</span></h4><ol><li>本人必要生活资料</li><li>家属必要生活资料</li><li>接受教育和训练的支出</li></ol><h4><span id="劳动力商品使用价值">劳动力商品使用价值</span></h4><p>使用价值是价值的源泉，不断创造新价值</p><h3><span id="剩余价值的生产和积累">剩余价值的生产和积累</span></h3><p><a href="https://imgtg.com/image/Ej2n6"><img src="https://i.imgtg.com/2023/01/03/Ej2n6.md.png" alt="Ej2n6.md.png"></a></p><p><a href="https://imgtg.com/image/Ej6DP"><img src="https://i.imgtg.com/2023/01/03/Ej6DP.md.png" alt="Ej6DP.md.png"></a></p><p><a href="https://imgtg.com/image/Ej88b"><img src="https://i.imgtg.com/2023/01/03/Ej88b.md.png" alt="Ej88b.md.png"></a></p><p><a href="https://imgtg.com/image/Ejukl"><img src="https://i.imgtg.com/2023/01/03/Ejukl.md.png" alt="Ejukl.md.png"></a></p><h5><span id="绝对剩余价值">绝对剩余价值</span></h5><p>时间延长</p><h5><span id="相对剩余价值">相对剩余价值</span></h5><p>技术提高</p><h5><span id="超额剩余价值">超额剩余价值</span></h5><p>企业由于提高劳动生产率而使商品的个别价值低于社会价值的差额</p><h5><span id="自动化条件下剩余价值的源泉">自动化条件下剩余价值的源泉</span></h5><p>工人的剩余劳动仍然是剩余价值的唯一源泉</p><h4><span id="资本积累">资本积累</span></h4><p>简单再生产&amp;扩大再生产</p><p>资本积累的源泉是剩余价值</p><p>资本积累是资本主义扩大再生产的源泉</p><h5><span id="后果">后果</span></h5><p>社会财富占有两极分化，事业现象产生</p><h5><span id="资本有机构成">资本有机构成</span></h5><p><a href="https://imgtg.com/image/EjIpg"><img src="https://i.imgtg.com/2023/01/03/EjIpg.md.png" alt="EjIpg.md.png"></a></p><h5><span id="相对过剩人口">相对过剩人口</span></h5><p>资本无限追逐剩余价值的本性</p><p><a href="https://imgtg.com/image/Ej3fB"><img src="https://i.imgtg.com/2023/01/03/Ej3fB.png" alt="Ej3fB.png"></a></p><h3><span id="资本的循环周转与再生产">资本的循环周转与再生产</span></h3><h5><span id="资本循环阶段与职能">资本循环阶段与职能</span></h5><p>第一个阶段是购买阶段，产业资本执行的是货币资本的职能</p><p>第二个阶段是生产阶段，产业资本执行的是生产资本的职能</p><p>第三个阶段是售卖阶段，产业资本执行的是商品资本的职能</p><h5><span id="资本运动的前提">资本运动的前提</span></h5><p>一是产业资本的三种职能形式必须在空间上并存</p><p>二是产业资本的三种职能形式必须在时间上继起</p><h5><span id="资本周转及其速度">资本周转及其速度</span></h5><ul><li>定义</li></ul><p>资本是在运动中增殖的，资本周而复始、不断反复的循环，就叫资本的周转。如果每次资本周转带来的剩余价值一定，则资本周转越快，在一定时期内带来的剩余价值就越多。</p><ul><li>速度</li></ul><p>一是资本周转时间；</p><p>二是生产资本中固定资本和流动资本的构成</p><p><a href="https://imgtg.com/image/E2O0a"><img src="https://i.imgtg.com/2023/01/03/E2O0a.png" alt="E2O0a.png"></a></p><h5><span id="社会再生产的核心问题及实现条件">社会再生产的核心问题及实现条件</span></h5><p>社会再生产的核心问题是社会总产品的实现问题，即社会总产品的价值补偿和实物补偿问题</p><p><a href="https://imgtg.com/image/Ejw5s"><img src="https://i.imgtg.com/2023/01/03/Ejw5s.md.png" alt="Ejw5s.md.png"></a></p><p>失衡-&gt;经济危机</p><h4><span id="工资与剩余价值的分配">工资与剩余价值的分配</span></h4><h5><span id="资本主义工资的本质">资本主义工资的本质</span></h5><p>在资本主义制度下，工人工资是劳动力的价值或价格，这是资本主义工资的本质</p><h5><span id="工资的形式">工资的形式</span></h5><p>计时工资和计件工资</p><h5><span id="利润的本质">利润的本质</span></h5><p>在现实的资本主义经济生活中，资本家并不把剩余价值看作可变资本的产物， 而是把它看作<strong>全部垫付资本的产物或增加额</strong>，剩余价值便取得了利润的形态</p><h5><span id="平均利润与生产价格"><strong>平均利润与生产价格</strong></span></h5><ul><li><p>不同部门展开激烈的竞争，使资本从利润率低的部门转向利润率高的部门， 从而导致利润率趋于平均化，不同部门的资本家按照等量资本获得等量利润的原则来瓜分剩余价值</p></li><li><p>按照平均利润率来计算和获得的利润，叫作<strong>平均利润</strong>。随着利润转化为平均利润，商品价值就转化为<strong>生产价格</strong>，即商品的<strong>成本价格加平均利润。</strong></p></li><li><p>生产价格是商品价值的转化形式，是生产成本（即c+v）与平均利润之和</p></li></ul><h5><span id="生产价格形成以后价值规律表现形式的变化">生产价格形成以后，价值规律表现形式的变化</span></h5><p>商品不再以价值而是以生产价格为基础进行交换，市场价格的变动不再以价值为中心，而是以生产价格为中心</p><p><a href="https://imgtg.com/image/E2awS"><img src="https://i.imgtg.com/2023/01/03/E2awS.png" alt="E2awS.png"></a></p><h4><span id="马克思剩余价值理论的意义">马克思剩余价值理论的意义</span></h4><p>剩余价值理论深刻<strong>揭露</strong>了资本主义生产关系的剥削本质，<strong>阐明</strong>了资产阶级与无产阶级之间阶级斗争的经济根源，<strong>指出</strong>了无产阶级革命的历史必然性</p><h4><span id="资本主义的基本矛盾与经济危机">资本主义的基本矛盾与经济危机</span></h4><h5><span id="资本主义基本矛盾">资本主义基本矛盾</span></h5><p>生产资料资本主义<strong>私人占有</strong>和<strong>生产社会化</strong>之间的矛盾，是资本主义的基本矛盾。<strong>这是生产力和生产关系之间的矛盾在资本主义社会的具体体现</strong></p><h5><span id="资本主义经济危机">资本主义经济危机</span></h5><ol><li>实质<ol><li>生产相对过剩是资本主义经济危机的本质特征</li><li>经济危机的可能性是由货币作为支付手段和流通手段引起的</li></ol></li><li>根本原因——资本主义的基本矛盾<ol><li>表现为生产无限扩大的趋势与劳动人民有支付能力的需求相对缩小的矛盾;</li><li>表现为个别企业内部生产的有组织性和整个社会生产的无政府状态之间的矛盾</li></ol></li><li>阶段：危机、萧条、复苏和高涨</li></ol><h3><span id="资本主义政治制度和意识形态">资本主义政治制度和意识形态</span></h3><h4><span id="资本主义国家">资本主义国家</span></h4><h5><span id="职能">职能</span></h5><p>以服务于资本主义制度和资产阶级利益为根本内容的</p><ol><li>对内：政治统治和社会管理</li><li>对外：国际交往和维护国家安全及利益</li></ol><h5><span id="制度">制度</span></h5><ol><li>民主制度<ol><li>与资本主义生产方式相适应而发展起来的</li></ol></li><li>法制<ol><li>资本主义民主制度的重要内容</li><li>宪法是资本主义国家法律制度的核心<ol><li>私有制原则、“主权在民”原则、分权与制衡原则和人权原则</li></ol></li></ol></li><li>国家政权<ol><li>分权制衡的组织形式</li></ol></li><li>选举制度<ol><li>竞选</li></ol></li><li>政党<ol><li>代表一定阶级、阶层或集团的根本利益，为达到政治目的，特别是为了取得政权和保持政权而建立的一种政治组织</li></ol></li></ol><h5><span id="资本主义政治制度的局限性">资本主义政治制度的局限性</span></h5><ol><li>是资产阶级精英统治下的民主</li><li>严重的不平等</li><li>维护资产阶级统治的政治制度</li><li>政党恶斗相互掣肘</li></ol><h4><span id="资本主义的意识形态及其本质">资本主义的意识形态及其本质</span></h4><p>第一，资本主义意识形态是资本主义社会条件下的观念上层建筑，是为资本主义社会形态的经济基础服务的；</p><p>第二，资本主义意识形态是资产阶级的阶级意识的集中体现</p><h2><span id="资本主义的发展及趋势">资本主义的发展及趋势</span></h2><p><a href="https://imgtg.com/image/E2q1N"><img src="https://i.imgtg.com/2023/01/03/E2q1N.png" alt="E2q1N.png"></a></p><p><a href="https://imgtg.com/image/E25DC"><img src="https://i.imgtg.com/2023/01/03/E25DC.md.png" alt="E25DC.md.png"></a></p><h4><span id="资本主义从自由竞争到垄断">资本主义从自由竞争到垄断</span></h4><h5><span id="资本主义发展阶段">资本主义发展阶段</span></h5><ol><li>自由竞争资本主义</li><li>垄断资本主义<ol><li>私人垄断资本主义</li><li>国家垄断资本主义</li></ol></li></ol><h5><span id="生产集中与资本集中">生产集中与资本集中</span></h5><ol><li>生产资料</li><li>资本</li></ol><h5><span id="垄断">垄断</span></h5><ol><li>原因<ol><li>高额利润</li><li>避免两败俱伤</li><li>形成竞争限制</li></ol></li></ol><h5><span id="垄断与竞争">垄断与竞争</span></h5><ol><li>存在竞争<ol><li>没有垄断产生竞争的经济条件——私有制</li><li>垄断必须靠竞争来维持</li><li>不可能垄断一切</li></ol></li><li>新特点<ol><li>目的：获得高额垄断利润</li><li>手段：采用经济和非经济手段</li><li>范围：规模扩大</li></ol></li></ol><h5><span id="金融资本与金融寡头">金融资本与金融寡头</span></h5><ol><li>形成途径<ol><li>金融联系</li><li>资本参与</li><li>人事参与</li></ol></li><li>寡头控制社会的方式<ol><li>经济：参与制</li><li>政治：个人联合</li><li>新闻科教：政治咨询机构</li></ol></li></ol><h5><span id="垄断利润和垄断价格">垄断利润和垄断价格</span></h5><ol><li>利润来源<ol><li>本国剥削</li><li>控制市场，占有其他企业</li><li>他国剥削</li><li>资本主义国家政权再分配</li></ol></li><li>利润实现：垄断价格</li><li>垄断价格<ol><li>成本+平均利润+垄断利润</li><li>垄断高价<ol><li>卖出高于生产价格</li></ol></li><li>垄断低价<ol><li>买入低于生产价格</li></ol></li></ol></li></ol><p><a href="https://imgtg.com/image/E2VzL"><img src="https://i.imgtg.com/2023/01/03/E2VzL.png" alt="E2VzL.png"></a></p><h4><span id="垄断资本主义的发展">垄断资本主义的发展</span></h4><h5><span id="国家垄断资本主义">国家垄断资本主义</span></h5><ol><li>概念：是国家政权和私人垄断资本融合在一起的垄断资本主义</li><li>原因<ol><li>社会生产力的发展</li><li>经济波动和经济危机的深化</li><li>缓和社会矛盾、协调利益关系</li></ol></li><li>形式<ol><li>国家所有并直接经营的企业</li><li>国家与私人共有、合营企业</li><li>国家通过多种形式参与私人垄断资本的再生产过程</li><li>宏观调节</li><li>微观规制<ol><li>反托拉斯法</li><li>公共事业规制</li><li>社会经济规制</li></ol></li></ol></li><li>评价<ol><li>国家垄断资本主义是垄断资本主义的新发展，它对资本主义经济的发展产生了积极的作用</li><li>国家垄断资本主义的出现并没有改变垄断资本主义的性质</li><li>没有从根本上消除资本主义的基本矛盾</li></ol></li></ol><h5><span id="金融垄断资本的发展">金融垄断资本的发展</span></h5><ol><li>形成条件：金融自由化与金融创新</li><li>资本主义社会的变化<ol><li>金融业在国民经济中的地位大幅上升</li><li>实体经济的资本利润率下降，面对激烈竞争，实体经济部门不得不把利润的一部分投向金融领域</li><li>制造业就业人数严重减少，以金融为核心的服务业就业人数逐步增加</li><li>虚拟经济越来越脱离实体经济</li></ol></li><li>影响<ol><li>促进了资本主义的发展</li><li>了经济过度虚拟化，导致金融危机频繁发生，不仅使资本主义经济陷入萧条，也给全球经济带来灾难</li></ol></li></ol><h5><span id="垄断资本在世界范围的扩展及后果">垄断资本在世界范围的扩展及后果</span></h5><ol><li>经济动因<ol><li>国内过剩的资本输出，以便在国外谋求高额利润</li><li>非要害技术转移到国外，以取得在别国的垄断优势</li><li>争夺商品销售市场</li><li>确保原材料和能源的可靠来源</li></ol></li><li>基本形式<ol><li>借贷资本输出</li><li>生产资本输出</li><li>商品资本输出</li></ol></li><li>后果<ol><li>资本输出国：有利</li><li>资本输入国：双刃剑</li></ol></li></ol><h5><span id="垄断资本国际化条件下的垄断组织">垄断资本国际化条件下的垄断组织</span></h5><p>国际垄断同盟在经济上瓜分世界是通过垄断组织间的协议实现的， 而协议的订立、瓜分的结果又以经济实力为后盾和基础。</p><ul><li>早期的国际垄断同盟主要是国际卡特尔</li><li>当代国际垄断同盟的形式以国家垄断资本主义的国际联盟为主</li><li>国际垄断资本还建立起国际经济调节机制，以加强国际协调<ul><li>国际货币基金组织、世界银行和世界贸易组织</li></ul></li></ul><h5><span id="垄断资本主义的基本特征和实质">垄断资本主义的基本特征和实质</span></h5><p>①垄断组织在经济生活中起决定作用；</p><p>②在金融资本的基础上形成金融寡头的统治；</p><p>③资本输出有了特别重要的意义；</p><p>④瓜分世界的资本家国际垄断同盟已经形成；</p><p>⑤最大资本主义列强已把世界上的领土分割完毕</p><h4><span id="经济全球化">经济全球化</span></h4><h5><span id="表现">表现</span></h5><p>一是国际分工进一步深化</p><p>二是贸易全球化</p><p>三是金融全球化</p><p>四是企业生产经营全球化</p><h5><span id="动因">动因</span></h5><ul><li>科学技术的进步和生产力的发展，坚实的基础和根本的<strong>推动力</strong></li><li>跨国公司的发展为经济全球化提供了适宜的企业<strong>组织形式</strong></li><li>各国经济体制的变革是经济全球化的<strong>体制保障</strong></li></ul><h5><span id="影响">影响</span></h5><ul><li>差距扩大</li><li>环境恶化</li><li>体制冲击</li><li>别国依赖</li></ul><h3><span id="正确认识当代资本主义新变化">正确认识当代资本主义新变化</span></h3><h4><span id="当代资本主义经济政治新变化的表现和特点">当代资本主义经济政治新变化的表现和特点</span></h4><h5><span id="生产资料所有制的变化">生产资料所有制的变化</span></h5><ol><li>私人资本</li><li>私人股份</li><li>国家资本</li><li>法人资本<ol><li>企业法人资本</li><li>机构法人资本</li></ol></li></ol><h5><span id="劳资关系和分配关系">劳资关系和分配关系</span></h5><p>职工参与决策、终身雇佣、职工持股</p><h5><span id="社会阶层和阶级结构的变化">社会阶层和阶级结构的变化</span></h5><ol><li>资本所有权和经营权发生分离</li><li>高级职业经理成为大公司经营活动的实际控制者</li><li>知识型和服务型劳动者的数量不断增加</li></ol><h5><span id="经济调节机制和经济危机形态的变化">经济调节机制和经济危机形态的变化</span></h5><p>新特点</p><ol><li>去工业化和产业空心化日趋严重，产业竞争力下降</li><li>经济高度金融化，虚拟经济与实体经济严重脱节</li><li>财政严重债务化，债务危机频繁爆发</li><li>两极分化和社会对立加剧</li><li>经济增长乏力，发展活力不足，周期性危机与结构性危机交织在一起</li><li>金融危机频发，全球经济屡受打击</li></ol><h5><span id="政治制度的变化">政治制度的变化</span></h5><ol><li>政治制度出现多元化的趋势，公民权利有所扩大</li><li>法制建设得到重视和加强, 以协调社会各阶级、阶层之间的利益</li><li>改良主义政党在政治舞台上的影响日益扩大</li></ol><h4><span id="当代资本主义新变化的原因和实质">当代资本主义新变化的原因和实质</span></h4><h5><span id="原因">原因</span></h5><ol><li>科学技术和生产力</li><li>工人阶级争取自身权利</li><li>社会主义制度初显优越性</li><li>改良主义的改革</li></ol><h5><span id="实质">实质</span></h5><ol><li>人类社会发展一般规律和资本主义经济规律作用的结果</li><li>在资本主义制度基本框架内的变化，并不意味着资本主义生产关系的根本性质发生了变化</li><li>化并没有触动资本主义统治的根基，并没有改变资本主义制度的本质，并没有克服资本主义的基本矛盾，也没有改变马克思主义关于资本主义的基本论断的科学性</li></ol><h4><span id="2008年国际金融危机以来资本主义的矛盾与冲突">2008年国际金融危机以来资本主义的矛盾与冲突</span></h4><p>第一，经济发展“失调”。第二，政治体制“失灵”。第三，社会融合机制“失效</p><h2><span id="科学社会主义">科学社会主义</span></h2>]]></content>
      
      
      <categories>
          
          <category> 思政 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生活_新冠科普</title>
      <link href="/2022/12/28/%E7%94%9F%E6%B4%BB-%E6%96%B0%E5%86%A0%E7%A7%91%E6%99%AE/"/>
      <url>/2022/12/28/%E7%94%9F%E6%B4%BB-%E6%96%B0%E5%86%A0%E7%A7%91%E6%99%AE/</url>
      
        <content type="html"><![CDATA[<h1><span id="生活_新冠科普">生活_新冠科普</span></h1><h2><span id="中青年症状">中青年症状</span></h2><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221228124623191.png" alt="image-20221228124623191"></p><h2><span id="病理">病理</span></h2><p>新冠病毒通过呼吸道进入人体，找寻ACE2受体（呼吸道，肺部，心脏，肾脏，睾丸等组织表面），注入内部序列，繁衍后代，</p><h2><span id="后遗症">后遗症</span></h2><ul><li><p>复阳率很高</p></li><li><p>抗原阴性不等于病毒载量为0</p></li><li><p>注意防护，尽量晚点🐏</p></li><li><p>疲惫胸痛短期记忆困难头疼肌肉痛脱发注意力味觉障碍</p></li><li><p>6个月以上还有后遗症</p></li><li><p>持续至少一年的症状（样本包含大量重症危重症高龄患者，但轻症患者后遗症也普遍存在，不容忽视）<img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221228130343904.png" alt="image-20221228130343904"></p></li><li><p>男性，发烧会导致精子损伤，生育能力可能没有长期影响（Nature）</p></li><li><p>以上主要研究初期的毒株，omicron研究较少，但危害不容忽视</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科普 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>总结_2022-12-27</title>
      <link href="/2022/12/27/%E6%80%BB%E7%BB%93-2022-12-27/"/>
      <url>/2022/12/27/%E6%80%BB%E7%BB%93-2022-12-27/</url>
      
        <content type="html"><![CDATA[<p>参考知乎问题的回答[有哪些生活小习惯，慢慢地可以改变一个人的性格或者生活](有哪些生活小习惯，慢慢地可以改变一个人的性格或者生活？ - warfalcon的回答 - 知乎 <a href="https://www.zhihu.com/question/26811466/answer/34723592">https://www.zhihu.com/question/26811466/answer/34723592</a>)，我想来总结一下自己想培养的好习惯，让自己越来越优秀。</p><ol><li>记账<ol><li>使用APP</li></ol></li><li>记录时间<ol><li>使用APP</li></ol></li><li>每天运动<ol><li>使用APP</li><li>每天半小时~一小时</li></ol></li><li>定期总结<ol><li>“如果你从刚开始工作时就刻意的去记录自己所遇到的事情，包括正常工作、学到的经验，遇到的问题，每周或每月花了1、2天时间去分析自己的记录，不断的总结、分析和思考，你工作的一年时间可能比别人三年经验还要强，这个方法在目前我看到的所有行业和岗位中都适用。”</li><li>每天定时总结，预留10~30分钟</li><li>每个大阶段：比如一件大事做完，期中期末，一年</li><li>参考模板<ol><li>首先检讨我虽然做得好，但是完全可以做得更好，或者应该做得更好的事情。</li><li>然后检查我犯的错误。</li><li>最后检讨我应该做，却没做的事情。</li></ol></li></ol></li><li>每隔几年学习一门新的技能<ol><li>2023年开始多接触运动</li></ol></li><li>每天冥想<ol><li>初步：每天睡前5~10分钟</li></ol></li><li>每天练字<ol><li>随时间灵活安排10~30分钟</li></ol></li><li>早起<ol><li>保证8小时充足睡眠</li></ol></li><li>每年订一个有挑战的习惯挑战自己</li><li>写作<ol><li>每天写日记</li><li>每周推进一下自传</li></ol></li><li>阅读<ol><li>每天半小时</li></ol></li><li>长跑<ol><li>每周三次（疫情散去后）</li></ol></li><li>练习乐器<ol><li>每天半小时</li></ol></li><li>体验自然<ol><li>每周一次</li></ol></li><li>攒钱</li><li>每天打一题代码</li></ol><p>2022-12-28就开始，到新年就能成为持续的</p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 习惯 </tag>
            
            <tag> 计划 </tag>
            
            <tag> 进步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大英_口试复习</title>
      <link href="/2022/12/26/%E5%A4%A7%E8%8B%B1-%E5%8F%A3%E8%AF%95%E5%A4%8D%E4%B9%A0/"/>
      <url>/2022/12/26/%E5%A4%A7%E8%8B%B1-%E5%8F%A3%E8%AF%95%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2><span id="u1">U1</span></h2><h3><span id="wordsampphrases">Words&amp;Phrases</span></h3><ul><li>prosperity</li><li>the country is enjoying a period of peace and prosperity</li><li>prosperous</li><li>The country was on the verge of becoming prosperous and successful.</li><li>The government promised to <strong>implement</strong> a new system to control financial loan institutions.</li><li>Surely, we will aim to finally <strong>eradicate</strong> disease and poverty.</li><li>We know that the <strong>eradication</strong> of poverty will take at least four decades.</li><li>Theodore  <strong>is admitted by</strong> a <strong>world-class university</strong> and began his life in Britain</li><li><strong>Bridging the yawning gap between</strong> (the) rich and (the) poor</li><li>Because they were born and raised as the country’s wealth was rapidly growing, they <strong>benefited enormously from</strong> economic and social reforms</li></ul><h3><span id="topics">Topics</span></h3><h2><span id="additionthe-covid-19">Addition——the Covid 19</span></h2>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_错题整理</title>
      <link href="/2022/12/25/DS-%E9%94%99%E9%A2%98%E6%95%B4%E7%90%86/"/>
      <url>/2022/12/25/DS-%E9%94%99%E9%A2%98%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<ol><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gfqmeo7qj30iq0ifdjm.jpg" alt="image.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 错题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_HEAP&amp;SATCK_Add Two Polynomials</title>
      <link href="/2022/12/25/DS-HEAP-SATCK-Add-Two-Polynomials/"/>
      <url>/2022/12/25/DS-HEAP-SATCK-Add-Two-Polynomials/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_heapampsatck_add-two-polynomials">DS_HEAP&amp;SATCK_Add Two Polynomials</span></h1><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gakk2k5uj313m0n0jyc.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gan2v30lj30ku051q4j.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gaofn7m0j30be0gtdiw.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gapejw0xj30yy0g7n1c.jpg" alt="image.png"></p><p>看起来是直接复制项有点问题</p><p><a href="https://blog.csdn.net/qq_37600027/article/details/89503824">case 中声明变量的问题</a></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gb9ctcbrj30v3087aco.jpg" alt="image.png"></p><p>网上超了别人对题目代码的补全来测试自己代码，发现。。。</p><ul><li>难道不需要头节点的吗？</li><li>相加的看来都出错了</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gbibpbytj30v108r0vd.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gbjhnispj30qb07dtb9.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gbkbxdd6j30pb08gdi0.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gbkz7psrj30of07jgns.jpg" alt="image.png"></p><p>这是指数和系数位置颠倒了吗？</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gbm9tedpj30se0e5gqq.jpg" alt="image.png"></p><p>原来是这里错了，笑得想死了已经哈哈哈哈哈哈</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gbn7uu8pj31490mz45y.jpg" alt="image.png"></p><p>欧克 AC力~~</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gbvdg9fpj30qr088goh.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9gbvq0p7nj30ok0a676v.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_HEAP&amp;SATCK_Two Stacks in One Array</title>
      <link href="/2022/12/25/DS-HEAP-SATCK-Two-Stacks-in-One-Array/"/>
      <url>/2022/12/25/DS-HEAP-SATCK-Two-Stacks-in-One-Array/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_heapampsatck_two-stacks-in-one-array">DS_HEAP&amp;SATCK_Two Stacks in One Array</span></h1><h2><span id="题目描述">题目描述</span></h2><p>Write routines to implement two stacks using only one array.  Your  stack routines should not declare an overflow unless every slot in the  array is used.</p><h3><span id="format-of-functions">Format of functions:</span></h3><pre><code class="language-c++">Stack CreateStack( int MaxElements );int IsEmpty( Stack S, int Stacknum );int IsFull( Stack S );int Push( ElementType X, Stack S, int Stacknum );ElementType Top_Pop( Stack S, int Stacknum );</code></pre><p>where <code>int Stacknum</code> is the index of a stack which is either 1 or 2; <code>int MaxElements</code> is the size of the stack array; and <code>Stack</code> is defined as the following:</p><pre><code class="language-c++">typedef struct StackRecord *Stack;struct StackRecord  &#123;    int Capacity;       /* maximum size of the stack array */    int Top1;           /* top pointer for Stack 1 */    int Top2;           /* top pointer for Stack 2 */    ElementType *Array; /* space for the two stacks */&#125;</code></pre><p>Note: <code>Push</code> is supposed to return 1 if the operation can be done successfully, or 0 if fails.  If the stack is empty, <code>Top_Pop</code> must return <code>ERROR</code> which is defined by the judge program.</p><h3><span id="sample-program-of-judge">Sample program of judge:</span></h3><pre><code class="language-c++">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define ERROR 1e8typedef int ElementType;typedef enum &#123; push, pop, end &#125; Operation;typedef struct StackRecord *Stack;struct StackRecord  &#123;    int Capacity;       /* maximum size of the stack array */    int Top1;           /* top pointer for Stack 1 */    int Top2;           /* top pointer for Stack 2 */    ElementType *Array; /* space for the two stacks */&#125;;Stack CreateStack( int MaxElements );int IsEmpty( Stack S, int Stacknum );int IsFull( Stack S );int Push( ElementType X, Stack S, int Stacknum );ElementType Top_Pop( Stack S, int Stacknum );Operation GetOp();  /* details omitted */void PrintStack( Stack S, int Stacknum ); /* details omitted */int main()&#123;    int N, Sn, X;    Stack S;    int done = 0;    scanf(&quot;%d&quot;, &amp;N);    S = CreateStack(N);    while ( !done ) &#123;        switch( GetOp() ) &#123;        case push:             scanf(&quot;%d %d&quot;, &amp;Sn, &amp;X);            if (!Push(X, S, Sn)) printf(&quot;Stack %d is Full!\n&quot;, Sn);            break;        case pop:            scanf(&quot;%d&quot;, &amp;Sn);            X = Top_Pop(S, Sn);            if ( X==ERROR ) printf(&quot;Stack %d is Empty!\n&quot;, Sn);            break;        case end:            PrintStack(S, 1);            PrintStack(S, 2);            done = 1;            break;        &#125;    &#125;    return 0;&#125;/* Your function will be put here */</code></pre><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">5Push 1 1Pop 2Push 2 11Push 1 2Push 2 12Pop 1Push 2 13Push 2 14Push 1 3Pop 2End</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">Stack 2 is Empty!Stack 1 is Full!Pop from Stack 1: 1Pop from Stack 2: 13 12 11</code></pre><h2><span id="解题过程">解题过程</span></h2><p>这题没什么难度，但是我一遍写过就AC还是值得纪念一下滴！！！</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g8svvtolj312o0k6451.jpg" alt="image.png"></p><h2><span id="c源码">C源码</span></h2><pre><code class="language-c">//2022-12-25//edited by Cr#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define ERROR 1e8typedef int ElementType;typedef enum &#123; push, pop, end &#125; Operation;typedef struct StackRecord *Stack;struct StackRecord  &#123;    int Capacity;       /* maximum size of the stack array */    int Top1;           /* top pointer for Stack 1 */    int Top2;           /* top pointer for Stack 2 */    ElementType *Array; /* space for the two stacks */&#125;;Stack CreateStack( int MaxElements );int IsEmpty( Stack S, int Stacknum );int IsFull( Stack S );int Push( ElementType X, Stack S, int Stacknum );ElementType Top_Pop( Stack S, int Stacknum );Operation GetOp();  /* details omitted */void PrintStack( Stack S, int Stacknum ); /* details omitted */int main()&#123;    int N, Sn, X;    Stack S;    int done = 0;    scanf(&quot;%d&quot;, &amp;N);    S = CreateStack(N);    while ( !done ) &#123;        switch( GetOp() ) &#123;        case push:             scanf(&quot;%d %d&quot;, &amp;Sn, &amp;X);            if (!Push(X, S, Sn)) printf(&quot;Stack %d is Full!\n&quot;, Sn);            break;        case pop:            scanf(&quot;%d&quot;, &amp;Sn);            X = Top_Pop(S, Sn);            if ( X==ERROR ) printf(&quot;Stack %d is Empty!\n&quot;, Sn);            break;        case end:            PrintStack(S, 1);            PrintStack(S, 2);            done = 1;            break;        &#125;    &#125;    return 0;&#125;/* Your function will be put here */Stack CreateStack( int MaxElements )&#123;Stack S = (Stack)malloc(sizeof(struct StackRecord));S-&gt;Capacity = MaxElements;S-&gt;Array = (int*)malloc(MaxElements*sizeof(int));S-&gt;Top1 = -1;S-&gt;Top2 = MaxElements;return S;&#125;int IsEmpty( Stack S, int Stacknum )&#123;if(Stacknum == 1 &amp;&amp; S-&gt;Top1 == -1)return 1;else if(Stacknum == 2 &amp;&amp; S-&gt;Top2 == S-&gt;Capacity)return 1;elsereturn 0;&#125;int IsFull( Stack S )&#123;if(S-&gt;Top1 + 1 == S-&gt;Top2)return 1;elsereturn 0;&#125;int Push( ElementType X, Stack S, int Stacknum )&#123;if(IsFull(S))return 0;if(Stacknum == 1)&#123;S-&gt;Array[++(S-&gt;Top1)] = X;return 1;&#125;else if(Stacknum == 2)&#123;S-&gt;Array[--(S-&gt;Top2)] = X;return 1;&#125;else return 0;&#125;ElementType Top_Pop( Stack S, int Stacknum )&#123;if(IsEmpty(S,Stacknum))return ERROR;if(Stacknum == 1)&#123;return (S-&gt;Array[(S-&gt;Top1)--]);&#125;else if(Stacknum == 2)&#123;return (S-&gt;Array[(S-&gt;Top2)++]);&#125;elsereturn ERROR;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_deque</title>
      <link href="/2022/12/25/DS-deque/"/>
      <url>/2022/12/25/DS-deque/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_heapampsatck_deque">DS_HEAP&amp;SATCK_deque</span></h1><h2><span id="题目描述">题目描述</span></h2><p>A “deque” is a data structure consisting of a list of items, on which the following operations are possible:</p><ul><li>Push(X,D): Insert item X on the front end of deque D.</li><li>Pop(D): Remove the front item from deque D and return it.</li><li>Inject(X,D): Insert item X on the rear end of deque D.</li><li>Eject(D): Remove the rear item from deque D and return it.<br>Write routines to support the deque that take O(1) time per operation.</li></ul><h3><span id="format-of-functions">Format of functions:</span></h3><pre><code class="language-c++">Deque CreateDeque();int Push( ElementType X, Deque D );ElementType Pop( Deque D );int Inject( ElementType X, Deque D );ElementType Eject( Deque D );</code></pre><p>where <code>Deque</code> is defined as the following:</p><pre><code class="language-c++">typedef struct Node *PtrToNode;struct Node &#123;    ElementType Element;    PtrToNode Next, Last;&#125;;typedef struct DequeRecord *Deque;struct DequeRecord &#123;    PtrToNode Front, Rear;&#125;;</code></pre><p>Here the deque is implemented by a doubly linked list with a header.  <code>Front</code> and <code>Rear</code> point to the two ends of the deque respectively.  <code>Front</code> always points to the header.  The deque is empty when <code>Front</code> and <code>Rear</code> both point to the same dummy header.<br>Note: <code>Push</code> and <code>Inject</code> are supposed to return 1 if the operations can be done successfully, or 0 if fail.  If the deque is empty, <code>Pop</code> and <code>Eject</code> must return <code>ERROR</code> which is defined by the judge program.</p><h3><span id="sample-program-of-judge">Sample program of judge:</span></h3><pre><code class="language-c++">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define ElementType int#define ERROR 1e5typedef enum &#123; push, pop, inject, eject, end &#125; Operation;typedef struct Node *PtrToNode;struct Node &#123;    ElementType Element;    PtrToNode Next, Last;&#125;;typedef struct DequeRecord *Deque;struct DequeRecord &#123;    PtrToNode Front, Rear;&#125;;Deque CreateDeque();int Push( ElementType X, Deque D );ElementType Pop( Deque D );int Inject( ElementType X, Deque D );ElementType Eject( Deque D );Operation GetOp();          /* details omitted */void PrintDeque( Deque D ); /* details omitted */int main()&#123;    ElementType X;    Deque D;    int done = 0;    D = CreateDeque();    while (!done) &#123;        switch(GetOp()) &#123;        case push:             scanf(&quot;%d&quot;, &amp;X);            if (!Push(X, D)) printf(&quot;Memory is Full!\n&quot;);            break;        case pop:            X = Pop(D);            if ( X==ERROR ) printf(&quot;Deque is Empty!\n&quot;);            break;        case inject:             scanf(&quot;%d&quot;, &amp;X);            if (!Inject(X, D)) printf(&quot;Memory is Full!\n&quot;);            break;        case eject:            X = Eject(D);            if ( X==ERROR ) printf(&quot;Deque is Empty!\n&quot;);            break;        case end:            PrintDeque(D);            done = 1;            break;        &#125;    &#125;    return 0;&#125;/* Your function will be put here */</code></pre><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">PopInject 1PopEjectPush 1Push 2EjectInject 3End</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">Deque is Empty!Deque is Empty!Inside Deque: 2 3</code></pre><h2><span id="解题过程">解题过程</span></h2><p>本题其实很简单，只是考察了最基本的堆栈操作</p><p>就是注意一下双向链表的结构就可以了</p><p>不过我还是遇到了不少bug：</p><ol><li>第一次提交的时候没一个测试点过的哈哈哈哈，但是这难不倒勤奋乐观人(ง •_•)ง</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g8222p5hj30o70cddln.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g81jcxu0j30te0g178g.jpg" alt="image.png"></p><ol start="2"><li>找出第一个bug，就是把第85行改了一下，这里逻辑显然反了。所以其实把&quot;!&quot;去掉就可以了，但是为了和下面为空的判断一致，就全改了</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g818i5elj30tr0cz452.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g80s739dj30sx0exn0z.jpg" alt="image.png"></p><p>看来是 pop的问题</p><ol start="3"><li>这里判断deque是否只有一个元素的逻辑又反了</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g8079pf1j30qp0hijwv.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g7zicuzvj30ty0fvdju.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g7z5geu0j30sz0mwwmg.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g7ysn92sj30sw0fd428.jpg" alt="image.png"></p><ol start="4"><li>这里发现，为空的时候输出不正确，pop也还是有问题</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g7yg5uqlj30ks0hgjt7.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g7y2rzqsj30jd0adac1.jpg" alt="image.png"></p><p>发现原来是pop的时候头节点没有指向原来第二个节点，双向链表不完整了</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g6tuk3j5j30te0lrwns.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9g6tg95zgj313w0kv7ar.jpg" alt="image.png"></p><p>AC了！！！</p><p>原来就是从头往后的链断掉了~(●’◡’●)</p><h2><span id="c源码">C源码</span></h2><pre><code class="language-c">//2022-12-15//edited by Cr#include&lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define ElementType int#define ERROR 1e5typedef enum &#123; push, pop, inject, eject, end &#125; Operation;typedef struct Node *PtrToNode;struct Node &#123;    ElementType Element;    PtrToNode Next, Last;&#125;;typedef struct DequeRecord *Deque;struct DequeRecord &#123;    PtrToNode Front, Rear;&#125;;Deque CreateDeque();int Push( ElementType X, Deque D );ElementType Pop( Deque D );int Inject( ElementType X, Deque D );ElementType Eject( Deque D );Operation GetOp();          /* details omitted */void PrintDeque( Deque D ); /* details omitted */int main()&#123;    ElementType X;    Deque D;    int done = 0;    D = CreateDeque();    while (!done) &#123;        switch(GetOp()) &#123;        case push:             scanf(&quot;%d&quot;, &amp;X);            if (!Push(X, D)) printf(&quot;Memory is Full!\n&quot;);            break;        case pop:            X = Pop(D);            if ( X==ERROR ) printf(&quot;Deque is Empty!\n&quot;);            break;        case inject:             scanf(&quot;%d&quot;, &amp;X);            if (!Inject(X, D)) printf(&quot;Memory is Full!\n&quot;);            break;        case eject:            X = Eject(D);            if ( X==ERROR ) printf(&quot;Deque is Empty!\n&quot;);            break;        case end:            PrintDeque(D);            done = 1;            break;        &#125;    &#125;    return 0;&#125;/* Your function will be put here */Deque CreateDeque()&#123;Deque D = (Deque)malloc(sizeof(struct DequeRecord));PtrToNode DummyHeader = (PtrToNode)malloc(sizeof(struct Node));//创建首节点//DummyHeader-&gt;Element = 0;DummyHeader-&gt;Last = NULL;DummyHeader-&gt;Next = NULL;D-&gt;Front = DummyHeader;D-&gt;Rear = DummyHeader;return D;&#125;int Push( ElementType X, Deque D )&#123;PtrToNode new = (PtrToNode)malloc(sizeof(struct Node));//创建新节点PtrToNode head = (PtrToNode)malloc(sizeof(struct Node));//表示dummy头节点new-&gt;Element = X;new-&gt;Last = NULL;new-&gt;Next = NULL;//初始化好所有的值head = D-&gt;Front;if(!(D-&gt;Rear == D-&gt;Front))//若deque不为空&#123;PtrToNode old = (PtrToNode)malloc(sizeof(struct Node));//原来第一个不为空的节点old = head-&gt;Next;new-&gt;Next = old;new-&gt;Last = head;head-&gt;Next = new;old-&gt;Last = new;//D-&gt;Rear = new;这里不需要更改rear的值return 1;&#125;else//若deque为空&#123;new-&gt;Last = head;head-&gt;Next = new;D-&gt;Rear = new;return 1;&#125;return 0;&#125;ElementType Pop( Deque D )&#123;if(D-&gt;Rear == D-&gt;Front)return ERROR;//是否为空的判断PtrToNode tmp = (PtrToNode)malloc(sizeof(struct Node));tmp = D-&gt;Front-&gt;Next;if(tmp-&gt;Next)//若deque不只有一个元素&#123;PtrToNode old = (PtrToNode)malloc(sizeof(struct Node));old = tmp-&gt;Next;old-&gt;Last = D-&gt;Front;D-&gt;Front-&gt;Next = old;&#125;else//若deque只有一个元素,pop掉后为空&#123;D-&gt;Front-&gt;Next = NULL;D-&gt;Rear = D-&gt;Front;&#125;ElementType X = tmp-&gt;Element;free(tmp);return X;&#125;int Inject( ElementType X, Deque D )&#123;PtrToNode old = (PtrToNode)malloc(sizeof(struct Node));PtrToNode new = (PtrToNode)malloc(sizeof(struct Node));old = D-&gt;Rear;new-&gt;Element = X;new-&gt;Last = NULL;new-&gt;Next = NULL;old-&gt;Next = new;new-&gt;Last = old;D-&gt;Rear = new;return 1;//要是出错了怎么写呢&#125;ElementType Eject( Deque D )&#123;if(D-&gt;Front == D-&gt;Rear)return ERROR;PtrToNode tmp = (PtrToNode)malloc(sizeof(struct Node));tmp = D-&gt;Rear;D-&gt;Rear = tmp-&gt;Last;D-&gt;Rear-&gt;Next = NULL;ElementType X = tmp-&gt;Element;free(tmp);return X;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_线性结构</title>
      <link href="/2022/12/25/DS-%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84/"/>
      <url>/2022/12/25/DS-%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_线性结构">DS_线性结构</span></h1><blockquote><p>声明：本文内容（包括图片，代码）均来自MOOC课程浙江大学“数据结构”</p></blockquote><h2><span id="线性表及顺序存储">线性表及顺序存储</span></h2><h3><span id="定义">定义</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225102638126.png" alt="image-20221225102638126"></p><h3><span id="抽象数据类型描述">抽象数据类型描述</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225102830376.png" alt="image-20221225102830376"></p><h3><span id="顺序存储实现">顺序存储实现</span></h3><pre><code class="language-c">typedef int Position;typedef struct LNode *List;struct LNode &#123;ElementType Data[MAXSIZE];Position Last;&#125;;</code></pre><h4><span id="主要操作的实现">主要操作的实现</span></h4><h5><span id="初始化">初始化</span></h5><pre><code class="language-c">List MakeEmpty()&#123;List L;L = (List)malloc(sizeof(struct LNode));L-&gt;Last = -1;return L;&#125;</code></pre><h5><span id="查找">查找</span></h5><pre><code class="language-c">#define ERROR -1Position Find( List L, ElementType X )&#123;Position i = 0;while( i &lt;= L-&gt;Last &amp;&amp; L-&gt;Data[i]!= X )i++;if ( i &gt; L-&gt;Last )  return ERROR; /* 如果没找到，返回错误信息 */else  return i;  /* 找到后返回的是存储位置 */&#125;</code></pre><h5><span id="插入">插入</span></h5><pre><code class="language-c">bool Insert( List L, ElementType X, Position P ) &#123; /* 在L的指定位置P前插入一个新元素X */Position i;if ( L-&gt;Last == MAXSIZE-1) &#123;/* 表空间已满，不能插入 */printf(&quot;表满&quot;); return false; &#125;  if ( P&lt;0 || P&gt;L-&gt;Last+1 ) &#123; /* 检查插入位置的合法性 */printf(&quot;位置不合法&quot;);return false; &#125; for( i=L-&gt;Last; i&gt;=P; i-- )L-&gt;Data[i+1] = L-&gt;Data[i]; /* 将位置P及以后的元素顺序向后移动 */L-&gt;Data[P] = X;  /* 新元素插入 */L-&gt;Last++;   /* Last仍指向最后元素 */return true; &#125; </code></pre><h5><span id="删除">删除</span></h5><pre><code class="language-c">bool Delete( List L, Position P )&#123; /* 从L中删除指定位置P的元素 */Position i;if( P&lt;0 || P&gt;L-&gt;Last ) &#123; /* 检查空表及删除位置的合法性 */printf(&quot;位置%d不存在元素&quot;, P ); return false; &#125;for( i=P+1; i&lt;=L-&gt;Last; i++ )L-&gt;Data[i-1] = L-&gt;Data[i]; /* 将位置P+1及以后的元素顺序向前移动 */L-&gt;Last--; /* Last仍指向最后元素 */return true;   &#125;</code></pre><h3><span id="顺序存储实现">顺序存储实现</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225103826749.png" alt="image-20221225103826749"></p><pre><code class="language-c">typedef struct LNode *PtrToLNode;struct LNode &#123;ElementType Data;PtrToLNode Next;&#125;;typedef PtrToLNode Position;typedef PtrToLNode List;</code></pre><h4><span id="主要操作实现">主要操作实现</span></h4><h5><span id="求表长">求表长</span></h5><pre><code class="language-c">int Length(List PtrL)&#123;    List p  = PtrL;    int j = 0;    while(p)    &#123;        p = p-&gt;Next;        j++;    &#125;    return j;&#125;</code></pre><h5><span id="查找">查找</span></h5><ol><li>按序号查找</li></ol><pre><code class="language-c">List FindKth(int K, List PtrL)&#123;    List p = PtrL;    int i = 1;    while(p!=NULL&amp;&amp;i&lt;K)    &#123;        p = p-&gt;Next;        i++;    &#125;    if(i== K)return p;    else return NULL;&#125;</code></pre><ol start="2"><li>按值查找</li></ol><pre><code class="language-c">#define ERROR NULLPosition Find( List L, ElementType X )&#123;Position p = L; /* p指向L的第1个结点 */while ( p &amp;&amp; p-&gt;Data!=X )p = p-&gt;Next;/* 下列语句可以用 return p; 替换 */if ( p )return p;elsereturn ERROR;&#125;</code></pre><h5><span id="带头节点的插入">带头节点的插入</span></h5><pre><code class="language-c">bool Insert( List L, ElementType X, Position P )&#123; /* 这里默认L有头结点 */Position tmp, pre;    /* 若插在头节点前 */if(P == L)    &#123;        tmp = (Position)malloc(sizeof(struct LNode));        tmp-&gt;Data = x;        tmp-&gt;Next = L;        return tmp;    &#125;/* 查找P的前一个结点 */for ( pre=L; pre&amp;&amp;pre-&gt;Next!=P; pre=pre-&gt;Next ) ;if ( pre==NULL ) &#123; /* P所指的结点不在L中 */printf(&quot;插入位置参数错误\n&quot;);return false;&#125;else &#123; /* 找到了P的前一个结点pre *//* 在P前插入新结点 */tmp = (Position)malloc(sizeof(struct LNode)); /* 申请、填装结点 */tmp-&gt;Data = X; tmp-&gt;Next = P;pre-&gt;Next = tmp;return true;&#125;&#125;</code></pre><h5><span id="带头节点的删除">带头节点的删除</span></h5><pre><code class="language-c">bool Delete( List L, Position P )&#123; /* 这里默认L有头结点 */Position pre;    /* 若删除头节点 */if(P == L)    &#123;        tmp = L;        if(L != NULL)L = L-&gt;Next;        elsereturn L;        free(tmp);        return L;    &#125;/* 查找P的前一个结点 */for ( pre=L; pre&amp;&amp;pre-&gt;Next!=P; pre=pre-&gt;Next ) ;if ( pre==NULL || P==NULL) &#123; /* P所指的结点不在L中 */printf(&quot;删除位置参数错误\n&quot;);return false;&#125;else &#123; /* 找到了P的前一个结点pre *//* 将P位置的结点删除 */pre-&gt;Next = P-&gt;Next;free(P);return true;&#125;&#125;</code></pre><blockquote><p>思考题</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225105228541.png" alt="image-20221225105228541"></p><p>如果给形参k一个负数实参的时候，循环不执行，原来的函数会返回NULL，但是这里修改之后如果k为负数，p等于PtrL，函数返回时就直接返回了p</p></blockquote><h3><span id="广义表与多重链表">广义表与多重链表</span></h3><h4><span id="广义表">广义表</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225111428668.png" alt="image-20221225111428668"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225111531930.png" alt="image-20221225111531930"></p><h4><span id="多重链表">多重链表</span></h4><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225111637447.png" alt="image-20221225111637447"></p><h5><span id="举例十字链表存储矩阵">举例：十字链表存储矩阵</span></h5><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225111911140.png" alt="image-20221225111911140"></p><blockquote><p>思考题：在矩阵的多重链表表示中，第i行的head和第i列的head实际上是同一个结点</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225112220150.png" alt="image-20221225112220150"></p><p><a href="https://blog.csdn.net/m0_57298796/article/details/123857105">参考博客</a></p></blockquote><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225112309436.png" alt="image-20221225112309436"></p><h2><span id="堆栈">堆栈</span></h2><p>受操作约束的线性表</p><h3><span id="抽象数据类型描述">抽象数据类型描述</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225125853099.png" alt="image-20221225125853099"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225125918479.png" alt="image-20221225125918479"></p><h3><span id="栈的顺序存储实现">栈的顺序存储实现</span></h3><pre><code class="language-c">typedef int Position;struct SNode &#123;ElementType *Data; /* 存储元素的数组 */Position Top;  /* 栈顶指针 */int MaxSize;   /* 堆栈最大容量 */&#125;;typedef struct SNode *Stack;</code></pre><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225131648081.png" alt="image-20221225131648081"></p><h4><span id="基本操作实现">基本操作实现</span></h4><h5><span id="生成">生成</span></h5><pre><code class="language-c">Stack CreateStack( int MaxSize )&#123;Stack S = (Stack)malloc(sizeof(struct SNode));S-&gt;Data = (ElementType *)malloc(MaxSize * sizeof(ElementType));S-&gt;Top = -1;S-&gt;MaxSize = MaxSize;return S;&#125;</code></pre><h5><span id="判断是否满了">判断是否满了</span></h5><pre><code class="language-c">bool IsFull( Stack S )&#123;return (S-&gt;Top == S-&gt;MaxSize-1);&#125;</code></pre><h5><span id="判断是否为空">判断是否为空</span></h5><pre><code class="language-c">bool IsEmpty( Stack S )&#123;return (S-&gt;Top == -1);&#125;</code></pre><h5><span id="压入">压入</span></h5><pre><code class="language-c">bool Push( Stack S, ElementType X )&#123;if ( IsFull(S) ) &#123;printf(&quot;堆栈满&quot;);return false;&#125;else &#123;S-&gt;Data[++(S-&gt;Top)] = X;return true;&#125;&#125;</code></pre><h5><span id="弹出">弹出</span></h5><pre><code class="language-c">ElementType Pop( Stack S )&#123;if ( IsEmpty(S) ) &#123;printf(&quot;堆栈空&quot;);return ERROR; /* ERROR是ElementType的特殊值，标志错误 */&#125;else return ( S-&gt;Data[(S-&gt;Top)--] );&#125;</code></pre><blockquote><p>思考题：</p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225132402349.png" alt="image-20221225132402349"></p><p>错误，C语言函数传递是值传递，也就是说形参top的改变不会影响实参top，导致实参top并没有变，当再次进行Pop操作时候，改变的还是下标为  top的数组单元的值</p></blockquote><h3><span id="栈的链式存储实现">栈的链式存储实现</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225132439106.png" alt="image-20221225132439106"></p><pre><code class="language-c">typedef struct SNode *PtrToSNode;struct SNode &#123;ElementType Data;PtrToSNode Next;&#125;;typedef PtrToSNode Stack;</code></pre><h5><span id="创建">创建</span></h5><pre><code class="language-c">Stack CreateStack( ) &#123; /* 构建一个堆栈的头结点，返回该结点指针 */Stack S;S = (Stack)malloc(sizeof(struct SNode));S-&gt;Next = NULL;return S;&#125;</code></pre><h5><span id="判断是否为空">判断是否为空</span></h5><pre><code class="language-c">bool IsEmpty ( Stack S )&#123; /* 判断堆栈S是否为空，若是返回true；否则返回false */return ( S-&gt;Next == NULL );&#125;</code></pre><h5><span id="插入">插入</span></h5><pre><code class="language-c">bool Push( Stack S, ElementType X )&#123; /* 将元素X压入堆栈S */PtrToSNode TmpCell;TmpCell = (PtrToSNode)malloc(sizeof(struct SNode));TmpCell-&gt;Data = X;TmpCell-&gt;Next = S-&gt;Next;S-&gt;Next = TmpCell;return true;&#125;</code></pre><h5><span id="删除">删除</span></h5><pre><code class="language-c">ElementType Pop( Stack S )  &#123; /* 删除并返回堆栈S的栈顶元素 */PtrToSNode FirstCell;ElementType TopElem;if( IsEmpty(S) ) &#123;printf(&quot;堆栈空&quot;); return ERROR;&#125;else &#123;FirstCell = S-&gt;Next; TopElem = FirstCell-&gt;Data;S-&gt;Next = FirstCell-&gt;Next;free(FirstCell);return TopElem;&#125;&#125;</code></pre><h3><span id="应用将中缀表达式转换为后缀表达式">应用——将中缀表达式转换为后缀表达式</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225133623983.png" alt="image-20221225133623983"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225133725279.png" alt="image-20221225133725279"></p><h2><span id="队列">队列</span></h2><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225134215499.png" alt="image-20221225134215499"></p><p>受操作约束的线性表</p><h3><span id="抽象数据类型描述">抽象数据类型描述</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225134258213.png" alt="image-20221225134258213"></p><h3><span id="队列的顺序存储实现">队列的顺序存储实现</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225134327090.png" alt="image-20221225134327090"></p><pre><code class="language-c">typedef int Position;struct QNode &#123;ElementType *Data; /* 存储元素的数组 */Position Front, Rear;  /* 队列的头、尾指针 */int MaxSize;   /* 队列最大容量 */&#125;;typedef struct QNode *Queue;</code></pre><h4><span id="基本操作实现">基本操作实现</span></h4><h5><span id="产生">产生</span></h5><pre><code class="language-c">Queue CreateQueue( int MaxSize )&#123;Queue Q = (Queue)malloc(sizeof(struct QNode));Q-&gt;Data = (ElementType *)malloc(MaxSize * sizeof(ElementType));Q-&gt;Front = Q-&gt;Rear = 0;Q-&gt;MaxSize = MaxSize;return Q;&#125;</code></pre><h5><span id="判断是否满了">判断是否满了</span></h5><pre><code class="language-c">bool IsFull( Queue Q )&#123;return ((Q-&gt;Rear+1)%Q-&gt;MaxSize == Q-&gt;Front);&#125;</code></pre><h5><span id="判断是否为空">判断是否为空</span></h5><pre><code class="language-c">bool IsEmpty( Queue Q )&#123;return (Q-&gt;Front == Q-&gt;Rear);&#125;</code></pre><h5><span id="插入">插入</span></h5><pre><code class="language-c">bool AddQ( Queue Q, ElementType X )&#123;if ( IsFull(Q) ) &#123;printf(&quot;队列满&quot;);return false;&#125;else &#123;Q-&gt;Rear = (Q-&gt;Rear+1)%Q-&gt;MaxSize;Q-&gt;Data[Q-&gt;Rear] = X;return true;&#125;&#125;</code></pre><h5><span id="删除">删除</span></h5><pre><code class="language-c">ElementType DeleteQ( Queue Q )&#123;if ( IsEmpty(Q) ) &#123; printf(&quot;队列空&quot;);return ERROR;&#125;else  &#123;Q-&gt;Front =(Q-&gt;Front+1)%Q-&gt;MaxSize;return  Q-&gt;Data[Q-&gt;Front];&#125;&#125;</code></pre><ul><li>循环队列<ul><li>空和满表示方法一样无法判断<ul><li>使用额外标记</li><li>仅仅使用n-1个数组空间</li></ul></li></ul></li></ul><h3><span id="队列的链式存储实现">队列的链式存储实现</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225135636633.png" alt="image-20221225135636633"></p><pre><code class="language-c">typedef struct Node *PtrToNode;struct Node &#123; /* 队列中的结点 */ElementType Data;PtrToNode Next;&#125;;typedef PtrToNode Position;struct QNode &#123;Position Front, Rear;  /* 队列的头、尾指针 */int MaxSize;   /* 队列最大容量 */&#125;;typedef struct QNode *Queue;</code></pre><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221225140040117.png" alt="image-20221225140040117"></p><h4><span id="基本操作实现">基本操作实现</span></h4><h5><span id="判断是否为空">判断是否为空</span></h5><pre><code class="language-c">bool IsEmpty( Queue Q )&#123;return ( Q-&gt;Front == NULL);&#125;</code></pre><h5><span id="删除">删除</span></h5><pre><code class="language-c">ElementType DeleteQ( Queue Q )&#123;Position FrontCell; ElementType FrontElem;    if  ( IsEmpty(Q) ) &#123;printf(&quot;队列空&quot;);return ERROR;&#125;else &#123;FrontCell = Q-&gt;Front;if ( Q-&gt;Front == Q-&gt;Rear ) /* 若队列只有一个元素 */Q-&gt;Front = Q-&gt;Rear = NULL; /* 删除后队列置为空 */else Q-&gt;Front = Q-&gt;Front-&gt;Next;FrontElem = FrontCell-&gt;Data;free( FrontCell );  /* 释放被删除结点空间  */return  FrontElem;&#125;&#125;</code></pre><h2><span id="举例多项式加法运算实现">举例——多项式加法运算实现</span></h2><pre><code class="language-c">struct PolyNode &#123;int coef; // 系数int expon; // 指数struct PolyNode *link; // 指向下一个节点的指针&#125;;typedef struct PolyNode *Polynomial;Polynomial P1, P2;</code></pre><pre><code class="language-c">Polynomial PolyAdd (Polynomial P1, Polynomial P2)&#123;Polynomial front, rear, temp;int sum;rear = (Polynomial) malloc(sizeof(struct PolyNode)); front = rear; /* 由front 记录结果多项式链表头结点 */while ( P1 &amp;&amp; P2 ) /* 当两个多项式都有非零项待处理时 */switch ( Compare(P1-&gt;expon, P2-&gt;expon) ) &#123;case 1: Attach( P1-&gt;coef, P1-&gt;expon, &amp;rear);P1 = P1-&gt;link;break;case -1: Attach(P2-&gt;coef, P2-&gt;expon, &amp;rear); P2 = P2-&gt;link;break;case 0: sum = P1-&gt;coef + P2-&gt;coef;if ( sum ) Attach(sum, P1-&gt;expon, &amp;rear);P1 = P1-&gt;link; P2 = P2-&gt;link;break;&#125;/* 将未处理完的另一个多项式的所有节点依次复制到结果多项式中去 */for ( ; P1; P1 = P1-&gt;link ) Attach(P1-&gt;coef, P1-&gt;expon, &amp;rear);for ( ; P2; P2 = P2-&gt;link ) Attach(P2-&gt;coef, P2-&gt;expon, &amp;rear);rear-&gt;link = NULL; temp = front;front = front-&gt;link; /*令front指向结果多项式第一个非零项 */free(temp); /* 释放临时空表头结点 */return front;&#125;</code></pre><pre><code class="language-c">void Attach( int c, int e, Polynomial *pRear ) &#123; /* 由于在本函数中需要改变当前结果表达式尾项指针的值， *//* 所以函数传递进来的是结点指针的地址，*pRear指向尾项*/Polynomial P; P =(Polynomial)malloc(sizeof(struct PolyNode)); /* 申请新结点 */P-&gt;coef = c; /* 对新结点赋值 */P-&gt;expon = e;P-&gt;link=NULL;/* 将P指向的新结点插入到当前结果表达式尾项的后面 */ (*pRear)-&gt;link = P; *pRear = P; /* 修改pRear值 */&#125;</code></pre><h2><span id="举例多项式相加与相乘">举例——多项式相加与相乘</span></h2>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电设实验_原理图及PCB绘制_常见报错及解决</title>
      <link href="/2022/12/24/%E7%94%B5%E8%AE%BE%E5%AE%9E%E9%AA%8C-%E5%8E%9F%E7%90%86%E5%9B%BE%E5%8F%8APCB%E7%BB%98%E5%88%B6-%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E5%8F%8A%E8%A7%A3%E5%86%B3/"/>
      <url>/2022/12/24/%E7%94%B5%E8%AE%BE%E5%AE%9E%E9%AA%8C-%E5%8E%9F%E7%90%86%E5%9B%BE%E5%8F%8APCB%E7%BB%98%E5%88%B6-%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E5%8F%8A%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h1><span id="电设实验_-原理图及pcb绘制-_常见报错及解决">电设实验_ 原理图及PCB绘制 _常见报错及解决</span></h1><h2><span id="pcb绘制">PCB绘制</span></h2><h3><span id="规则检查">规则检查</span></h3><p>先附上规则检查无误的界面~看起来超爽</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9f1f0q4lvj30pd0gk428.jpg" alt="image.png"></p><p>不过一开始的时候我的报错是283个TAT</p><p>其实这个问题并不可怕，解决起来都很方便的（如果你前面布线操作没有太大问题的话）</p><p>一般报错分为两大类型，一类是<strong>Warnings</strong>，一般是你线没有连完全，这时候回退到PCB界面，按照飞线的指示把线连全就可以了。</p><p>另一类是<strong>Rule Violations</strong>，这就更好办了，只要简单（liumang）地把设计规则改掉就可以了。因为这些都是丝印和封装的问题，对电路工作没有影响。</p><p>我在这次规则检查后，发现有这样几个报错：</p><ol><li>Silk To Solder Mask</li><li>Silk to Silk</li></ol><p>上面两个我直接在&quot;Rule&quot;选项栏里把最小尺寸改成0了，一劳永逸</p><ol><li>Minimum Solder Mask Sliver<ol><li>我改成0.125mm就可以了</li></ol></li><li>Hole To Hole Clearance<ol><li>我改成0.125mm就可以了</li></ol></li><li>Hole Size Constraint<ol><li>这个原本默认的是0.254mm，但因为画了四个孔径0.3mm的焊盘作为定位孔，所以改成大于0.3mm的值就可以了</li></ol></li></ol><p>具体操作如下</p><ol><li>进入Rule</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9f1bz5pkxj30h60kqgr6.jpg" alt="image.png"></p><ol start="2"><li>在右边导航栏找到对应条目修改数值即可，一般都往小改就行了<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9f1boo8tcj30rx0kzdna.jpg" alt="image.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 电子电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二上-期末-DDL一览</title>
      <link href="/2022/12/24/%E5%A4%A7%E4%BA%8C%E4%B8%8A-%E6%9C%9F%E6%9C%AB-DDL%E4%B8%80%E8%A7%88/"/>
      <url>/2022/12/24/%E5%A4%A7%E4%BA%8C%E4%B8%8A-%E6%9C%9F%E6%9C%AB-DDL%E4%B8%80%E8%A7%88/</url>
      
        <content type="html"><![CDATA[<p>DDL一览&amp;Plan</p><ul><li>Schedule<ul><li><a href="https://mubu.com/doc78Mz3RO6Yw0">Schedule</a></li></ul></li><li>Daily<ul><li>50面经济法</li><li>2h马原视频+对应学解</li><li>每天ds视频推进1.5~2h，对应编程题也要做</li><li>每天1~2个DS HW</li><li>电基每天做3h</li></ul></li><li>12.23 五<ul><li>[x] 概统小测<ul><li>21复习Chapter6</li><li>22复习Chapter7</li><li>23白天刷题</li></ul></li></ul></li><li>12.25 日<ul><li>[x] 大物报告1<ul><li>21完成</li></ul></li><li>[x] 23:00<ul><li>PCB1<ul><li>22完成</li></ul></li></ul></li><li>[x] 23:59<ul><li>大英Summary<ul><li>21完成</li></ul></li><li>HW12<ul><li>22完成</li></ul></li><li>HW13<ul><li>23完成</li></ul></li></ul></li></ul></li><li>12.27 二<ul><li>[x] 12：00<ul><li>PCB2<ul><li>23开始画</li></ul></li><li>概统作业7<ul><li>24补课写or copy</li></ul></li></ul></li></ul></li><li>12.28 三<ul><li>[x] 8：00<ul><li>大物作业7<ul><li>21补课写</li></ul></li></ul></li><li>[x] 23：59<ul><li>汇编3<ul><li>最迟24开始写</li></ul></li><li>汇编4<ul><li>21开始写</li></ul></li></ul></li></ul></li><li>12.29 四</li><li>16：55<ul><li>大英口试<ul><li>24准备</li></ul></li></ul></li><li><ul><li>[x] 23：55<ul><li>中国画报告<ul><li>24写</li></ul></li></ul></li></ul></li><li>12.31  六<ul><li>[ ] 电基报告<ul><li>21完成作业部分</li></ul></li><li>[x] 工训</li><li>[ ] 12：00<ul><li>电设实验报告<ul><li>26开始写</li></ul></li></ul></li><li>[ ] 23：00<ul><li>电基作业7<ul><li>25补课写</li></ul></li></ul></li></ul></li><li>1.1 日<ul><li>[x] 18:00<ul><li>大物报告2<ul><li>26完成</li></ul></li></ul></li><li>[ ] 23:59<ul><li>HW14<ul><li>27完成</li></ul></li></ul></li></ul></li><li>1.2 一<ul><li>[ ] 18：30-20：30<ul><li>经济法考试<ul><li>12.30前看完书</li><li>12.30-12.31看完PPT看真题</li></ul></li></ul></li></ul></li><li>1.3 二<ul><li>[ ] 12：00<ul><li>概统作业8</li></ul></li><li>[ ] 14：00-16：00<ul><li>马原考试<ul><li>考研政治<ul><li>12.30前看完+做完学解</li></ul></li><li>题库<ul><li>12.31刷论述题</li></ul></li></ul></li></ul></li></ul></li><li>1.4 三<ul><li>[ ] 8：00<ul><li>大物作业8</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二上_期末_复习计划</title>
      <link href="/2022/12/24/%E5%A4%A7%E4%BA%8C%E4%B8%8A-%E6%9C%9F%E6%9C%AB-%E5%A4%8D%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
      <url>/2022/12/24/%E5%A4%A7%E4%BA%8C%E4%B8%8A-%E6%9C%9F%E6%9C%AB-%E5%A4%8D%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h2><span id="process">Process</span></h2><ul><li><p>Daily</p><ul><li>50面经济法</li><li>2h马原视频+对应学解</li><li>电基每天做3h</li></ul></li></ul><table><thead><tr><th>日期</th><th>50面经济法</th><th>2h马原视频+对应学解</th><th>ds视频推进1.5~2h，对应编程题</th><th>1~2个DS HW</th><th>电基做3h</th><th>汇编</th><th>电设实验报告</th></tr></thead><tbody><tr><td>12.21</td><td></td><td></td><td></td><td></td><td></td><td></td><td>/</td></tr><tr><td>12.22</td><td></td><td></td><td></td><td></td><td></td><td></td><td>/</td></tr><tr><td>12.23</td><td></td><td></td><td></td><td></td><td></td><td></td><td>/</td></tr><tr><td>12.24</td><td></td><td></td><td></td><td></td><td></td><td></td><td>/</td></tr><tr><td>12.25</td><td></td><td></td><td>❀</td><td>❀</td><td></td><td></td><td>/</td></tr><tr><td>12.26</td><td></td><td>❀</td><td></td><td></td><td></td><td></td><td>❀</td></tr><tr><td>12.27</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>12.28</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>12.29</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>12.30</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>12.31</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1.1</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1.2</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1.3</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1.4</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1.5</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1.6</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1.7</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1.8</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h2><span id="schedule">Schedule</span></h2><ul><li><p>12.21</p><ul><li><p>​    <img src="https://api2.mubu.com/v3/document_image/a5fc27e5-db48-40d0-9bbc-dded1f914c14-8281330.jpg" alt="img"></p></li><li><p>[x] 复习Chapter6</p></li><li><p>[x] 大物报告1</p></li><li><p>[x] 大英Summary</p></li><li><p>[x] 大物作业7</p></li><li><p>[x] 汇编4开始</p></li><li><p>[x] 电基报告开始</p></li></ul></li><li><p>12.22</p><ul><li><p>​    <img src="https://api2.mubu.com/v3/document_image/0bb425ff-5ad6-4c8f-a391-523858793822-8281330.jpg" alt="img"></p></li><li><p>[x] 复习Chapter7</p></li><li><p>[x] PCB1</p></li><li><p>[x] HW12</p></li></ul></li><li><p>12.23</p><ul><li><p>​    <img src="https://api2.mubu.com/v3/document_image/ffaa63a1-0149-4d29-b18b-74697adf4e7f-8281330.jpg" alt="img"></p></li><li><p>[x] 白天刷题</p></li><li><p>[x] HW13</p></li><li><p>[x] PCB2</p></li></ul></li><li><p>12.24</p><ul><li>[x] ​    <img src="https://api2.mubu.com/v3/document_image/0ba1f5f3-6690-48da-9397-5ad2a1f16edf-8281330.jpg" alt="img"></li><li>[x] 准备大英口试</li><li>[x] 概统作业7</li><li>[x] 汇编3改</li><li>[x] 中国画报告</li></ul></li><li><p>12.25</p><ul><li>[x] ​    <img src="https://api2.mubu.com/v3/document_image/ea239973-0cc7-49f2-af85-ff20d1baea39-8281330.jpg" alt="img"></li><li>[x] 电基作业</li><li>[x] 汇编pta 2</li></ul></li><li><p>12.26</p><ul><li>[x] ​    <img src="https://api2.mubu.com/v3/document_image/ae8e63d8-1484-4db1-a518-6569940e1a61-8281330.jpg" alt="img"></li><li>[x] 电设实验报告开始写</li><li>[x] 大物报告2</li></ul></li><li><p>12.27</p><ul><li>[x] ​    <img src="https://api2.mubu.com/v3/document_image/88446780-c3f3-4622-8344-2bc8b12c8996-8281330.jpg" alt="img"></li><li>[x] HW14完成</li></ul></li><li><p>12.28</p></li><li><p>12.29</p></li><li><p>12.30</p><ul><li>​    <img src="https://api2.mubu.com/v3/document_image/825f462a-73ea-4358-acab-c66833aebd09-8281330.jpg" alt="img"></li></ul></li><li><p>12.31</p><ul><li>​    <img src="https://api2.mubu.com/v3/document_image/ae3f28c0-29ba-498c-8ab6-640f0658ba8a-8281330.jpg" alt="img"></li></ul></li><li><p>1.1</p></li><li><p>1.2</p></li><li><p>1.3</p></li><li><p>1.4</p></li><li><p>1.5</p></li><li><p>1.6</p></li><li><p>1.7</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_Graph_Strongly Connected Components</title>
      <link href="/2022/12/15/DS-GRAPH-StronglyConnectedComponents/"/>
      <url>/2022/12/15/DS-GRAPH-StronglyConnectedComponents/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_graph_strongly-connected-components">DS_Graph_Strongly Connected Components</span></h1><h2><span id="description">Description</span></h2><p>Write a program to find the strongly connected components in a digraph.</p><h3><span id="format-of-functions">Format of functions:</span></h3><pre><code class="language-c++">void StronglyConnectedComponents( Graph G, void (*visit)(Vertex V) );</code></pre><p>where <code>Graph</code> is defined as the following:</p><pre><code class="language-c++">typedef struct VNode *PtrToVNode;struct VNode &#123;    Vertex Vert;    PtrToVNode Next;&#125;;typedef struct GNode *Graph;struct GNode &#123;    int NumOfVertices;    int NumOfEdges;    PtrToVNode *Array;&#125;;</code></pre><p>Here <code>void (*visit)(Vertex V)</code> is a function parameter that is passed into <code>StronglyConnectedComponents</code> to handle (print with a certain format) each vertex that is visited.  The function <code>StronglyConnectedComponents</code> is supposed to print a return after each component is found.</p><h3><span id="sample-program-of-judge">Sample program of judge:</span></h3><pre><code class="language-c++">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define MaxVertices 10  /* maximum number of vertices */typedef int Vertex;     /* vertices are numbered from 0 to MaxVertices-1 */typedef struct VNode *PtrToVNode;struct VNode &#123;    Vertex Vert;    PtrToVNode Next;&#125;;typedef struct GNode *Graph;struct GNode &#123;    int NumOfVertices;    int NumOfEdges;    PtrToVNode *Array;&#125;;Graph ReadG(); /* details omitted */void PrintV( Vertex V )&#123;   printf(&quot;%d &quot;, V);&#125;void StronglyConnectedComponents( Graph G, void (*visit)(Vertex V) );int main()&#123;    Graph G = ReadG();    StronglyConnectedComponents( G, PrintV );    return 0;&#125;/* Your function will be put here */</code></pre><h3><span id="sample-input-for-the-graph-shown-in-the-figure">Sample Input (for the graph shown in the figure):</span></h3><p><img src="https://images.ptausercontent.com/39" alt="img"></p><pre><code class="language-in">4 50 11 22 03 13 2</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">3 1 2 0 </code></pre><p>Note: The output order does not matter.  That is, a solution like</p><pre><code>0 1 2 3 </code></pre><p>is also considered correct.</p><h2><span id="algorithm">Algorithm</span></h2><p>The “strongly connected components” has a specific algorithm tailored for it—— Tarjan Algorithm， which is an improved version of DFS</p><h3><span id="tarjan-algorithm">Tarjan Algorithm</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h96ve1419fj30ow0dftfd.jpg" alt="image.png"></p><blockquote><p>I’ll complete the algorithm analysis later, since I haven’t fully grasped the idea of the algorithm.</p></blockquote><h2><span id="knowledge-points">Knowledge Points</span></h2><blockquote><p>以下均为引用</p></blockquote><h3><span id="无向图">无向图</span></h3><h4><span id="连通">连通</span></h4><p>在无向图中，若从顶点v到顶点w有路径存在，则称v和w是连通的。（连通是两个顶点之间存在路径，注意是路径不是边，是顶点之间的关系）</p><h4><span id="连通图与非连通图">连通图与非连通图</span></h4><p>若图中任意两个顶点都是连通的，那么就称这个无向图是连通图，否则是非连通图。（若一个图中有n个顶点，并且边数小于n-1，则此图一定是非连通图）</p><h4><span id="连通分量也就是极大连通子图">连通分量（也就是极大连通子图）</span></h4><p>无向图中极大连通子图称为连通分量。</p><p><strong>无向图分为连通图和非连通图：</strong></p><p>**对于连通无向图：**只有一个连通分量也就是只有一个极大连通子图，就是它本身。</p><p><strong>对于非连通图：<strong>不连通的无向图又可以分为若干个连通子图，其中有这样的连通子图，它包含了图中</strong>尽可能多</strong>的顶点以及<strong>尽可能多</strong>的边，以至于它再加上一个点或者边之后它就不连通了，此时这个图就是极大连通子图。<br>这里是其中一种理解，但是书上的概念太少了，我又查找其他关于连通分量的概念： 图G的连通分量是G的连通子图，并且它不是G的另一连通子图的一个子图，这时称图G的这个连通分量是G的极大连通子图。</p><p><strong>综上：</strong><br>连通分量（极大连通子图）是图的一个不被另外任何一个连通子图所包含的子图。<br><strong>故：</strong><br>1、连通图的极大连通子图就是它本身。<br>2、非连通图中有多个连通分量也就是可以有多个极大连通子图。</p><h4><span id="极小连通子图">极小连通子图</span></h4><p>​    极小连通子图和图中的另外一个定义生成树有关，即一个连通图的生成树是该连通图的顶点集所确定的极小连通子图。<br>​    极小连通子图为图的某一个顶点子集所确定的连通子图中，包含边最少且包含全部顶点的连通子图。<br>​    “极小”是因为此时如果删除一条边，就无法构成生成树。</p><h4><span id="综上">综上：</span></h4><p>1、极小连通子图只在无向图中才有<br>2、极小连通子图中包含图中全部的顶点（和极大不同，极大不要求包含所有的顶点）<br>3、用边将极小连通图中的所有边都连接起来<br>4、极小连通子图和生成树的概念不是等价的，生成树是包含图中全部顶点的一个极小连通子图。</p><h4><span id="总结">总结：</span></h4><p>1、极大连通子图是讨论连通分量的,极小连通子图是讨论生成树的.<br>2、极大要求的是边和顶点都可能的多，极小要求的是包含图中全部顶点的连通子图的边尽可能少。</p><h3><span id="有向图">有向图</span></h3><h4><span id="强连通"><strong>强连通</strong></span></h4><p>在有向图中，若从顶点v到顶点w有路径存在，则称v和w是连通的。（连通是两个顶点之间存在路径，注意是路径不是边，是顶点之间的关系）</p><h4><span id="强连通图"><strong>强连通图</strong></span></h4><p>在有向图中，若图中任意一对顶点都是强连通的，则称此有向图为强连通图。</p><h4><span id="弱连通图">弱连通图</span></h4><p>将有向图的所有的有向边替换为无向边，所得到的图称为原图的基图。如果一个有向图的基图是连通图，则有向图是弱连通图。</p><h4><span id="连通分量">连通分量</span></h4><p>图中的极大强连通子图称为强连通分量。</p><p>有向图中只有极大强连通图的概念没有极小强连通图。</p><p>注：有向图的概念和无向图的类似不再赘述。</p><h4><span id="综上">综上：</span></h4><p>1、强连通图的极大强连通子图是其本身。<br>2、非强连通有多个极大强连通子图，就是强连通分量。</p><blockquote><p>————————————————<br>版权声明：本文为CSDN博主「ATagebra」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/Mmyine/article/details/105066677">https://blog.csdn.net/Mmyine/article/details/105066677</a></p></blockquote><blockquote><p>以上均为引用</p></blockquote><h2><span id="impressions">Impressions</span></h2><ol><li>After learning the strongly connected components, I immediately try this  PTA homework. But failed after 5 hours or more. Next time if you’ve tried a long time but can’t grasp a clear train of thought, just search of inspirations.</li><li>Learning as more Algorithms as possible will strongly arm you.</li></ol><h2><span id="source-codec">Source Code（C）</span></h2><pre><code class="language-c">int stack[MaxVertices];//简化表示栈int dfn[MaxVertices] = &#123;0&#125;;//第一遍遍历到的时间int low[MaxVertices] = &#123;0&#125;;//回路中最小的dfnint in_stack[MaxVertices] = &#123;0&#125;;//表示节点是否在栈中int output[MaxVertices] = &#123;0&#125;;//标志节点是否已经输出int time = 1;int si = 0;//存储栈的下标int Min(int x, int y)&#123;return (x&lt;y) ? x:y;&#125;void DFS(int x, Graph G);void StronglyConnectedComponents( Graph G, void (*visit)(Vertex V) )&#123;int x = 0;for(; x &lt; G-&gt;NumOfVertices; x++)&#123;if(!dfn[x])DFS(x, G);&#125;for(x = 0; x &lt; G-&gt;NumOfVertices; x++)&#123;if(!output[x])DFS(x, G);//若节点x没有输出过则继续深搜&#125;return ;&#125;void DFS(int x, Graph G)&#123;dfn[x] = low[x] = time++;//更新时间戳stack[si++] = x;//将x入栈in_stack[x] = 1;//表示x在栈中PtrToVNode p = G-&gt;Array[x];//if -&gt;Next than 漏了一个节点for(;p;p = p-&gt;Next)//若节点x有路径到另一个节点&#123;int y = p-&gt;Vert;if(dfn[y] == 0)//若节点y还没有被遍历&#123;DFS(y, G);low[x] = Min(low[x], low[y]);//更新x的时间戳&#125;else if(in_stack[y])//若y已经被遍历且在栈中&#123;low[x] = Min(low[x], dfn[y]);&#125;&#125;if(low[x] == dfn[x])//若遍历一遍后发现x是强连通分量的头节点&#123;while(stack[--si] != x)//出栈到节点x&#123;printf(&quot;%d &quot;, stack[si]);in_stack[stack[si]] = 0;output[stack[si]] = 1;&#125;printf(&quot;%d \n&quot;, stack[si]);//特殊处理头节点，注意要输出空格in_stack[stack[si]] = 0;output[stack[si]] = 1;&#125;return ;&#125;</code></pre><h2><span id="reference">Reference</span></h2><ol><li><p><a href="https://blog.csdn.net/qq_43270444/article/details/121488284">路径、连通、连通图，强连通图、连通分量、极大连通子图以及割点、割边保姆级解释</a></p></li><li><p><a href="https://www.bilibili.com/video/BV19J411J7AZ?p=3&amp;vd_source=f6250a4a23a25f240430e31380d43ca7">[算法]轻松掌握tarjan强连通分量</a></p></li><li><p><a href="https://blog.csdn.net/Mmyine/article/details/105066677">（看了包会）连通子图、连通分量、极大连通子图、极小连通子图</a></p></li><li><p><a href="https://blog.csdn.net/m0_46613023/article/details/110181134?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=%E5%BC%B1%E8%BF%9E%E9%80%9A&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-3-110181134.nonecase&amp;spm=1018.2226.3001.4187">【图】连通图、强连通图、弱连通图、生成树、完全图</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_HW4</title>
      <link href="/2022/12/14/%E6%B1%87%E7%BC%96-HW4/"/>
      <url>/2022/12/14/%E6%B1%87%E7%BC%96-HW4/</url>
      
        <content type="html"><![CDATA[<p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94t3kir08j30mk06b75a.jpg" alt="image.png"></p><p><a href="https://www.cnblogs.com/onequiz/p/15867173.html">div</a></p><p><a href="https://www.codetd.com/en/article/13517389">跳转指令</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>汇编_控制转移指令</title>
      <link href="/2022/12/14/%E6%B1%87%E7%BC%96-%E8%B7%B3%E8%BD%AC%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/12/14/%E6%B1%87%E7%BC%96-%E8%B7%B3%E8%BD%AC%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1><span id="汇编_控制转移指令">汇编_控制转移指令</span></h1><h2><span id="字符串操作指令stosb及lodsb">字符串操作指令stosb及lodsb</span></h2><h3><span id="stosb-stosw-stosd">stosb, stosw, stosd</span></h3><ol><li>stosb:</li></ol><p>stosb的操作过程如下:</p><pre><code class="language-asm">es:[di] = ALdi++; DF=1时为di--</code></pre><p>rep stosb: 循环CX次stosb</p><ol start="2"><li>rep stosb的操作过程:</li></ol><pre><code class="language-asm">again:if(cx == 0) goto done;ES:[DI] = ALDI++; 当DF=1时, 为DI--CX--goto again;done:</code></pre><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93me5gctbj30gj0et0x5.jpg" alt="image.png"></p><h3><span id="lodsb">lodsb</span></h3><p><strong>操作过程</strong></p><pre><code class="language-asm">AL=DS:[SI]SI++;当DF=1时, 为SI--</code></pre><p><strong>例子</strong></p><p>例: 设DS:SI “##AB#12#XY”<br>且ES:DI指向一个空的数组, CX=11<br>通过编程过滤#最后使得ES:DI “AB12XY”</p><pre><code class="language-asm">   cldagain:   lodsb; AL=DS:[SI], SI++         ; mov al, ds:[si]         ; inc si   cmp al, '#'   je   next   stosb; ES:[DI]=AL, DI++         ; mov es:[di], al         ; inc dinext:   dec cx   jnz again</code></pre><h2><span id="控制跳转指令">控制跳转指令</span></h2><h3><span id="jmp的三种类型">jmp的三种类型</span></h3><p>①jmp short target; 短跳</p><p>②jmp near ptr target ; 近跳</p><p>③jmp far ptr target  ; 远跳</p><p>一般情况下，编译器会自动度量跳跃的距离，因此我们在写源程序的时候不需要加上short、near ptr、far ptr等类型修饰。即上述三种写法一律可以简化为jmp target。</p><h3><span id="短跳指令">短跳指令</span></h3><h4><span id="格式">格式</span></h4><p>jmp 偏移地址或标号</p><p>以下条件跳转指令也都属于短跳: jc jnc jo jno js jns jz jnz ja jb jae jbe jg jge jl jle jp jnp</p><h4><span id="机器码">机器码</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93mpxhp6gj30ex0a9tcx.jpg" alt="image.png"></p><ul><li>为什么跳转的机器码不写目标地址而写距离？<ul><li>为了方便代码可移动</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93jurr4t9j30kt0bwwhl.jpg" alt="image.png"></p><ul><li>为什么会移动代码？<ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93k1dnaydj30ku045tcl.jpg" alt="image.png"></li><li>操作系统的启动也会涉及代码移动<ul><li>开机后，cpu从FFFF:0000（ROM中的空间）处执行第一条指令：power on self test</li><li>然后读取硬盘0道/0头/1扇区到0000：7c00处，jmp 0000：7c00处执行硬盘中的代码（master boot record）</li><li>mbr移动自己到另外一块内存空间</li><li>mbr接下去会读取C：盘的第一个扇区（跟上面那个物理扇区不一样）到0000：7c00处再jmp 0000：7c00</li></ul></li></ul></li></ul><h4><span id="movecodeasm">movecode.asm</span></h4><pre><code class="language-asm">code segmentassume cs:code, ds:code, es:codemain:   push cs   pop ds; DS=CS   push cs   pop es; ES=CS   cld   mov ah, 2   mov dl, 'A'   int 21h   mov si, offset begin_flag   mov di, 1000h   mov cx, offset end_flag-offset begin_flag   rep movsb   mov cx, offset end_flag - offset main   mov di, offset main   mov bx, 1000h   jmp bxbegin_flag:   jmp nextnext:   mov al, 0   rep stosb   mov ah, 2   mov dl, 'B'   int 21h   mov ah, 4Ch   int 21hend_flag:code endsend main</code></pre><h4><span id="printfc">printf.c</span></h4><pre><code class="language-asm">/* ÓÃDosBoxTc±àÒë£¬²Ëµ¥Options-&gt;Compiler-&gt;Model-&gt;Tiny    Compile-&gt;Compile to OBJ    Compile-&gt;Link EXE file    Run-&gt;Run    Run-&gt;User Screen */extern int printf();int f(int a, int b)&#123;   return a+b;&#125;void zzz(void)&#123;&#125;main()&#123;   char buf[100];   char *p = (char *)printf;   char *q = (char *)f;   int n = (char *)zzz - (char *)f;   int y;   memcpy(buf, p, n);   memcpy(p, q, n);   y = printf(10, 20);   memcpy(p, buf, n);   printf(&quot;y=%d\n&quot;, y);&#125;</code></pre><ul><li>c语言中，函数名本身代表函数的地址，也即函数体的地址——函数体机器语言的首字节的地址</li><li>在tc中调试的时候<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93knxwsknj30fd0aqq55.jpg" alt="image.png"></li></ul><h4><span id="短跳跳不过去">短跳跳不过去</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93kpu50vjj30lo07z0v7.jpg" alt="image.png"></p><ul><li><p>所有条件跳转指令都是短跳</p></li><li><p>jmp可以近跳</p></li></ul><h3><span id="近跳指令">近跳指令</span></h3><ol><li>近跳指令的三种格式<ol><li>偏移地址或标号</li><li>16位寄存器</li><li>16位变量</li></ol></li><li>近跳指令的机器码<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93kvvy2tfj30gh06xt9p.jpg" alt="image.png"><ol><li>主要关心与短跳的区别</li></ol></li></ol><h3><span id="远跳指令">远跳指令</span></h3><ol><li>两种格式<ol><li>段地址：偏移地址</li><li>jmp dword ptr 32位变量</li></ol></li><li>远跳指令的机器码<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93kxvqb1lj30mo07yaeq.jpg" alt="image.png"><ol><li>把目标地址编译成机器码，与短跳近跳不同</li><li>jmp 后直接加地址不行，必须像上面那样定义</li></ol></li><li>举例<ol><li>实现计算机的开机启动<ol><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93l2qa7kgj30g20b5aeo.jpg" alt="image.png"></li></ol></li></ol></li></ol><p><strong>jmp</strong>？</p><pre><code class="language-asm">code segmentassume cs:codemain:   jmp next; jmp short nextexit:   mov ah, 4Ch   int 21hnext:   mov ah, 2   mov dl, 'A'   int 21h   jmp abc; jmp near ptr abc   db 200h dup(0)abc:   jmp far ptr away; jmp far ptr awaycode endsfff segmentassume cs:fffaway:   mov ah, 2   mov dl, 'F'   int 21h   jmp far ptr exit; jmp far ptr exitfff endsend main</code></pre><h2><span id="循环指令loop">循环指令：loop</span></h2><h3><span id="loop-dest-的操作过程">loop dest 的操作过程</span></h3><p>CX = CX - 1  ;循环次数减1</p><p>if(CX !=0)  ;若CX不等于0，则</p><p>goto dest ;跳转至dest</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93ljt8av5j30ej0b640t.jpg" alt="image.png"></p><ul><li>令cx=0</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93lmoyduqj30kj0ajtca.jpg" alt="image.png"></p><p>达到最大循环次数，FFFF比0少一次</p><ul><li>排除cx=0的情况</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93lnlc9vzj30lg07tdib.jpg" alt="image.png"></p><h2><span id="callret指令">call，ret指令</span></h2><h3><span id="原理">原理</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93ls5j0e0j30cz0botc1.jpg" alt="image.png"></p><p><strong>跳转</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93lxwqxajj30lj0dxn2j.jpg" alt="image.png"></p><p><strong>返回</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h93lzm71ebj308u05wabd.jpg" alt="image.png"></p><h3><span id="汇编语言中的">汇编语言中的</span></h3><p>小端表示</p>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_专题研究</title>
      <link href="/2022/12/13/%E7%94%B5%E5%9F%BA-%E4%B8%93%E9%A2%98%E7%A0%94%E7%A9%B6/"/>
      <url>/2022/12/13/%E7%94%B5%E5%9F%BA-%E4%B8%93%E9%A2%98%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<h4><span id="系统级工作">系统级工作</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9284yonk9j30l80dsqbo.jpg" alt="image.png"></p><ol><li>心电信号处理电路要写回来</li></ol><h4><span id="电路级工作">电路级工作</span></h4><p>心电，采样保持，积分……</p><ol><li>电路级工作</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9287dxsd9j30ip0aodk4.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h928b58hlfj30j90dm78x.jpg" alt="image.png"></p><ul><li>体现理解，不用太多话</li><li>不要弄得像上课</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h928f3aqkpj30l10dlq7e.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h928foixrxj30me09lq5h.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h928i4jz7cj30m70feq93.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通识_经济法_二手吉他出售协议</title>
      <link href="/2022/12/11/%E9%80%9A%E8%AF%86_%E7%BB%8F%E6%B5%8E%E6%B3%95_%E4%BA%8C%E6%89%8B%E5%90%89%E4%BB%96%E5%87%BA%E5%94%AE%E5%8D%8F%E8%AE%AE/"/>
      <url>/2022/12/11/%E9%80%9A%E8%AF%86_%E7%BB%8F%E6%B5%8E%E6%B3%95_%E4%BA%8C%E6%89%8B%E5%90%89%E4%BB%96%E5%87%BA%E5%94%AE%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h2><span id="二手吉他出售协议">二手吉他出售协议</span></h2><p>甲方（出售方）：刘子强  332624196001134878 18877658758</p><p>乙方（购买方）：马飞腾  33262419650816464X  13787665758</p><p>甲方现有吉他一把，现售卖给乙方，为维护双方权益特签订以下合同内容。</p><h3><span id="一-甲方出售吉他信息">一、甲方出售吉他信息</span></h3><ol><li>品牌型号：雅马哈C566型。</li><li>琴板材质：桃花心木原板。</li><li>购买年份：2017年。</li><li>琴弦型号：雅马哈H7。</li><li>琴身颜色：原木色。</li><li>有无大修：无。</li><li>售前所属人：刘子强（甲方）。</li></ol><h3><span id="二-甲乙双方注意事项">二、甲乙双方注意事项</span></h3><ol><li>甲方向乙方出售：二手吉他一把。</li><li>产品质量要求：与甲方提交的样品相符。</li><li>交货时间：2023年1月10日。</li><li>交货方式：买方自提，地点：卖方家中（即浙江省台州市仙居县福永街道外滩路178号）。</li><li>违约责任：若甲方未能即使提货或者未能付款，每日按总货款的1%支付乙方违约金，若乙方未能及时交货，每日按总货款的1%支付甲方违约金。</li><li>争议解决方式：因本合同所产生争议，提交台州市仲裁委员会仲裁解决。</li><li>甲方责任：本吉他在售卖前，甲方应提供本吉他所有合法手续供乙方进行查看；甲方应保证吉他的合法性，并保证此吉他在售卖过程中吉他无任何故障；甲方应如实告知乙方吉他此前的维修记录等信息；甲方应保证吉他无任何经济纠纷，否则所有后果由甲方进行承担。</li><li>乙方责任：乙方在购买吉他过程中应仔细检查吉他外观、音色等并且试弹，以确保吉他无任何故障；吉他购买后所产生的故障问题与甲方无关。</li></ol><h3><span id="三-吉他价格及办理">三、吉他价格及办理</span></h3><p>根据双方协商，此吉他交易价格为人民币：3000元。</p><p>大写人民币：叁仟元整。</p><p>甲方提供吉他转让手续，并且协助乙方办理。</p><h3><span id="四-其他">四、其他</span></h3><p>本合同一式两份，甲乙双方各执一份，明确自身的权利和义务。该合同自甲乙双方签字（盖章）之日其生效。</p><p>以下无正文。</p><p>甲方（盖章）                                                                                                                        乙方（签字）</p><p>2022年11月15日                                                                                                                  2022年11月15日</p>]]></content>
      
      
      <categories>
          
          <category> 通识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_除法溢出</title>
      <link href="/2022/12/07/%E6%B1%87%E7%BC%96-%E9%99%A4%E6%B3%95%E6%BA%A2%E5%87%BA/"/>
      <url>/2022/12/07/%E6%B1%87%E7%BC%96-%E9%99%A4%E6%B3%95%E6%BA%A2%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<p><strong>9秒倒计时</strong></p><pre><code class="language-asm">data segments db '0',17hcount db 0stop db 0data endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   xor ax, ax   mov es, ax; ES=0   mov bx, 8h*4   push es:[bx]   pop cs:old8h[0]; old8h[0] = es:[bx]   push es:[bx+2]   pop cs:old8h[2]   cli; IF=0禁止中断   mov word ptr es:[bx], offset int8h   mov es:[bx+2], cs; 或seg int8h或code   sti; IF=1允许中断wait_a_while:   cmp stop, 1; stop初始值为0   jne wait_a_while; 主线程，空转   cli   mov ax,cs:old8h[0]   mov es:[bx], ax   mov ax,cs:old8h[2]   mov es:[bx+2],ax   sti   mov ah, 4Ch   int 21hint8h:    ; interrupt service routine   push ax   push cx   push si   push di   push ds   push es   mov ax, 0B800h   mov es, ax   mov di, 0   mov ax, data   mov ds, ax   inc count   cmp count, 18; 每18分之一秒调用一次int8   jb skip   mov count, 0   mov si, offset s   mov cx, 2   cld   rep movsb   inc s[0]   cmp s[0], '9'   jbe skip   mov stop, 1; 结束主线程skip:   pop es   pop ds   pop di   pop si   pop cx   pop ax   ;push ax   ;mov al, 20h   ;out 20h, al   ;pop ax   ;iret   jmp dword ptr cs:[old8h]old8h dw 1234h, 5678h;设原int 8h的中断向量为5678h:1234hcode endsend main</code></pre><h2><span id="除法溢出">除法溢出</span></h2><h3><span id="溢出的两种情形">溢出的两种情形</span></h3><ol><li>除以0</li><li>除以较小的数<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vh2xuwuuj30lg04lq4j.jpg" alt="image.png"></li></ol><h3><span id="溢出时会发生">溢出时会发生</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vh49g70mj30l70ae7ak.jpg" alt="image.png"></p><ul><li>int 00h看不见</li></ul><h2><span id="逻辑运算和移位运算">逻辑运算和移位运算</span></h2><h3><span id="逻辑运算指令">逻辑运算指令</span></h3><p>AND OR XOR NOT TEST</p><p>&amp;        |     ^       ~</p><h4><span id="test">TEST</span></h4><ul><li>类似AND运算，相当于cmp与sub</li><li>但丢弃与运算的结果，只影响ZF标志位</li></ul><p><strong>判断某个寄存器是否为0</strong></p><p>test cl,cl</p><p>or cl,cl   ZF</p><p>and cl, cl</p><p>or cl, 0</p><p>cmp cl, 0</p><h3><span id="位移指令">位移指令</span></h3><p>shl, shr, sal, sar, rol, ror, rcl, rcr</p><h4><span id="sal和sar">sal和sar</span></h4><p>sal: shift arithmetic left</p><p>sal = shl</p><p>sar ≠ shr</p><ul><li>sar 负数 补1 针对符号数</li><li>shr 补0 针对非符号数</li></ul><p>C语言中并不区分算术右移和逻辑右移的运算符，都是统一用&gt;&gt;会自动根据变量类型区分</p><h4><span id="rcl和rcr">rcl和rcr</span></h4><p>rotate through carry left</p><pre><code class="language-asm">mov ah, 0B6hstc; CF=1rcl ah, 1; CF=1 AH=1011 0110 移位前           ; CF=1 AH=0110 1101 移位后mov ah, 0B6hstc; CF=1rcr ah, 1; AH=1011 0110  CF=1移位前           ; AH=1101 1011  CF=0移位后</code></pre><p><strong>举例</strong></p><p>例如: 要把1234ABCDh逻辑左移3位, 结果保存在dx:ax</p><ol><li><strong>解法一</strong></li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vhtxpjruj30ij07y0vi.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vhw31sozj30eu08utay.jpg" alt="image.png"></p><h2><span id="字符串操作指令">字符串操作指令</span></h2><h3><span id="字符串传送指令">字符串传送指令</span></h3><p>MOVSB, MOVSW, MOVSD</p><p>rep movsb; repeat move string by byte</p><ul><li>rep是指令前缀</li></ul><h4><span id="准备工作"><strong>准备工作</strong></span></h4><p>①ds:si-&gt;源字符串(si就是source index)</p><p>②es:di-&gt;目标字符串(di就是destination index)</p><p>③cx=移动次数</p><p>④DF=0即方向标志设成正方向(用指令cld)</p><h4><span id="所作操作">所作操作</span></h4><pre><code class="language-asm">again:if(cx == 0)   goto done;byte ptr es:[di] = byte ptr ds:[si]if(df==0); 正方向 direction flag = 0从低到高   &#123;si++; di++;&#125;else   &#123;si--; di--;&#125;cx--goto againdone:</code></pre><p><strong>举例</strong></p><pre><code class="language-asm">; rep movsb的操作过程:mov ax, 1000hmov ds, ax     ; 更改复制顺序，从高地址开始复制mov si, 0      ; mov si, 3mov ax, 2000hmov es, axmov di, 0      ; mov di, 3mov cx, 4cld             ; stdrep movsbcomment #循环结束时         循环结束时si=4              si=FFFFdi=4              di=FFFFcx=0              cx=0#; rep movsw的操作过程:again:if(cx == 0)   goto done;word ptr es:[di] = word ptr ds:[si]if(df==0)   &#123;si+=2; di+=2;&#125;else   &#123;si-=2; di-=2;&#125;cx--goto againdone:; rep movsd的操作过程:again:if(cx == 0)   goto done;dword ptr es:[di] = dword ptr ds:[si]if(df==0)   &#123;si+=4; di+=4;&#125;else   &#123;si-=4; di-=4;&#125;cx--goto againdone:</code></pre><p>在32位系统下, 假定ds:esi-&gt;源内存块, es:edi-&gt;目标块, DF=0, 则当要复制的字节数ecx不是4的倍数时，可以做如下处理:</p><pre><code class="language-asm">push ecxshr ecx, 2rep movsdpop ecxand ecx, 3; 相当于ecx = ecx % 4rep movsb</code></pre><h3><span id="字符串比较指令">字符串比较指令</span></h3><ol><li><strong>cmsbp</strong></li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vin3gmv0j30jr03p403.jpg" alt="image.png"></p><ol start="2"><li><strong>repe cmpsb</strong></li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vipk57mdj30l209f41v.jpg" alt="image.png"></p><ol start="3"><li><strong>repne cmpsb</strong></li></ol><h3><span id="字符串扫描指令">字符串扫描指令</span></h3><p>scasb scasw scasd</p><h4><span id="scasb">scasb</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vj9czorgj30hh05rjsp.jpg" alt="image.png"></p><p><strong>repne scasb</strong></p><pre><code class="language-asm">next:  if(cx == 0) goto done;  cmp al, es:[di]      di++; 当DF=1时，为di--      cx--  je done  goto nextdone:</code></pre><p>可实现求字符串长度的作用：</p><p>例子: 假定从地址1000:2000开始存放一个字符串，请计算该字符串的长度并存放到CX中。假定字符串以ASCII码0结束，字符串长度不包括0。</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vjexlo47j30ay01q3yn.jpg" alt="image.png"></p><pre><code class="language-asm">mov ax, 1000hmov es, axmov di, 2000h; ES:DI目标串mov cx, 0FFFFh; CX=最多找FFFF次mov al, 0; AL=待找的字符cld       ; DF=0，表示正方向repne scasb; again:not cx      ; 相当于cx=FFFF-cxdec cx;上述两条指令也可以替换成以下两条指令:;inc cx;not cx</code></pre><p><strong>repe scasb</strong></p><p>假定从地址1000:0000起存放以下字符串：</p><p>“###ABC”，</p><p>现要求跳过前面的#，把后面剩余的全部字符复制到2000:0000中。</p><p>假定es=1000h, di=0, cx=7, 则</p><pre><code class="language-asm">mov al, '#'cldrepe scasbdec di; ES:DI-&gt;&quot;ABC&quot;inc cx; CX=4push espop ds; DS=ESpush dipop si; SI=DImov ax, 2000hmov es, axmov di, 0rep movsb</code></pre><h4><span id="scasw">scasw</span></h4><h4><span id="scasd">scasd</span></h4><h3><span id="保存指令">保存指令</span></h3><p>stosb stosw stosd</p><h4><span id="stosb">stosb</span></h4><p>al</p><p><strong>stosb的操作过程如下:</strong></p><pre><code class="language-asm">es:[di] = ALdi++; DF=1时为di--</code></pre><h4><span id="rep-stosb">rep stosb</span></h4><h4><span id="stosw">stosw</span></h4><p>ax</p><h4><span id="rep-stosw"><strong>rep stosw</strong></span></h4><h4><span id="stosd">stosd</span></h4><p>eax</p><h4><span id="rep-stosd">rep stosd</span></h4><h4><span id="举例"><strong>举例</strong></span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vjog2629j30lk0bqq8j.jpg" alt="image.png"></p><h4><span id></span></h4><h4><span id="lodsb">lodsb</span></h4><ul><li>一般没有rep 前缀</li></ul><p><strong>操作过程</strong></p><p>AL=DS:[SI]</p><p>SI++;当DF=1时, 为SI–</p><p><strong>举例</strong></p><p>例: 设DS:SIà “##AB#12#XY”</p><p>且ES:DI指向一个空的数组, CX=11</p><p>通过编程过滤#最后使得ES:DI -&gt;“AB12XY”</p><p><strong>字符串过滤</strong></p><pre><code class="language-asm">cldagain:  lodsb; AL=DS:[SI], SI++    ; mov al, ds:[si]    ; inc si  cmp al, '#'  je  next  stosb; ES:[DI]=AL, DI++    ; mov es:[di], al    ; inc dinext:  dec cx  jnz again</code></pre><blockquote><p>大家写最后这次作业时，可以参考主页上的两个代码:<br>autotime.asm<br>key.asm</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_算数指令</title>
      <link href="/2022/12/07/%E6%B1%87%E7%BC%96-%E7%AE%97%E6%95%B0%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/12/07/%E6%B1%87%E7%BC%96-%E7%AE%97%E6%95%B0%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2><span id="加法指令add-inc-adc">加法指令：ADD, INC, ADC</span></h2><h3><span id="inc">INC</span></h3><p><strong>INC与ADD比较</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdr5cbr9j30me04x40y.jpg" alt="image.png"></p><ul><li>INC速度比较快</li><li>ADD影响CF（进位）标志位</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdsfsnvrj30of04mgne.jpg" alt="image.png"></p><p>inc操作后CF仍然保持原值</p><p><strong>该性质的作用：</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdv3k847j30i20aagou.jpg" alt="image.png"></p><h3><span id="adc-add-with-carry-带进位加">ADC: add with carry 带进位加</span></h3><p><strong>应用举例</strong></p><p>大数的加法运算</p><p>一</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdy2147ej30hu09ftcp.jpg" alt="image.png"></p><p>二</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ve258me9j30os0ddtgi.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ve2o5np6j30m70eh0vq.jpg" alt="image.png"></p><h2><span id="减法指令sub-sbb-dec-neg-cmp">减法指令：SUB SBB DEC NEG CMP</span></h2><h3><span id="dec">DEC</span></h3><p>decrement 自减，dec指令不影响CF</p><h3><span id="sbb">SBB</span></h3><p>subtract with borrow 带借位减</p><p><strong>应用举例</strong></p><p>大数的减法运算</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ve8w4hgwj30it087jua.jpg" alt="image.png"></p><h3><span id="neg">NEG</span></h3><p>negate 求相反数</p><p>会影响CF,ZF,SF等标志位</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vea8z37vj30la0cvjup.jpg" alt="image.png"></p><h3><span id="cmp">CMP</span></h3><p>cmp与sub的区别是cmp抛弃两数之差，仅保留标志位状态</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vedfniecj30ld0d40xz.jpg" alt="image.png"></p><h2><span id="比较跳转指令">比较跳转指令</span></h2><h3><span id="针对非符号数">针对非符号数</span></h3><h4><span id="ja-jb-jae-jbe">ja jb jae jbe</span></h4><p>依据CF和ZF的状态</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8veen0vbtj30p80cawj7.jpg" alt="image.png"></p><h3><span id="针对符号数">针对符号数</span></h3><h4><span id="jg-jl-jge-jle">jg jl jge jle</span></h4><p>依据SF和OF的状态</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vehnfvg5j30nh0d8wjj.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8velkiwhrj30ik07076m.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ves8vwmaj30oa0b9aei.jpg" alt="image.png"></p><p><strong>特殊情况</strong></p><ol><li>手动改sf或of或zf</li><li>两个负数相加<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8veubkxyxj30m204c75r.jpg" alt="image.png"><ol><li>但在减法跳转指令中不存在</li></ol></li></ol><p>SF表示结果为正</p><p>OF表示有无溢出</p><h2><span id="小数运算">小数运算</span></h2><p>fadd fsub fmul fdiv</p><p>运算后是IEE754格式，要转化后才能输出</p><p>由浮点处理器负责执行, 用法请参考主页intel指令集</p><p><strong>小数变量的定义:</strong></p><pre><code class="language-asm">pi dd 3.14; 32位小数,相当于floatr  dq  3.14159; 64位小数, 相当于double; q:quadruple 4倍的s  dt  3.14159265; 80位小数, 相当于long double</code></pre><p>在C语言中要输出long double的值需要使用&quot;%Lf&quot;格式</p><p>CPU内部一共有8个小数寄存器，分别叫做</p><p>st(0)、st(1)、…、st(7)</p><p>其中st(0)简称st</p><p>这8个寄存器的宽度均达到80位，相当于C语言中的</p><p>long double类型。</p><p>VC里面的long double类型已经退化成double类型。</p><p><strong>举例</strong></p><pre><code class="language-asm">;Turbo Debugger跟踪时，;点菜单View-&gt;Numeric Processor查看小数堆栈data segmentabc dd 3.14xyz dd 2.0; 若载入整数，fld-&gt;fildresult dd 0data endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   fld abc; 把3.14载入到小数堆栈--&gt;st(0)--&gt;st(1)fld会自动识别后跟参数的宽度，编译器会自动加上   fld xyz; 把2.0载入到小数堆栈--&gt;st(0)   fmul st, st(1); 两数相乘st(0)=st(0)*st(1)   fstp result; 保存结果到result，并弹出   fstp st      ; 弹出小数堆栈中残余的值   mov ah, 4Ch   int 21hcode endsend main</code></pre>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_指令</title>
      <link href="/2022/12/07/%E6%B1%87%E7%BC%96-%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/12/07/%E6%B1%87%E7%BC%96-%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2><span id="pushdfpopf">PUSHDF,POPF</span></h2><blockquote><p>背景：push pop 不能直接操作FL寄存器（实际上任何指令都不能）-</p></blockquote><ul><li><strong>应用举例</strong></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vbqne0qpj30jl05q40v.jpg" alt="image.png"></p><ul><li><strong>标志寄存器FL的相关指令</strong></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vbs33fb7j30aq08q77f.jpg" alt="image.png"></p><ul><li><p>要让TF=1（TF是FLAG的第八位)</p><ul><li>不存在相关指令<ul><li>因为它使用频率很低</li></ul></li></ul></li><li><p><strong>举例——让Flag的第八位清零</strong></p></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vbutdkbaj30k50ae0x1.jpg" alt="image.png"></p><ul><li><strong>32位系统中</strong><ul><li>寄存器EFL</li><li>pushfd&amp;popfd</li><li>此时pushf&amp;popf只控制EFL的低16位即FL</li></ul></li></ul><h2><span id="符号扩充指令cbw-cwd-cdq">符号扩充指令：CBW, CWD, CDQ</span></h2><blockquote><p>只针对符号数</p></blockquote><ul><li><strong>用途</strong></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vbz1i08kj30op05bgo2.jpg" alt></p><ul><li>对象<ul><li>cbw al-&gt; ax</li><li>cwd ax-&gt;dx:ax</li><li>cdq eax-&gt;edx:eax</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vcs8aidnj30nt0bmq82.jpg" alt="image.png"></p><p>负数左加F，正数右加0</p><ul><li><strong>应用举例</strong></li></ul><blockquote><p>主要为除法服务</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vd5dzrz7j30jl089tar.jpg" alt="image.png"></p><h2><span id="零扩充指令movzx">零扩充指令：movzx</span></h2><p>mov by zero extension</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vd79p796j30ig087mzh.jpg" alt="image.png"></p><ul><li>目标操作数和原操作数可以不相关</li><li>可以把八位直接扩充成32位</li></ul><h2><span id="符号扩充指令movsx">符号扩充指令：movsx</span></h2><ul><li>movsx ax，al ；相当于cbw</li><li>自此cbw等不太用了</li></ul><h2><span id="imul指令">imul指令</span></h2><h3><span id="第一类用法和mul一样">第一类用法：和mul一样</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdat4iitj30hx05vwg8.jpg" alt="image.png"></p><h3><span id="第二类用法可以包含2~3个操作数">第二类用法：可以包含2~3个操作数</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdbw8ckwj30m807279b.jpg" alt="image.png"></p><h2><span id="换码指令xlat">换码指令：XLAT</span></h2><blockquote><p>translate 也称查表指令</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdfz96c8j30ng09an18.jpg" alt="image.png"></p><ul><li><strong>应用举例</strong></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdkn7fsgj30gd09htbg.jpg" alt="image.png"><strong>实现十六进制的转化</strong></p><pre><code class="language-asm">.386 ; 表示程序中会用32位的寄存器data segment use16; use16表示偏移使用16位t db &quot;0123456789ABCDEF&quot;x dd 2147483647data endscode segment use16assume cs:code, ds:datamain:   mov ax, data    ;\   mov ds, ax      ; / ds:bx-&gt;t[0]   mov bx, offset t;/   mov ecx, 8   mov eax, xnext:   rol eax, 4   push eax   and eax, 0Fh   xlat   mov ah, 2   mov dl, al   int 21h   pop eax   sub ecx, 1   jnz next   mov ah, 4Ch   int 21hcode endsend main</code></pre><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8vdnkfnyzj30dx0g0gp5.jpg" alt="image.png"></p><blockquote><p>XLAT代替了这么多行代码</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_电路反馈类型判断</title>
      <link href="/2022/12/05/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-%E7%94%B5%E8%B7%AF%E5%8F%8D%E9%A6%88%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD/"/>
      <url>/2022/12/05/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-%E7%94%B5%E8%B7%AF%E5%8F%8D%E9%A6%88%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_电路反馈类型判断">电基_ 第6章 _电路反馈类型判断</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="反馈的类型">反馈的类型</span></h2><h3><span id="反馈放大器的类型">反馈放大器的类型</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tca91hsgj30jf0f0juv.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tcbg6x4sj30kr0f0wg6.jpg" alt="image.png"></p><h3><span id="电压串联负反馈">电压串联负反馈</span></h3><ul><li>负反馈</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tcbvjxj1j30k30efwhe.jpg" alt="image.png"></p><h3><span id="电压并联负反馈">电压并联负反馈</span></h3><ul><li>负反馈</li><li>把输出电压接地，反馈消失，故是电压反馈</li><li>把输入源部分断路，反馈消失，故是并联反馈</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tcdp3vgkj30le0e40xn.jpg" alt="image.png"></p><h3><span id="电流串联负反馈">电流串联负反馈</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tcnubos6j30l30cln0y.jpg" alt="image.png"></p><h3><span id="电流并联负反馈">电流并联负反馈</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tczacf0oj30ld0a0dia.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_CMOS推挽放大电路</title>
      <link href="/2022/12/05/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-CMOS%E6%8E%A8%E6%8C%BD%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/"/>
      <url>/2022/12/05/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-CMOS%E6%8E%A8%E6%8C%BD%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_cmos推挽放大电路">电基_ 第6章 _CMOS推挽放大电路</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="增益公式推导">增益公式推导</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tbummh77j30km0f2di8.jpg" alt="image.png"></p><h2><span id="直流扫描仿真">直流扫描仿真</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tbw88y5vj30jz0efgn3.jpg" alt="image.png"></p><h3><span id="改变宽长比">改变宽长比</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tbxua99nj30jf0cpq4d.jpg" alt="image.png"></p><ul><li>因为跨导不同，所以选择不对称</li></ul><h2><span id="ac仿真">AC仿真</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tbzdi57kj30k60dcwgk.jpg" alt="image.png"></p><h2><span id="瞬态仿真小信号">瞬态仿真（小信号）</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tbyn27o2j30kn0eqq52.jpg" alt="image.png"></p><h2><span id="瞬态仿真大信号">瞬态仿真（大信号）</span></h2><ul><li>反相器（非门）</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tc0kgzwoj30l50efmzn.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_CMOS二级运放电路</title>
      <link href="/2022/12/02/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-CMOS%E4%BA%8C%E7%BA%A7%E8%BF%90%E6%94%BE%E7%94%B5%E8%B7%AF/"/>
      <url>/2022/12/02/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-CMOS%E4%BA%8C%E7%BA%A7%E8%BF%90%E6%94%BE%E7%94%B5%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_cmos二级运放电">电基_ 第6章 _CMOS二级运放电</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="cmos二级运放电路">CMOS二级运放电路</span></h2><ul><li>单级运算放大器<ul><li>结构简单，响应速度快，功耗低</li><li>常用于设计高速宽带运放</li><li>增益相对较低</li></ul></li><li>二级运算放大器<ul><li>两个放大级级联，提高增益</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pcjobe4qj30j80ds0vx.jpg" alt="image.png"></p><h2><span id="二级运放原理框图">二级运放原理框图</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pcksfkymj30it0bd0u6.jpg" alt="image.png"></p><h2><span id="二级运放电路">二级运放电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pclum5qmj30k60c4412.jpg" alt="image.png"></p><h3><span id="电容c~c~作用">电容C~C~作用</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pcpiniquj30ki0dqdix.jpg" alt="image.png"></p><ul><li>相位裕度 φ~m~<ul><li>一般要求大于60度</li><li>保证反馈系统稳定工作</li></ul></li></ul><h2><span id="二级运放指标">二级运放指标</span></h2><ul><li>增益：&gt;5000（74dB）</li><li>单位增益带宽（增益带宽积）：&gt;10MHz</li><li>共模抑制比：&gt;80dB</li><li>输出电压摆幅：±2V</li><li>输入共模范围：-1~2V</li><li>负载电容：10pF</li><li>压摆率：&gt;15V/μs</li><li>功耗：&lt;2mW</li></ul><h2><span id="二级运放电路参数">二级运放电路参数</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pcujyrgej30gl0bvjto.jpg" alt="image.png"></p><h2><span id="二级运放网表文件">二级运放网表文件</span></h2><blockquote><p>设计的子电路，便于后续测试</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pcw7vq7vj30k80fn7cl.jpg" alt="image.png"></p><h3><span id="adaspdps参数">AD/AS/PD/PS参数</span></h3><blockquote><p>用于计算MOS管的寄生电容</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pcysv8ogj30j00cxwhu.jpg" alt="image.png"></p><ul><li>沟道长度1um</li></ul><h2><span id="开环测试电路">开环测试电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pd0u1nlvj30jv0e1n1h.jpg" alt="image.png"></p><ul><li>op仿真首先确认所有MOS管工作在饱和区</li></ul><h3><span id="功耗估算">功耗估算</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pd625kszj30lg0b778a.jpg" alt="image.png"></p><h3><span id="增益估算">增益估算</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pd8gjneej30la0c17bm.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pd91qcbgj30h80cu3zz.jpg" alt="image.png"></p><h3><span id="输出电压摆幅">输出电压摆幅</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pi3v0ts7j30is09bq4a.jpg" alt="image.png"></p><h3><span id="输入失调电压">输入失调电压</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pi7vhv2zj30j70afdh8.jpg" alt="image.png"></p><ul><li>电路其实并不对称，输入失调电压实际会更大</li></ul><h3><span id="开环增益">开环增益</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pndgoc5uj30k80ck0v0.jpg" alt="image.png"></p><h2><span id="单位增益测试电路">单位增益测试电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pnekc9jaj30ln0ecdko.jpg" alt="image.png"></p><ul><li>PWL：奇数点时间，偶数点电压</li></ul><h3><span id="瞬态仿真压摆率">瞬态仿真——压摆率</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pnkrudfyj30kc0erdko.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pnl2zg1bj30h80badh8.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pnlcaxtkj30ju0e7juw.jpg" alt="image.png"></p><h2><span id="cmrr测试电路">CMRR测试电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pnmjyt20j30ll0esq83.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pnujvpamj30jl0d4766.jpg" alt="image.png"></p><h2><span id="cmos二级运放指标">CMOS二级运放指标</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pnuy1rbrj30hd0d1adj.jpg" alt="image.png"></p><h2><span id="补充">补充</span></h2><h3><span id="负反馈放大器的稳定性">负反馈放大器的稳定性</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pnvnyoldj30m50dstck.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8podfbk5oj30l60bfjub.jpg" alt="image.png"></p><h3><span id="相位裕量与增益裕量">相位裕量与增益裕量</span></h3><h4><span id="系统稳定的两种情况">系统稳定的两种情况</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8poetxwtuj30lg0dnq6n.jpg" alt="image.png"></p><h3><span id="一阶系统绝对稳定">一阶系统绝对稳定</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pogsedqyj30jb078tah.jpg" alt="image.png"></p><h3><span id="二阶系统稳定性">二阶系统稳定性</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pohh7b9qj30lp0buae8.jpg" alt="image.png"></p><h3><span id="极点分离补偿技术">极点分离补偿技术</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pol539alj30lm0cpq99.jpg" alt="image.png"></p><p><strong>原理</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ponrr9qtj30k90dgq5v.jpg" alt="image.png"></p><h3><span id="共源放大电路高频响应">共源放大电路高频响应</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8popjdhlyj30kx0f8jv5.jpg" alt="image.png"></p><h3><span id="二级运放设计方程">二级运放设计方程</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8poqv6xxcj30lo0f8zp2.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8prjm922wj30l80e8105.jpg" alt="image.png"></p><h3><span id="手工设定单端输出二级运算放大器的初始参数">手工设定单端输出二级运算放大器的初始参数</span></h3><h4><span id="设计方程">设计方程</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8prosq0mwj30mf0drtdt.jpg" alt="image.png"></p><h4><span id="确定参数">确定参数</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8proc4mh0j30jt0cg0uo.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8prpv9xnyj30mi0cqtca.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8prrclygtj30ko0bo0uw.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_MOS晶体管偏置电路</title>
      <link href="/2022/12/01/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E5%81%8F%E7%BD%AE%E7%94%B5%E8%B7%AF/"/>
      <url>/2022/12/01/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E5%81%8F%E7%BD%AE%E7%94%B5%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_mos晶体管偏置电路">电基_ 第6章 _MOS晶体管偏置电路</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="偏置电流源电路">偏置电流源电路</span></h2><ul><li>集成电路一般用电流源进行偏置<ul><li>电流源也常作为有源负载</li></ul></li><li>电流源的电流决定MOS管的直流电流<ul><li>即MOS管的直流工作点</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oqg2v64uj308k0didgf.jpg" alt="image.png"></p><h2><span id="电流源与电流阱">电流源与电流阱</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oqh1slc9j30hc06uq3o.jpg" alt="image.png"></p><ul><li>电流源一般分为电流阱（current sink）和电流源（current source）<ul><li>一般统称为电流源</li></ul></li><li>理想电流源：电流与两端电压无关，相当于输出电阻无穷大</li><li><strong>工作在饱和区的MOS管，输出电流和输出电压几乎无关，可以用于实现电流源</strong></li></ul><h2><span id="nmos电流阱">NMOS电流阱</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oqjynn6aj30of0ef41i.jpg" alt="image.png"></p><h2><span id="pmos电流源">PMOS电流源</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oqqe4p1oj30ou0istd7.jpg" alt="image.png"></p><blockquote><p>这个脑子要转好多弯才能理解啊aaaaaaa</p></blockquote><h2><span id="电流镜">电流镜</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8or64xk7lj30of08cwh9.jpg" alt="image.png"></p><h2><span id="nmos电流镜电路">NMOS电流镜电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8or7g441ij30o00edwht.jpg" alt="image.png"></p><ul><li>4 V 7.2 mA</li><li>GD连在一起的接法也称二极管接法（diode-connected）</li></ul><h4><span id="工艺相同v~t~宽长比相等">工艺相同（V~T~），宽长比相等</span></h4><p><strong>输出镜像电流</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ord08elij30kh0c5jti.jpg" alt="image.png"></p><h4><span id="工艺相同v~t~宽长比不等">工艺相同（V~T~），宽长比不等</span></h4><p><strong>输出比例镜像</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oreflw0gj30mh0d2goa.jpg" alt="image.png"></p><h2><span id="多输出电流镜电路">多输出电流镜电路</span></h2><h4><span id="多个电流源">多个电流源</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8orfofvnjj30n60e341m.jpg" alt="image.png"></p><h4><span id="多个电流源和电流阱">多个电流源和电流阱</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8orislym7j30oj0e7tcl.jpg" alt="image.png"></p><h2><span id="二级运放偏置电路">二级运放偏置电路</span></h2><h4><span id="电路结构">电路结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8orl57mc2j30mr0g1gq9.jpg" alt="image.png"></p><h4><span id="仿真代码">仿真代码</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ornm8uppj30lx0ezn4p.jpg" alt="image.png"></p><h4><span id="仿真结果">仿真结果</span></h4><p>与实际分析略有偏差</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8orpq8f71j30p60e54aq.jpg" alt="image.png"></p><h4><span id="分析">分析</span></h4><ul><li>电流源的输出电阻越大，越接近理想电流源</li><li>增大M8/M5/M7的L，同时增大W，保持W/L不变，可以在保持电流比例关系不变的同时，提高输出电阻</li></ul><blockquote><p>太刺激了这次课</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第0章_如何仿真</title>
      <link href="/2022/11/30/%E7%94%B5%E5%9F%BA-%E7%AC%AC0%E7%AB%A0-%E5%A6%82%E4%BD%95%E4%BB%BF%E7%9C%9F/"/>
      <url>/2022/11/30/%E7%94%B5%E5%9F%BA-%E7%AC%AC0%E7%AB%A0-%E5%A6%82%E4%BD%95%E4%BB%BF%E7%9C%9F/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第0章-_如何仿真">电基_ 第0章 _如何仿真</span></h1><h2><span id="hspice">Hspice</span></h2><h3><span id="sp代码讲解">sp代码讲解</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ngyy8tm6j30k00e90x9.jpg" alt="image.png"></p><ul><li><p>.title n08_DC</p><ul><li>文件名</li></ul></li><li><p>M1 2 1 0 0</p><ul><li>D G S B</li><li>0 是地</li></ul></li><li><p>n08</p><ul><li>M1 的型号</li><li>WL宽长</li></ul></li><li><p>VDS</p><ul><li>电压源</li></ul></li><li><p>.op</p><ul><li>选择直流仿真</li></ul></li><li><p>.MODEL n08</p><ul><li>具体说明该型号芯片的参数</li></ul></li><li><p>.end</p></li></ul><h3><span id="仿真">仿真</span></h3><ol><li>复制sp文件路径并仿真后，打开.lis文件<ul><li>op仿真的有些结果就在.lis文件里</li></ul></li><li>使用avanwave打开.sw0文件，查看波形</li><li>代码出问题检查.lis文件</li><li>引用.18工艺<ol><li>.lib '…\models\ms018.lib’tt</li><li>当前目录往上一级</li><li>tt 典型</li></ol></li></ol><h2><span id="matlab">Matlab</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oz5qbdj6j30bn06kgmh.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>户外拓展_绳结技术</title>
      <link href="/2022/11/30/%E6%88%B7%E5%A4%96%E6%8B%93%E5%B1%95-%E7%BB%B3%E7%BB%93%E6%8A%80%E6%9C%AF/"/>
      <url>/2022/11/30/%E6%88%B7%E5%A4%96%E6%8B%93%E5%B1%95-%E7%BB%B3%E7%BB%93%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2><span id="绳子分类">绳子分类</span></h2><ol><li>动力绳<ol><li>延展性高</li></ol></li><li>静力绳<ol><li>无延展性</li><li>救援常用</li></ol></li></ol><h2><span id="户外八大绳结">户外八大绳结</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8n469kwunj30l80eywjh.jpg" alt="image.png"></p><h3><span id="布林结绳结之王">布林结——绳结之王</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8n48c39t9j30k90dkads.jpg" alt="image.png"></p><h3><span id="简单-平-接绳-双套">简单 平 接绳 双套</span></h3><h4><span id="优质绳结">优质绳结</span></h4><ol><li>易结</li><li>易解</li><li>结实</li><li>结目小</li></ol><h4><span id="双重单结">双重单结</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8n4q4xe30j30q40eawkn.jpg" alt="image.png"></p><h4><span id="多重单结">多重单结</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8n4p2dep4j30m20e9ag1.jpg" alt="image.png"></p><ul><li>边打结边整理</li></ul><h4><span id="平结">平结</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8n4r5sun6j30v70g3ahe.jpg" alt="image.png"></p><ul><li>注意缠绕方向</li><li>适用绳索粗细相同</li></ul><h4><span id="接绳结">接绳结</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8n52id9s0j30n50i2wkr.jpg" alt="image.png"></p><ul><li>适用绳索粗细不同</li></ul><h4><span id="双套结">双套结</span></h4>]]></content>
      
      
      <categories>
          
          <category> 通识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_HW03</title>
      <link href="/2022/11/29/%E6%B1%87%E7%BC%96-HW03/"/>
      <url>/2022/11/29/%E6%B1%87%E7%BC%96-HW03/</url>
      
        <content type="html"><![CDATA[<ul><li>用了.386后偏移地址都是32位了，不能用16位寄存器di来记录偏移地址</li></ul>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_00_知识补充</title>
      <link href="/2022/11/29/%E6%B1%87%E7%BC%96-00-%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85/"/>
      <url>/2022/11/29/%E6%B1%87%E7%BC%96-00-%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1><span id="汇编_-00-_知识补充">汇编_ 00 _知识补充</span></h1><h2><span id="模式定义">模式定义</span></h2><h3><span id="指定使用的指令集">指定使用的指令集</span></h3><p>代码中第一部分是模式和格式的定义语句:</p><pre><code class="language-text">.386 .model     flat, stdcall option casemap: none</code></pre><p>这些指令定义了程序使用的指令集、工作模式和格式。</p><p><strong>.386</strong> 语句是汇编的伪指令，它在低版本的宏汇编中就已经存在，类似的指令还有 <strong>.8086，.186，.286，.386/.386p，.486/.486p</strong> 和 <strong>.586/.586p</strong> 等。在 <code>x86</code> 的汇编中默认使用的是 <strong>8086</strong> 指令集。上古那会如果在源程序中写入 <strong>80386</strong> 所特有的指令或使用 <strong>32</strong> 位的寄存器就会报错，为了在 <em>DOS</em> 环境下进行保护模式编程或仅为了使用 <strong>32</strong> 位寄存器，常在 <em>DOS</em> 的汇编中使用 <strong>.386</strong> 来定义。而 <strong>Win 32</strong> 环境工作在 <strong>80386</strong> 及以上的处理器中，所以 <strong>.386</strong> 这一句是不可忽略的。</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/452648203">参考博客</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_01_最大子列和</title>
      <link href="/2022/11/28/DS-01-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%88%97%E5%92%8C/"/>
      <url>/2022/11/28/DS-01-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%88%97%E5%92%8C/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电基_第3章_数据转换电路</title>
      <link href="/2022/11/24/%E7%94%B5%E5%9F%BA-%E7%AC%AC3%E7%AB%A0-%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%E7%94%B5%E8%B7%AF/"/>
      <url>/2022/11/24/%E7%94%B5%E5%9F%BA-%E7%AC%AC3%E7%AB%A0-%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%E7%94%B5%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第3章-_数据转换电路">电基_ 第3章 _数据转换电路</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="采样与比较器">采样与比较器</span></h2><h3><span id="采样保持电路开关电容">采样/保持电路：开关+电容</span></h3><h4><span id="理想情况">理想情况</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tdi3a7ytj30ea05c75h.jpg" alt="image.png"></p><h4><span id="nmos晶体管代替理想开关">NMOS晶体管代替理想开关</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g2u3mxlaj308n0710tz.jpg" alt="image.png"></p><ul><li><p><strong>栅极G高电平：MOS管导通</strong></p></li><li><p><strong>栅极G低电平：MOS管截止</strong></p></li></ul><h4><span id="采样相">采样相</span></h4><p>开关S接通→导通电阻为零→电路充电时间常数为零，电容上电压VC (即输出电压Vout)跟踪输入电压Vin。即开关导通时，输出波形跟踪输入波形变化；</p><h4><span id="保持相">保持相</span></h4><p>开关S断开，断开电阻近似为无穷大，输出与输入回路隔离，不管输入波形如何变，输出波形保持不变</p><h4><span id="优点">优点：</span></h4><p>简单，等效为RC电路</p><h4><span id="缺点"><strong>缺点：</strong></span></h4><p>MOS开关管的非理想效应，限制了S/H电路的采样精度；电路没有足够的驱动能力驱动后级负载</p><h3><span id="采样保持电路开关电容运放">采样/保持电路：开关+电容+运放</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g2w8n5vcj30an06cmxx.jpg" alt="image.png"></p><ul><li><p>VG高电平：MOS管导通，Vout=Vin，输出跟随输入变化，并向电容C充电；</p></li><li><p>VG低电平：MOS管截止，Vout保持断开瞬间的输入信号。</p></li><li><p>MOS开关管的非理想效应、运放的非理想效应限制了S/H电路的精度和速度。</p></li></ul><h3><span id="奈奎斯特采样原理">奈奎斯特采样原理</span></h3><ul><li>如果要通过采样数据重构一个信号xi，则电路的取样频率f s必须大于该信号最高频率fmax的两倍。<strong>这样的采样称为奈奎斯特采样</strong></li><li>需要指出的是，实际采样电路的采样频率往往远大于奈奎斯特采样值，约为奈奎斯特采样理论值的1.5到10倍，或达到输入信号最高频率的3到20倍。</li><li>而<strong>过采样</strong>转换电路的取样频率要高出奈奎斯特频率16~512倍。</li></ul><h3><span id="比较器">比较器</span></h3><h4><span id="电压比较器amp电流比较器">电压比较器&amp;电流比较器</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g343lv0yj30aa05l3yv.jpg" alt="image.png"></p><h4><span id="比较器电路">比较器电路</span></h4><ul><li>单门限电压比较器</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g353yu12j307408nwex.jpg" alt="image.png"></p><ul><li>过零比较器</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g36bnle7j30cm07i3yp.jpg" alt="image.png"></p><ul><li>改变翻转电压</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tdqvh13pj30la0ck0vo.jpg" alt="image.png"></p><h4><span id="比较器特性参数">比较器特性参数</span></h4><ul><li><p>增益</p></li><li><p>精度</p><ul><li>实现反转的最小输入电压</li></ul></li><li><p>失调电压</p><ul><li>现实中比较器，输入之差达到某个电压值V~OS~时，输出才发生变化。这个电压值V~OS~定义为比较器的失调电压（offset）。</li><li>比较器的失调电压可能为正值，也可能为负值。由于晶体管失配、工艺和输入电压等参数的影响，不同比较器的失调电压随机改变。</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tdtblytxj30k50c7tdc.jpg" alt="image.png"></p><ul><li>摆率</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g3eccahgj3082081t8y.jpg" alt="image.png"></p><p><strong>压摆率</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g3eunj2aj303x026t8n.jpg" alt="image.png"></p><h2><span id="dac-数模转换器">DAC 数/模转换器</span></h2><h3><span id="构建dac的基本思想">构建DAC的基本思想</span></h3><ul><li>V~ref~（参考电压，要非常准确）由带隙基准电压源产生，非常准确</li><li>码字<ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tdye4ha5j30kj0c3wk0.jpg" alt="image.png"></li><li>B的另一种表示<ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8te0urcohj30d70503zs.jpg" alt="image.png"></li></ul></li></ul></li></ul><h4><span id="dac的框图表示">DAC的框图表示</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8te694h2qj30lv0fd788.jpg" alt="image.png"></p><h4><span id="构建dac的基本思想">构建DAC的基本思想</span></h4><p>(1) 用一个解码网络来分配各个位的权重，将每一位按其权重的大小转换成相应</p><p>的模拟量；</p><p>(2) 将每一位数字量转换成的模拟量相加，即可得到与数字量成正比的总模拟量。</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8te24nhgfj30e404275m.jpg" alt="image.png"></p><h3><span id="adcdac输入输出特性曲线">ADC/DAC输入输出特性曲线</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8te7p51hcj30mj0g2dm4.jpg" alt="image.png"></p><ul><li>理想无限比特ADC/DAC：任意输入模拟量，都可以用数字表示，并恢复为数字模拟输出（斜线）实际是折线或点</li><li>量化误差 A-&gt;D-&gt;A‘的损失</li></ul><h3><span id="dac输入输出特性曲线">DAC输入输出特性曲线</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tec4nnpjj30m10fmn22.jpg" alt="image.png"></p><ul><li>LSB——least significant byte</li><li>FS——full<ul><li>很多时候认为参考电压就是满幅输出</li></ul></li></ul><h3><span id="转换器的量化误差不可避免">转换器的量化误差（不可避免）</span></h3><ul><li>A-&gt;D 存在输入模拟量变化而输出数字量不变<ul><li>受量化位数所限</li></ul></li><li>D-&gt;A 输入数字量离散，对应输出模拟量也离散</li><li>V1 V2之间存在误差</li><li>输入模拟量不同，量化误差也不同</li></ul><h3><span id="量化噪声">量化噪声</span></h3><blockquote><p>输入模拟量不同，量化误差也不同</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8teh3tc7nj30m40ddae4.jpg" alt="image.png"></p><ul><li>用斜线表示，即无限比特DAC的模拟输出-有限比特DAC的模拟输出</li></ul><h3><span id="dac特性参数">DAC特性参数</span></h3><ul><li><strong>信噪比</strong><ul><li>量化位数越多，信噪比越高</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8telqpdiwj30me0fntdx.jpg" alt="image.png"></p><ul><li><strong>分辨率</strong><ul><li>LSB</li></ul></li><li><strong>失调误差</strong>（offset error）<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8teqfd6ylj30an08cjso.jpg" alt="image.png"><ul><li>输入码字全为0时，输出模拟量与理想值之间的差异</li><li>可通过垂直平移特性曲线消除</li><li>一般用LSB表示</li></ul></li><li><strong>增益误差</strong><ul><li>先同一减去失调误差</li><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8terzy62oj30ik0afta8.jpg" alt="image.png"></li></ul></li><li><strong>微分非线性</strong>（DNL）</li><li><strong>积分非线性</strong>（INL）</li><li><strong>单调性</strong></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8teva97m9j30m30dbn1w.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tewosio2j309b046aav.jpg" alt="image.png"></p><ul><li>其他</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tf1h203oj30kk0dctbj.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tfkptvc9j30kf09gtac.jpg" alt="image.png"></p><h3><span id="dac的三大结构">DAC的三大结构</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tfmyfu8tj30lw0d7gos.jpg" alt="image.png"></p><h4><span id="电阻分压型">电阻分压型</span></h4><hr><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tfnhimgjj30ms0e17bo.jpg" alt="image.png"></p><h4><span id="电阻网络型">电阻网络型</span></h4><hr><p><strong>1. 权电阻网络型</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tfpyms0ej30lu0fc78x.jpg" alt="image.png"></p><p><strong>基于DAC的任意波形发生器</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tftn99qwj30m00f6jwp.jpg" alt="image.png"></p><p><strong>2.倒T型电阻网络DAC</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tfubcd6sj30lq0dhgqc.jpg" alt="image.png"></p><p>缺点-&gt;优点</p><blockquote><p>好聪明啊这个！</p></blockquote><h4><span id="电流舵型">电流舵型</span></h4><hr><p><strong>1. 二进制加权电流舵型DAC</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tg1jjsakj30mh0dhtcw.jpg" alt="image.png"></p><ul><li>直接用电流源而不是电阻</li><li>缺点：<ul><li>电流响应速度不同，产生毛刺</li><li>位数多的话，电流源差距很大，镜像电流源设计不好，宽长比差距大</li></ul></li></ul><p>举例：</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tg65hx51j30ho0d8dhi.jpg" alt="image.png"></p><p><strong>2. 温度计码电流舵型</strong></p><p><strong>温度计码</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tg7hybo1j30li0fmq93.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tg8n0yprj30mf0fcn2f.jpg" alt="image.png"></p><ul><li>011-&gt;100只要一个开关切换</li></ul><p>举例：<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tg9zfxvej30j10ejgo7.jpg" alt="image.png"></p><p><strong>3. 分段式电流舵型DAC</strong></p><blockquote><p>兼顾上两者优点</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tgat4b20j30j20fidj2.jpg" alt="image.png"></p><p>举例：</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tgc18wh6j30i10bn76m.jpg" alt="image.png"></p><h2><span id="adc-模数转换器">ADC 模/数转换器</span></h2><h3><span id="adc研究中的两个问题">ADC研究中的两个问题</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thh457clj30ml0ejwlg.jpg" alt="image.png"></p><ol><li>采样频率<ol><li>见下”奈奎斯特采样定理“</li></ol></li><li>量化位数<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thi7rtsbj30mi0c5q8q.jpg" alt="image.png"></li></ol><h3><span id="adc基本架构">ADC基本架构</span></h3><h4><span id="前置滤波器">前置滤波器</span></h4><blockquote><p>滤除模拟输入信号中的高频分量，避免混叠</p></blockquote><ul><li>量化器<ul><li>对模拟信号量化</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8th8nckg5j30k206zq3l.jpg" alt="image.png"></p><ul><li>编码器<ul><li>根据需要，将量化结果以特定格式输出数字码</li></ul></li></ul><h4><span id="采样保持电路">采样保持电路</span></h4><blockquote><p>对模拟输入信号采样并保持（在相应的固定值上），以便后级电路量化处理</p></blockquote><h4><span id="频率混叠现象"><strong>频率混叠现象</strong></span></h4><ul><li>奈奎斯特采样定理<ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thb97e8dj30md0dmdj2.jpg" alt="image.png"></li></ul></li></ul><h3><span id="adc的分类">ADC的分类</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thopx1l3j30ln090tb9.jpg" alt="image.png"></p><h3><span id="adc特性参数">ADC特性参数</span></h3><ul><li><p>分辨率</p><ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thq6p39rj30le0940u3.jpg" alt="image.png"></li></ul></li><li><p>失调误差</p><ul><li>输出00……01，实际模拟输入与理想值的偏差</li></ul></li><li><p>增益误差</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thrnz8g9j30ly0acju3.jpg" alt="image.png"></p></li><li><p>微分非线性</p></li><li><p>积分非线性</p></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thslb4e1j30ls0dogp3.jpg" alt="image.png"></p><ul><li>其他</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thtj7q2bj30kx0dvaeu.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thu1cqnqj30lz0dd0wj.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8thwwuv49j30lb09qtby.jpg" alt="image.png"></p><h3><span id="sar-adc-及-adc参数表示">SAR ADC 及 ADC参数表示</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ti0f6uqej30lg0dcae4.jpg" alt="image.png"></p><ul><li>采样率低，分辨率中到高<ul><li>功耗低，尺寸小</li></ul></li><li>抗混叠前置滤波</li><li>采样保持电路<ul><li>可以嵌入DAC内部</li></ul></li></ul><h4><span id="工作原理">工作原理</span></h4><blockquote><p>逐次逼近</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ti36m580j30lr0cin18.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ti415ppsj30lz0cgagq.jpg" alt="image.png"></p><p>举例：</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ti5k3sr0j30mc0cc7aq.jpg" alt="image.png"></p><h4><span id="特点及应用场合">特点及应用场合</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ti6y16rcj30hy0c2gpe.jpg" alt="image.png"></p><ul><li>转换速率低</li><li>精度高</li><li>只用一个比较器</li><li>功率随采样速率改变</li></ul><h4><span id="3位-sar-adc-仿真电路">3位 SAR ADC 仿真电路</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ti89l001j30kz0d2q9b.jpg" alt="image.png"></p><p><strong>仿真结果</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ti9dspetj30gf0fdad9.jpg" alt="image.png"></p><h3><span id="flash-adc全平行adc">Flash ADC（全平行ADC）</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tibjlbxpj30lz0dtdjs.jpg" alt="image.png"></p><ul><li>双相非交叠时钟</li></ul><h4><span id="工作原理">工作原理</span></h4><p><strong>结构</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tiemdbf4j30mb0cuq7o.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tig9ihbuj30aj075wfg.jpg" alt="image.png"></p><p><strong>输入输出</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tigiccmoj30lq0feq8h.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tiiv24ldj30i90c8jtd.jpg" alt="image.png"></p><h4><span id="比较器行为级模型">比较器行为级模型</span></h4><blockquote><p>行为级：只关心外部输入输出，对内部不关心</p></blockquote><ul><li>非理想因素主要考虑失调电压V~OS~</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tikvf6d8j30id05uabk.jpg" alt="image.png"></p><ul><li>simulink模型<ul><li>没有实际电路，仿真快</li><li>看非理想因素对结果的影响</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tilbrwvkj30le06p755.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tiqeva6bj30kv0detbu.jpg" alt="image.png"></p><p>使用matlab仿真</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tiztujs5j30lh0cvn2j.jpg" alt="image.png"></p><ul><li>输出频谱代码另外下载（ADC output spectrum），没跟教材附录一起</li></ul><h3><span id="流水线adc">流水线ADC</span></h3><h4><span id="数据转换思路">数据转换思路</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tj5zt90yj30lh0d5n2j.jpg" alt="image.png"></p><p>举例</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u19oiywnj30km0bmn0r.jpg" alt="image.png"></p><ul><li>每一级的操作和Flash ADC 一样</li><li>最后一级可以做得简单一点（就是一个Flash ADC）</li><li>前面几级在Flash ADC 的基础上放大，然后产生一个输出</li></ul><h4><span id="基本架构">基本架构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u1g54n7kj30cl08g0u0.jpg" alt="image.png"></p><ul><li><p>延时对准</p><ul><li>前级等后级，全部出来了再一起输出</li></ul></li><li><p><strong>数字校准</strong></p></li><li><p>带隙基准电路</p><ul><li>提供稳定参考电压V~ef~</li></ul></li><li><p>时钟产生电路</p><ul><li>产生两相非交叠时钟 non-overlapping two-phase clock</li><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u1fahbdsj30hg06wq40.jpg" alt="image.png"></li><li>不能同时高电平，可以同时低电平</li><li>可以认为K1a和K1b没有区别</li><li>如何控制<ul><li>高电平正在工作产生比特</li><li>低电平不产生比特</li><li>控制相邻两级相反状态工作</li></ul></li></ul></li><li><p>S/H</p><ul><li>对输入采样并保持</li></ul></li><li><p>子转换级</p><ul><li>中间级+最后级（Flash ADC）</li><li>在两相非交叠时钟控制下，偶数级和奇数级的工作模式交替进行<ul><li>偶数级工作在保持模式时，奇数级对前一级输出进行采样量化，量化结果为<em>k</em>i个比特</li><li>反之亦然</li></ul></li><li>各子转换级得到的数据可以被并行处理</li><li><strong>流水线ADC转换速率可以很高</strong></li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u1trq100j30bu09ugn5.jpg" alt="image.png"></p><ul><li>sub ADC<ul><li>将本级（第i级）输入V~in,i~量化为ki个比特</li></ul></li><li>MDAC<ul><li>实现采样保持、 DAC、减法、余量放大功能</li><li>S/H：对输入Vin,i采样保持</li><li>Sub DAC：将ki个比特转换为模拟量VDAC</li><li>余量 = V~in,i~ – V~DAC~</li><li>余量放大：放大2^ki-1^倍，输出（至后级）</li></ul></li><li>最后级<ul><li>不需要产生余量，因此只包含ADC（相当于Sub ADC）</li></ul></li></ul><h4><span id="流水线adc转换示例">流水线ADC转换示例</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u21u2vh1j30jw0dj497.jpg" alt="image.png"></p><p><strong>假设参考电压存在误差</strong></p><p>负偏差</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u2jep1dhj30j20dc7f0.jpg" alt="image.png"></p><ul><li>输入失调电压可正可负</li></ul><p>正偏差</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u2t7ykoxj30l40cpgw0.jpg" alt="image.png"></p><p><strong>增大各级输入输出范围后的余量输出</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u324vak0j30ky0crdqo.jpg" alt="image.png"></p><ul><li><p>仅仅增大输入输出范围仍不可行</p></li><li><p><strong>1bit/级不可行！</strong></p></li></ul><p><strong>放大倍数减少</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u3936m1cj30iu0epaey.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u39bzcjzj30j60etjwu.jpg" alt="image.png"></p><p><strong>1.5bit/级余量输出</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u3h70txxj30kh0eoahg.jpg" alt></p><p><strong>数字矫正</strong></p><ul><li>数字冗余位校正可大大降低每一级Sub ADC对比较器的要求</li><li>1.5bit/级<ul><li>Sub ADC使用2个比较器，可输出00、01、10三种编码</li></ul></li><li>N.5位冗余位校正<ul><li>该级（第 i 级）产生N+1位，余量放大2^N^倍</li><li>有效分辨率：N位</li><li>多余的1位：使后一级（第i+1级）有额外的范围进行数字校正</li><li>Sub ADC使用2^N^-2个比较器，输出除全1以外的编码</li><li>较多采用1.5位冗余位校正 -&gt;1.5bit/级</li></ul></li><li>1.5bit/级<ul><li>Sub ADC使用2个比较器，可输出00、01、10三种编码</li></ul></li></ul><p><strong>数字矫正算法</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u44m2x8ej30jq0cqtdx.jpg" alt="image.png"></p><p><strong>数字矫正示例</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u48ifcxmj30jm0ekk1j.jpg" alt="image.png"></p><p><strong>存在正误差时</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u4ers9d1j30jk0ch48j.jpg" alt="image.png"></p><ul><li>可以将一定范围内的偏差纠正</li><li>但是不能偏差到边上的参考电压</li></ul><h4><span id="15bit级结构">1.5bit/级结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u4lwx917j30kt0c7gpq.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8u4pm9e2jj30l60d1796.jpg" alt="image.png"></p><p><strong>仿真文件3.5.4</strong></p><h4><span id="采样保持电路">采样保持电路</span></h4><blockquote><p>电荷重分配型S/H电路</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zn41ou0sj30ck08zmy6.jpg" alt="image.png"></p><ul><li>差分运算放大器<ul><li>差分输出的运放<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zn2uettyj305x035weu.jpg" alt="image.png"></li></ul></li><li>开关<ul><li>MOS管</li><li>G接时钟信号<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zn3pporyj30cw06oq3s.jpg" alt="image.png"></li></ul></li></ul><h5><span id="基于电荷守恒分析电路">基于电荷守恒分析电路</span></h5><p><strong>采样阶段</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8znbjlj2hj30lu0dmaei.jpg" alt="image.png"></p><p><strong>采样阶段末期</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zneyvat1j30li0dd0wh.jpg" alt="image.png"></p><p><strong>采样保持阶段</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zni3kbgxj30mc0e60xm.jpg" alt="image.png"></p><p><strong>总结</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8znjoofzgj30lm0dx0zz.jpg" alt="image.png"></p><blockquote><p>电容翻转型S/H电路</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8znlyv9rlj30bj0683yr.jpg" alt="image.png"></p><p><strong>采样阶段</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zno65lz3j30ht06n0u3.jpg" alt="image.png"></p><p><strong>保持阶段</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8znowa38qj30kr0daq6l.jpg" alt="image.png"></p><h4><span id="sh电路非理想因素">S/H电路非理想因素</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8znrg0hfxj30mo0ebafu.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8znu0yyi2j30li0d9446.jpg" alt="image.png"></p><h4><span id="子转换级">子转换级</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zu1c5xv3j30mf0eggqx.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zu1pkuu1j30me0d5q63.jpg" alt="image.png"></p><h4><span id="25bit级mdac输入输出关系">2.5bit/级MDAC输入输出关系</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zzmxqlghj30mw0db0x5.jpg" alt="image.png"></p><p><strong>子转换级的非理想因素</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9257imqopj30mb0dgq9l.jpg" alt="image.png"></p><ol><li>只考虑电容失配和有限放大增益<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h925grpiukj30mm0e3jw9.jpg" alt="image.png"></li></ol><p>行为级仿真对于电路设计有指导性作用</p><h2><span id="流水线adc的系统级设计考虑">流水线ADC的系统级设计考虑</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h925vn5go6j30m30bzn37.jpg" alt="image.png"></p><h3><span id="sh级是否并入第一个子转换级">S/H级是否并入第一个子转换级</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h925xlciz0j30m50dfgv6.jpg" alt="image.png"></p><h3><span id="比特数的分配">比特数的分配</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9261e9nqxj30m10d0gu4.jpg" alt="image.png"></p><h3><span id="电容缩放因子k~s~">电容缩放因子K~s~</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h9268um954j30lh0ck7d4.jpg" alt="image.png"></p><h3><span id="采样电容c~s~取值">采样电容C~S~取值</span></h3><p><strong>重要</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h926835fgoj30ls0dw45o.jpg" alt="image.png"></p><h2><span id="12位流水线adc测试框图">12位流水线ADC测试框图</span></h2><h2><span id="作业指导">作业指导</span></h2><h3><span id="13位流水线adc">13位流水线ADC</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8zzvs7t25j30fu08mq4i.jpg" alt="image.png"></p><h3><span id="-δ调制器">∑-Δ调制器</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h926ljg2qgj30kd08k75f.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h926lt9jovj30mb0dxq8o.jpg" alt="image.png"></p><ul><li>抗混叠滤波器要求降低</li><li>频带内噪声减小</li></ul><h3><span id="过采样技术">过采样技术</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h926q6e73sj30m30djwlt.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h926ruz0qzj30mi0e0tci.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h926vm7ae0j30lz0cv42c.jpg" alt="image.png"></p><h3><span id="噪声整形技术">噪声整形技术</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h926z3qbqnj30lo0c30v9.jpg" alt="image.png"></p><h3><span id="电路">电路</span></h3><h4><span id="实例理解">实例理解</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94b5uq1anj30m30fqtct.jpg" alt="image.png"></p><ul><li>Moving Average——加窗的平均，过去几天的平均</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94b6ry2nuj30l50fy783.jpg" alt="image.png"></p><h4><span id="一阶调制器特点及改进方向">一阶调制器特点及改进方向</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94b9dmu4vj30lr0bbgse.jpg" alt="image.png"></p><h4><span id="单环高阶噪声整形结构">单环高阶噪声整形结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94bcf3ar3j30lp0d1tdy.jpg" alt="image.png"></p><h4><span id="单环l阶噪声整形结构">单环L阶噪声整形结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94bec73hwj30m80e1n0n.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94beis9t5j30m10d17bq.jpg" alt="image.png"></p><ul><li>1.2阶以上不稳定</li><li>噪声传递函数还需改进，否则调制器多不稳定</li></ul><h3><span id="系统级设计">系统级设计</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94bj8lby3j30mc0de0za.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94bju3wksj30lb0dngr8.jpg" alt="image.png"></p><ul><li>前馈结构</li></ul><h4><span id="确定量化位数">确定量化位数</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94boa0slij30l60azjyr.jpg" alt="image.png"></p><ul><li>采用方案一</li></ul><h4><span id="换路滤波器类型选择">换路滤波器类型选择</span></h4><ul><li>BW更平缓</li></ul><h4><span id="调制器阶数l-过采样率osr选择">调制器阶数L、过采样率OSR选择</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94brd93hbj30ml0c8jxg.jpg" alt="image.png"></p><h4><span id="反馈结构与前馈结构">反馈结构与前馈结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94bt25t04j30m60dttfy.jpg" alt="image.png"></p><ul><li>确定画横线的这些系数，利用工具得到NTF</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94bvh3cyuj30mb0e943z.jpg" alt="image.png"></p><h4><span id="噪声传递函数ntf的综合">噪声传递函数NTF的综合</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94bw8r5itj30m90dy0x4.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94bzdvb0kj30mp0d0q7w.jpg" alt="image.png"></p><ul><li>信号传递1，高频处噪声传递不能超过1.5</li></ul><h4><span id="噪声传递函数ntf的综合">噪声传递函数NTF的综合</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94c23mhldj30mf0ebn4e.jpg" alt="image.png"></p><h4><span id="ntf函数综合">NTF函数综合</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94c7oamjsj30ka0blwir.jpg" alt="image.png"></p><ul><li>[a,g,b,c]</li><li>form 架构</li><li>swing 摆幅</li><li>scale 按比例缩放</li></ul><h4><span id="scaleabcd函数">scaleABCD函数</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94c98ctr8j30ke0d5n1x.jpg" alt="image.png"></p><ul><li><p>M=1一位量化</p></li><li><p>swing：期望的输出摆幅上限，根据积分器的特性</p></li><li><p>umax不用管</p></li></ul><h4><span id="噪声传递函数ntf的实现">噪声传递函数NTF的实现</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94capgq58j30m80dejw3.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94caweq8kj30ix0cxn0f.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94cbh7ilsj30mc0dfn2g.jpg" alt="image.png"></p><h4><span id="架构">架构</span></h4><ol><li>根据精度要求，选择过采样率的阶数</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94cz5smddj30hu0bltbo.jpg" alt="image.png"></p><ol start="2"><li>SD toolbox关键函数及其流程</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94czvxyxmj30ky0a3jve.jpg" alt="image.png"></p><h4><span id="开关电容并联模拟电阻">开关电容并联模拟电阻</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94d6vmjvvj30mr0d4tez.jpg" alt="image.png"></p><ul><li>相当于在电容上暂存半个周期</li></ul><h4><span id="对寄生电容不敏感的开关电容串联模拟电阻">对寄生电容不敏感的开关电容串联模拟电阻</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94d9c824aj30ki0bswhi.jpg" alt="image.png"></p><ol><li>正电阻</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94da8diqfj30lk0coq7u.jpg" alt="image.png"></p><ol start="2"><li>负电阻</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94ddwb512j30ks0cz43w.jpg" alt="image.png"></p><h4><span id="开关电容电路的优点">开关电容电路的优点</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94dhfpz27j30m30ckjxx.jpg" alt="image.png"></p><ul><li>在集成电路中，一个电阻很难做得很准确</li><li>而两个电容的比值可以做得很准确</li></ul><h4><span id="开关电容反向积分器">开关电容反向积分器</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94djlsjobj30ic0di0up.jpg" alt="image.png"></p><h4><span id="对寄生电容不敏感的开关电容反相积分器">对寄生电容不敏感的开关电容反相积分器</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94dk5uxecj30ka0dpmz5.jpg" alt="image.png"></p><ul><li>为什么对寄生电容不敏感？</li></ul><h4><span id="全差分开关电容同相积分器">全差分开关电容同相积分器</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94dmu9fbfj30me0diais.jpg" alt="image.png"></p><h4><span id="一位量化单环二阶σ-δ调制器">一位量化单环二阶Σ-Δ调制器</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94do0f42nj30mb0dg7a0.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94dqof1rhj30mb0c8gp1.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94dqvh7swj30lu0dvagx.jpg" alt="image.png"></p><p><strong>输出频谱</strong><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h94dr3qo4gj30ly0f710f.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_补充</title>
      <link href="/2022/11/24/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-%E8%A1%A5%E5%85%85/"/>
      <url>/2022/11/24/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_补充">电基_ 第6章 _补充</span></h1><h2><span id="推挽push-pull放大电路">推挽（PUSH-PULL）放大电路</span></h2><h3><span id="电路图">电路图</span></h3><p><strong>电路图</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g021eeqkj30at0brjrm.jpg" alt="image.png"></p><p><strong>等效小信号电路</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g02mp6dmj30et0d5tak.jpg" alt="image.png"></p><h3><span id="电路特性">电路特性</span></h3><h4><span id="直流扫描仿真宽长比相同时">直流扫描仿真——宽长比相同时</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g03gxgxuj30qg0eb75u.jpg" alt="image.png"></p><h4><span id="直流扫描仿真宽长比不同时">直流扫描仿真——宽长比不同时</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g18g37ykj30qo0eowg1.jpg" alt="image.png"></p><h4><span id="ac仿真">AC仿真</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g05qsmorj30se0eatb8.jpg" alt="image.png"></p><h4><span id="瞬态仿真小信号">瞬态仿真——小信号</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g19fznuyj30ss0dydi2.jpg" alt="image.png"></p><h4><span id="瞬态仿真大信号">瞬态仿真——大信号</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g1b0i7ycj30tj0ggmzz.jpg" alt="image.png"></p><h2><span id="反馈">反馈</span></h2><blockquote><p>妹听懂啊</p></blockquote><h3><span id="串联反馈与并联反馈">串联反馈与并联反馈</span></h3><ul><li>反馈网络与基本放大器串联</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g1etep0sj30b607kt95.jpg" alt="image.png"></p><ul><li>反馈网络与基本放大器并联</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8g1g8t6ajj30c808lq3b.jpg" alt="image.png"></p><h2><span id="习题讲解">习题讲解</span></h2><h2><span id="623">6.23</span></h2><h2><span id="mos晶体管特征频率">MOS晶体管特征频率</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8t990u8uuj30ks0eb79x.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8t9dn8mqlj30lj0bnmze.jpg" alt="image.png"></p><h3><span id="密勒定理">密勒定理</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8t9ln4ivrj30j60ctgna.jpg" alt="image.png"></p><h2><span id="共源放大电路高频响应">共源放大电路高频响应</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8t9tah5zhj30ll0fxad2.jpg" alt="image.png"></p><ul><li>R~s~ = 50Ω</li></ul><p><strong>合并电容</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8t9vtysyjj30ig0f376f.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8t9xu3vnaj30lp0en76n.jpg" alt="image.png"></p><h2><span id="共栅common-gate放大电路">共栅（common-gate）放大电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8t9yi9q1cj30k30c60vb.jpg" alt="image.png"></p><h3><span id="直流大信号电压转移特性">直流大信号电压转移特性</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ta5jjgs9j30lw0emn13.jpg" alt="image.png"></p><h3><span id="交流小信号等效电路">交流小信号等效电路</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ta8l31alj30m40brwgy.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8taa1nb7dj30lv0ecq5i.jpg" alt="image.png"></p><ul><li>同向放大</li></ul><h2><span id="共漏放大电路">共漏放大电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tactxs6tj30jj0dcgod.jpg" alt="image.png"></p><ul><li>跟随器</li><li>输入阻抗大输出阻抗很大</li></ul><h3><span id="直流大信号电压转移特性">直流大信号电压转移特性</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8taerocw0j30lj0emtc5.jpg" alt="image.png"></p><h3><span id="增益输入电阻输出电阻">增益，输入电阻，输出电阻</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tafwkvx2j30lm0evmzt.jpg" alt="image.png"></p><h2><span id="共源共栅cascode放大电路">共源共栅（cascode）放大电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8taily9a0j30l50e0tbc.jpg" alt="image.png"></p><h3><span id="电流源输出电阻">电流源输出电阻</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8talptvjhj30nc0g0tdy.jpg" alt="image.png"></p><h3><span id="源极退化镜像电流源">源极退化镜像电流源</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8takssym8j30m60fqwi0.jpg" alt="image.png"></p><h3><span id="共源共栅镜像电流源">共源共栅镜像电流源</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tamtc9jsj30l30eugp6.jpg" alt="image.png"></p><h3><span id="共源共栅放大电路">共源共栅放大电路</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tao7fqwtj30k70b576v.jpg" alt="image.png"></p><ul><li>M~2~电流传递</li></ul><h3><span id="直流大信号电压转移特性">直流大信号电压转移特性</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tapvdcdfj30lg0epteo.jpg" alt="image.png"></p><h3><span id="增益输入电阻输出电阻">增益，输入电阻，输出电阻</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8taqlc84wj30lr0fajuy.jpg" alt="image.png"></p><h3><span id="增益公式的直观解释">增益公式的直观解释</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tajm3sptj30lg0endj4.jpg" alt="image.png"></p><h3><span id="共源共栅放大电路">共源共栅放大电路</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8tat7l1t6j30kl0erq5n.jpg" alt="image.png"></p><ul><li>增益很大</li></ul><h2><span id="共源极共栅极共漏极放大器特点">共源极，共栅极，共漏极放大器特点</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8taucz03zj30ka08rtc0.jpg" alt="image.png"></p><p><strong>掌握以下差异</strong></p><ul><li>增益</li><li>输入输出阻抗</li><li>用途</li></ul><table><thead><tr><th></th><th>共源极</th><th>共漏极（源极跟随器）</th><th>共栅极</th></tr></thead><tbody><tr><td>增益</td><td>远大于1</td><td>略小于1</td><td>远大于1</td></tr><tr><td>输入阻抗</td><td>很大</td><td>更大</td><td>几百欧以内</td></tr><tr><td>输出阻抗</td><td>大</td><td>几百欧以内</td><td>最大</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_段覆盖</title>
      <link href="/2022/11/23/%E6%B1%87%E7%BC%96-%E6%AE%B5%E8%A6%86%E7%9B%96/"/>
      <url>/2022/11/23/%E6%B1%87%E7%BC%96-%E6%AE%B5%E8%A6%86%E7%9B%96/</url>
      
        <content type="html"><![CDATA[<blockquote><p>声明：本文内容为浙江大学《汇编程序语言设计》课程课件</p><p>所有源码均为Black White所写</p></blockquote><h2><span id="32位间接寻址方式"><strong>32位间接寻址方式</strong></span></h2><p><strong>(1) 32位比16位多了以下这种寻址方式:</strong></p><p>[寄存器+寄存器*n+常数]</p><p>其中n=2、4、8。</p><p>例如:</p><p>mov eax, [ebx + esi*4]</p><p>设ebx是数组a的首地址, 下标i用esi表示</p><p>则上述语句相当于C语言的: eax = a[i];</p><p>mov eax, [ebx+esi*4+6]</p><ul><li><p>[]内寄存器几乎不加限制，两个寄存器可以任意组合</p><ul><li>16位内只能有b开头的+i结尾的<ul><li>bp bx si di</li></ul></li></ul></li><li><p>jl符号数的比较</p></li><li><p>jb非负数的比较</p></li><li><p>movsx move by sign extension 以符号扩充的方式移动</p></li><li><p>movzx move by zero extension 以左边补零的方式扩充</p></li></ul><h2><span id="vcamptc调试方法">VC&amp;TC调试方法</span></h2><h3><span id="vc">vc</span></h3><p>VC里面要查看当前C代码对应的机器语言，可以在按F10开始调试后选菜单: View-&gt;Debug Windows-&gt;Disassembly</p><h2><span id="段覆盖">段覆盖</span></h2><ul><li>通过在操作数前添加一个段前缀(segment prefix)如CS:、DS:、ES:、SS:来强制改变操作数的段址，这就是段覆盖。</li></ul><h3><span id="段地址的隐含">段地址的隐含</span></h3><ul><li><p>[]内无bp时，省略了段地址ds</p></li><li><p>[]内有bp时，省略了段地址ss</p></li><li><p>ss:[sp]语法错误</p><ul><li>mov bp, sp</li><li>mov ax, [bp] ;</li><li>或</li><li>mov bx, sp</li><li>mov ax, ss:[bx]<strong>段覆盖Overridding</strong></li></ul></li></ul><h3><span id="xchg-指令">xchg 指令</span></h3><p>mov ax, 1</p><p>mov bx, 2</p><p>xchg ax, bx; 则ax=2, bx=1</p><p>xchg ax, ds:[bx]</p><ul><li>一条指令中不能同时引用两个变量<ul><li>不能对两个变量直接进行加法 交换</li></ul></li></ul><h2><span id="地址传送指令">地址传送指令</span></h2><h3><span id="lea">lea</span></h3><ul><li>load effective address=取变量的偏移地址</li><li>间接寻址</li><li>乘法</li></ul><h4><span id="举例">举例</span></h4><ul><li>lea dx, ds:[1000h] ; DX=1000h</li></ul><p>​mov dx, 1000h; 上述lea指令的效果等同于mov指令</p><ul><li><p>lea dx, abc ; 效果等价于以下指令</p><p>mov dx, offset abc</p></li></ul><pre><code class="language-asm">mov dx, offset ds:[bx+si+3]; 语法错误lea dx, ds:[bx+si+3]; dx=bx+si+3mov dx, bx+si+3; 错误mov dx, 1+2+3; 正确用法,因为右侧是常数表达式mov dx, ((1*2+3) shl 2) xor 5; 正确mov dx, bx; \add dx, si;  | 效果等同于上述lea指令add dx, 3 ; /</code></pre><h4><span id="乘法运算"><strong>乘法运算</strong></span></h4><ul><li>乘法和除法指令非常慢</li><li>不是所有乘法都能转化为lea</li></ul><pre><code class="language-asm">lea eax, [eax+eax*4]; EAX=EAX*5 用lea做乘法lea eax, [eax+eax*2]; EAX=EAX*3</code></pre><h2><span id="远指针">远指针</span></h2><pre><code class="language-asm">mov di, ds:[bx]; di=5678hmov es, ds:[bx+2]; es=1234hles di, dword ptr ds:[bx]; 没有规定必须是dimov al, es:[di]; AL=byte ptr 1234:[5678]</code></pre><p><strong>LES</strong></p><pre><code class="language-asm">data segmentvideo_addr dw 0000h, 0B800h, 160, 0B800h;上述定义也可以写成:;video_addr dd 0B8000000h, 0B80000A0hdata endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   mov bx, 0   mov cx, 2next:   les di, dword ptr video_addr[bx];   mov word ptr es:[di], 1741h   add bx, 4   sub cx, 1   jnz next   mov ah, 1   int 21h   mov ah, 4Ch   int 21hcode endsend main</code></pre><p><strong>NEARPTR</strong></p><pre><code class="language-asm">data segmentvideo_addr dw 0000h, 160data endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   mov ax, 0B800h   mov es, ax   mov bx, 0   mov cx, 2next:   mov di, video_addr[bx]   mov word ptr es:[di], 1741h   add bx, 2   sub cx, 1   jnz next   mov ah, 1   int 21h   mov ah, 4Ch   int 21hcode endsend main</code></pre><ul><li>指针的宽度一定与unsigned int一致<ul><li>TC中2字节16位</li><li>VC中4字节32位</li></ul></li></ul><pre><code class="language-c">main()&#123;    char far *p;    p = (char far *)0xB8000000;//非零值都要强转    *p = 'A';    //byte ptr B800:[0] = 'A';    *(p + 1) = 0x71;    &#125;</code></pre><p><strong>BugEat</strong>（膜拜大佬代码）</p><ul><li>自定义函数的时候，用al作为参数和返回值</li></ul>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_MOS晶体管交流小信号特征</title>
      <link href="/2022/11/22/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E4%BA%A4%E6%B5%81%E5%B0%8F%E4%BF%A1%E5%8F%B7%E7%89%B9%E5%BE%81/"/>
      <url>/2022/11/22/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E4%BA%A4%E6%B5%81%E5%B0%8F%E4%BF%A1%E5%8F%B7%E7%89%B9%E5%BE%81/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_mos晶体管交流小信号特征">电基_ 第6章 _MOS晶体管交流小信号特征</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="直流工作点">直流工作点</span></h2><ul><li>模拟电路中，一般要求MOS管工作于饱和区</li><li>MOS管的工作区由直流工作点确定</li><li>给MOS管施加特定的电压/电流<ul><li>确定它的直流工作点</li><li>让MOS管工作于我们期望的区域</li></ul></li></ul><h3><span id="确定直流工作点">确定直流工作点</span></h3><p>有两种方式</p><p>给MOS管加特定的偏置电压或电流，其直流特性就确定了</p><p><strong>在饱和区</strong></p><ol><li>电压偏置——规定VGS的值，求对应ID</li><li>电流偏置——规定ID 的值，求对应VGS</li></ol><h2><span id="交流小信号">交流小信号</span></h2><p>交流信号的电压和电流，叠加在直流工作点上</p><p>直流状态已经确定</p><p>交流小信号不改变直流特性</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dr0a1k50j30et0azq3x.jpg" alt="image.png"></p><h2><span id="跨导">跨导</span></h2><p><em>表明输出（漏极）电流与输入电压有关</em></p><h4><span id="转移特性曲线"><strong>转移特性曲线</strong></span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o4yc0qx0j30jd0e1gob.jpg" alt="image.png"></p><h4><span id="跨导的定义以及几何意义"><strong>跨导的定义以及几何意义</strong></span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o4yzm5v8j30nl09n0ul.jpg" alt="image.png"></p><h2><span id="输出电导">输出电导</span></h2><p><em>表明输出（漏极）电流与输出电压有关</em></p><h4><span id="输出特性曲线"><strong>输出特性曲线</strong></span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o5a5emnxj30kv0dx422.jpg" alt="image.png"></p><h4><span id="输出电导的定义及几何意义"><strong>输出电导的定义及几何意义</strong></span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o5532cy1j30n80d0ju5.jpg" alt="image.png"></p><p><strong>交流仿真都是线性仿真，在工作点附近做了线性化处理</strong></p><h2><span id="mos管交流小信号模型">MOS管交流小信号模型</span></h2><h3><span id="小信号特性公式">小信号特性公式</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o5d5i5dkj30h0099t9m.jpg" alt="image.png"></p><h3><span id="小信号电路模型">小信号电路模型</span></h3><p><strong>是饱和区的模型</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o5dyf8qtj30nu0cymzh.jpg" alt="image.png"></p><h3><span id="模型参数">模型参数</span></h3><h4><span id="g~m~">g~m~</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o5fwxgzoj30n80d6n0y.jpg" alt="image.png"></p><ul><li>暂时忽略了V~DS~的影响</li></ul><h4><span id="g~ds~">g~ds~</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o5j9muh2j30f508hgn3.jpg" alt="image.png"></p><h3><span id="背栅效应">背栅效应</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o5z1wu7yj30k20asq56.jpg" alt="image.png"></p><p><strong>阈值电压近似公式</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o60brqv4j30g601z3yo.jpg" alt="image.png"></p><h4><span id="考虑背栅效应下的mos管交流小信号电路模型">考虑背栅效应下的MOS管交流小信号电路模型</span></h4><ul><li>一般不要求</li><li>低频模型</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o64z34iyj30ja0b5abj.jpg" alt="image.png"></p><h2><span id="mos管高频交流小信号模型">MOS管高频交流小信号模型</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o665m4uhj30ft09dt9r.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o66qtrmjj30ky0bs42f.jpg" alt="image.png"></p><h2><span id="08um-cmos工艺mos管模型">0.8um CMOS工艺MOS管模型</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o6qnyt0cj30i20bajur.jpg" alt="image.png"></p><h3><span id="电流公式相关参数">电流公式相关参数</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o74r1he8j30c306fdgm.jpg" alt="image.png"></p><ul><li>有效沟道长度比栅极长度短，因为栅极和源漏有重叠部分</li></ul><h3><span id="阈值电压公式相关参数">阈值电压公式相关参数</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o77z8ms7j30ji076jt3.jpg" alt="image.png"></p><h3><span id="仿真举例">仿真举例</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o79df0u3j30k90e3q8g.jpg" alt="image.png"></p><ul><li>一个元件一行</li></ul><h4><span id="仿真结果">仿真结果</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o7g74ftdj30iq0eugo9.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8o7h7y9f5j30ic0e00v9.jpg" alt="image.png"></p><ul><li>在lis文件（文本文件）</li></ul><p><strong>二进制文件</strong></p><p>瞬态仿真：tr0，tr1……</p><p>交流仿真：ac0</p><p>直流仿真：sw0</p><h2><span id="小结">小结</span></h2><ul><li>前提：MOS管偏置在特定的直流工作点Q</li><li>交流小信号叠加在直流工作点Q上<ul><li>叠加后，电压电流在直流工作点Q附近小幅变化</li></ul></li><li>模型中的输入输出量，都是指交流分量</li><li>模型中的参数，都与直流工作点有关</li></ul>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第2章_运算放大器</title>
      <link href="/2022/11/22/%E7%94%B5%E5%9F%BA-%E7%AC%AC2%E7%AB%A0-%E8%BF%90%E7%AE%97%E6%94%BE%E5%A4%A7%E5%99%A8/"/>
      <url>/2022/11/22/%E7%94%B5%E5%9F%BA-%E7%AC%AC2%E7%AB%A0-%E8%BF%90%E7%AE%97%E6%94%BE%E5%A4%A7%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第2章-_运算放大器">电基_ 第2章 _运算放大器</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h1><span id="42-描述运放非理性特性的参数">4.2 描述运放非理性特性的参数</span></h1><ol><li>开环增益A</li></ol><ul><li>也称为直流开环增益</li><li>741运放开环增益 106db</li></ul><ol start="2"><li>输入电阻R~i~</li></ol><ul><li>也称差分开环输入电阻</li><li>当频率升高时，还需要考虑差分输入电容</li><li>741 2MΩ 1.4pF</li><li>加电压，看电流</li><li>一般指的是差分输入电阻</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dgc39r9ij30c50b2ta2.jpg" alt="image.png"></p><ol start="3"><li>输出电阻</li></ol><ul><li>也称开环输出电阻</li><li>741 75Ω</li></ul><ol start="4"><li>输入失调电压VOS</li></ol><ul><li>为了使得输出电压为零而在输入端加的补偿电压</li><li>741 1mV</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dghjx7owj30ph082jth.jpg" alt="image.png"></p><ol start="5"><li>共模抑制比CMMR</li></ol><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mi>M</mi><mi>R</mi><mo>=</mo><mn>20</mn><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">∣</mi><mfrac><mrow><mi>A</mi><mtext> </mtext><mi>d</mi><mtext> </mtext></mrow><mrow><mi>A</mi><mtext> </mtext><mi>c</mi><mi>m</mi><mtext> </mtext></mrow></mfrac><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">CMMR = 20log|\frac{A~d~}{A~cm~}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">m</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathdefault mtight">d</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣</span></span></span></span></p></li><li><p>741 90db</p></li></ul><ol start="6"><li>单位增益带宽</li></ol><ul><li>741 1MHz</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dgrbbdcnj30c90d1ac0.jpg" alt="image.png"></p><ol start="7"><li>压摆率</li></ol><h3><span id="实际运放电路模型">实际运放电路模型</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dhqiehmmj30pi0eygrk.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第2章_微弱信号处理电路</title>
      <link href="/2022/11/22/%E7%94%B5%E5%9F%BA-%E7%AC%AC2%E7%AB%A0-%E5%BE%AE%E5%BC%B1%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%94%B5%E8%B7%AF/"/>
      <url>/2022/11/22/%E7%94%B5%E5%9F%BA-%E7%AC%AC2%E7%AB%A0-%E5%BE%AE%E5%BC%B1%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%94%B5%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第2章-_微弱信号处理电路">电基_ 第2章 _微弱信号处理电路</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h1><span id="71-测量放大器">7.1 测量放大器</span></h1><h2><span id="测量放大器">测量放大器</span></h2><ul><li>仪表放大器</li></ul><h3><span id="测量放大器电路">测量放大器电路</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d8ujsw1wj30kb0dy76b.jpg" alt="image.png"></p><h3><span id="差模增益">差模增益</span></h3><h4><span id="第一级电路">第一级电路</span></h4><blockquote><p>放大差分信号</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d8w9hzswj30pq0hy78w.jpg" alt="image.png"></p><ul><li>第一级实现了对输入差分信号的放大</li></ul><h4><span id="第二级电路">第二级电路</span></h4><blockquote><p>减法放大器</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d91y61ffj30p40fowil.jpg" alt="image.png"></p><h3><span id="共模增益">共模增益</span></h3><h4><span id="第1级电路">第1级电路</span></h4><blockquote><p>把输入共模“传递”到输出端</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d99zwenfj30oz0drn0d.jpg" alt="image.png"></p><h4><span id="第2级电路">第2级电路</span></h4><blockquote><p>减法放大器</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dagc182fj30ma0d5dip.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于少年和成熟</title>
      <link href="/2022/11/21/%E5%85%B3%E4%BA%8E%E5%B0%91%E5%B9%B4%E5%92%8C%E6%88%90%E7%86%9F/"/>
      <url>/2022/11/21/%E5%85%B3%E4%BA%8E%E5%B0%91%E5%B9%B4%E5%92%8C%E6%88%90%E7%86%9F/</url>
      
        <content type="html"><![CDATA[<h1><span id="关于少年和成熟">关于少年和成熟</span></h1><p>“懂得量力而行是成熟的标志”——一些成熟稳重的人</p><p>“总是勇敢追逐是少年的标志”——我</p><p>最近又感觉时间排不开了</p><p>RM12月份前要调车，概统落下了好几节课，DS基本没在课上学到什么东西，电基几个星期的课都学得懵懵懂懂的，一堆作业，一堆没搞懂的题目，一堆想做的事情，一个我想打理好的生活。</p><p>我其实是个挺浪漫的人，喜欢诗歌，故事，风景，音乐，美。但是进入大学以来，我都十分吝啬时间在这些，为我生活添彩的事情上。我感觉生活一直是灰蒙蒙的，我一直是呆若木鸡的。</p><p>是，我揽下的活真的是我想做的，我喜欢汇编，喜欢算法，喜欢嵌入式，但是我都没有做好，我总是捉襟见肘。我也爱生活啊，但是这个学期，我做了什么？只弹过一次吉他，国庆去了西湖一次，生日去看了一场脱口秀。在大草坪上晒晒太阳都显得奢侈，这……</p><p>我不是在卖惨，我也不热爱这样的生活。我爱学习，但那只能是我生活的一部分，充其量是重要的一部分，但显然，它贪婪地蚕食了我基本上所有的时间，并且是我最初自愿的。可笑了。</p><p>我该如何兼顾？一堆想学的东西，一个空白待填充的生活。</p><p>我不希望四年之后，回看自己的本科，只有学习，保研，评奖。我想满怀热情地去做我青春时才能做的事情，去试错，跌倒后勇敢站起，挑战从没做过的事情，不务正业，也务正业。</p><p>我也会怀疑，这些事情是不是就无解的，不可能协调的，你没办法追逐这么多事情。</p><p>但是真的吗？你们试过吗？我们一样吗？</p><p>或许我永远懂不了你们的淡然从容洒脱</p><p>或许我永远是这样顽固莽撞不懂得取舍</p><p>哈哈</p><p>我还会继续向前</p><p>谢谢你们的忠告</p><p>或许我至死是少年</p><p>永远幼稚</p><p>永远跌跌撞撞</p><p>但永远滚烫啊~</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DS</title>
      <link href="/2022/11/21/DS_06_%E5%9B%BE_%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
      <url>/2022/11/21/DS_06_%E5%9B%BE_%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<h1><span id="61-最短路径">6.1 最短路径</span></h1><h2><span id="抽象">抽象</span></h2><p>在网络中，两个不同顶点之间的所有路径中，边的权值之和最小的那一条路径</p><ul><li>shortest path</li><li>source源点</li><li>destination</li></ul><h2><span id="问题分类">问题分类</span></h2><ul><li>单源最短路问题：从某固定源点出发，求其到所有其他顶点的最短路径<ul><li>无权图</li><li>有权图</li></ul></li><li>多源最短路问题：任意两个顶点之间的最短路径</li></ul><h2><span id="无权图的单源最短路算法">无权图的单源最短路算法</span></h2><blockquote><p>按照非递减的顺序，从一个固定源点，找出到各个顶点的最短路</p><p>最短：经过的顶点最少</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cfkvgv1wj30d004o74z.jpg" alt="image.png"></p><ul><li>路径增长在上一步的基础生成</li><li>不重复遍历顶点</li></ul><h3><span id="代码实现">代码实现</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cfrjq2stj30io0aptbl.jpg" alt="image.png"></p><h4><span id="时间复杂度">时间复杂度</span></h4><p>每个顶点被dequeue和enqueue了一次，每条边被遍历了一次</p><p>2*v+e</p><h4><span id="源代码">源代码</span></h4><pre><code class="language-c">/* 邻接表存储 - 无权图的单源最短路算法 *//* dist[]和path[]全部初始化为-1 */void Unweighted ( LGraph Graph, int dist[], int path[], Vertex S )&#123;    Queue Q;    Vertex V;    PtrToAdjVNode W;        Q = CreateQueue( Graph-&gt;Nv ); /* 创建空队列, MaxSize为外部定义的常数 */    dist[S] = 0; /* 初始化源点 */    AddQ (Q, S);    while( !IsEmpty(Q) )&#123;        V = DeleteQ(Q);        for ( W=Graph-&gt;G[V].FirstEdge; W; W=W-&gt;Next ) /* 对V的每个邻接点W-&gt;AdjV */            if ( dist[W-&gt;AdjV]==-1 ) &#123; /* 若W-&gt;AdjV未被访问过 */                dist[W-&gt;AdjV] = dist[V]+1; /* W-&gt;AdjV到S的距离更新 */                path[W-&gt;AdjV] = V; /* 将V记录在S到W-&gt;AdjV的路径上 */                AddQ(Q, W-&gt;AdjV);            &#125;    &#125; /* while结束*/&#125;</code></pre><h2><span id="有权图的单源最短路算法">有权图的单源最短路算法</span></h2><blockquote><p><strong>负值圈</strong>——后续不考虑</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cfywlhdmj30co04igmj.jpg" alt="image.png"></p><p>在圈上走无穷多次时，“花销最小”</p></blockquote><h3><span id="dijkstra算法">Dijkstra算法</span></h3><ul><li>令S={源点s + 已经确定了最短路径的顶点V~i~}[?]</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cg7bkxxtj30j40a0tcm.jpg" alt="image.png"></p><h4><span id="伪代码">伪代码</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cgdpkh6yj30ha09c0uy.jpg" alt="image.png"></p><ul><li>时间复杂度取决于第一句红线怎么实现</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cgips3fmj30ib08zdi1.jpg" alt="image.png">[?]</p><h4><span id="实现过程">实现过程</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8chli9phxj30j809r0v9.jpg" alt="image.png"></p><h4><span id="源代码">源代码</span></h4><pre><code class="language-c">/* 邻接矩阵存储 - 有权图的单源最短路算法 */Vertex FindMinDist( MGraph Graph, int dist[], int collected[] )&#123; /* 返回未被收录顶点中dist最小者 */    Vertex MinV, V;    int MinDist = INFINITY;    for (V=0; V&lt;Graph-&gt;Nv; V++) &#123;        if ( collected[V]==false &amp;&amp; dist[V]&lt;MinDist) &#123;            /* 若V未被收录，且dist[V]更小 */            MinDist = dist[V]; /* 更新最小距离 */            MinV = V; /* 更新对应顶点 */        &#125;    &#125;    if (MinDist &lt; INFINITY) /* 若找到最小dist */        return MinV; /* 返回对应的顶点下标 */    else return ERROR;  /* 若这样的顶点不存在，返回错误标记 */&#125;bool Dijkstra( MGraph Graph, int dist[], int path[], Vertex S )&#123;    int collected[MaxVertexNum];    Vertex V, W;    /* 初始化：此处默认邻接矩阵中不存在的边用INFINITY表示 */    for ( V=0; V&lt;Graph-&gt;Nv; V++ ) &#123;        dist[V] = Graph-&gt;G[S][V];        if ( dist[V]&lt;INFINITY )            path[V] = S;        else            path[V] = -1;        collected[V] = false;    &#125;    /* 先将起点收入集合 */    dist[S] = 0;    collected[S] = true;    while (1) &#123;        /* V = 未被收录顶点中dist最小者 */        V = FindMinDist( Graph, dist, collected );        if ( V==ERROR ) /* 若这样的V不存在 */            break;      /* 算法结束 */        collected[V] = true;  /* 收录V */        for( W=0; W&lt;Graph-&gt;Nv; W++ ) /* 对图中的每个顶点W */            /* 若W是V的邻接点并且未被收录 */            if ( collected[W]==false &amp;&amp; Graph-&gt;G[V][W]&lt;INFINITY ) &#123;                if ( Graph-&gt;G[V][W]&lt;0 ) /* 若有负边 */                    return false; /* 不能正确解决，返回错误标记 */                /* 若收录V使得dist[W]变小 */                if ( dist[V]+Graph-&gt;G[V][W] &lt; dist[W] ) &#123;                    dist[W] = dist[V]+Graph-&gt;G[V][W]; /* 更新dist[W] */                    path[W] = V; /* 更新S到W的路径 */                &#125;            &#125;    &#125; /* while结束*/    return true; /* 算法执行完毕，返回正确标记 */&#125;</code></pre><h2><span id="多源最短路算法">多源最短路算法</span></h2><h3><span id="floyd算法">Floyd算法</span></h3><pre><code class="language-c">/* 邻接矩阵存储 - 多源最短路算法 */bool Floyd( MGraph Graph, WeightType D[][MaxVertexNum], Vertex path[][MaxVertexNum] )&#123;    Vertex i, j, k;    /* 初始化 */    for ( i=0; i&lt;Graph-&gt;Nv; i++ )        for( j=0; j&lt;Graph-&gt;Nv; j++ ) &#123;            D[i][j] = Graph-&gt;G[i][j];            path[i][j] = -1;        &#125;    for( k=0; k&lt;Graph-&gt;Nv; k++ )        for( i=0; i&lt;Graph-&gt;Nv; i++ )            for( j=0; j&lt;Graph-&gt;Nv; j++ )                if( D[i][k] + D[k][j] &lt; D[i][j] ) &#123;                    D[i][j] = D[i][k] + D[k][j];                    if ( i==j &amp;&amp; D[i][j]&lt;0 ) /* 若发现负值圈 */                        return false; /* 不能正确解决，返回错误标记 */                    path[i][j] = k;                &#125;    return true; /* 算法执行完毕，返回正确标记 */&#125;</code></pre><h2><span id="例子">例子</span></h2>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CET-6 Reference</title>
      <link href="/2022/11/20/CET-6-Reference/"/>
      <url>/2022/11/20/CET-6-Reference/</url>
      
        <content type="html"><![CDATA[<h1><span id="secretcet-6-reference">[SECRET!]CET-6 Reference</span></h1><h2><span id="self-introduction">Self-introduction</span></h2><p>Good afternoon! My name is Li Chenrui and I’m 19 years old now. I’m easy-going, optimistic and ambitious, who love making friends. I was born in Zhejiang Province. I major Electronic Science and Technology in Zhejiang University. Besides study, I also get a wide variety of hobbies. I love playing guitar, going out to enjoy Mother Nature and reading poetry.</p><h3><span id="possible-questions">Possible Questions</span></h3><ul><li>Together with you, I want to idle away the time</li><li>CMOS  Complementary Metal Oxide Semiconductor</li><li>Paint you with love</li><li>step out of the comfort zone &amp; try something difficult, and push my limits</li><li>Hello World Team to prepare for the RoboMaster competition in the summer of next year</li></ul><h2><span id="representationampdiscussion">Representation&amp;Discussion</span></h2><ul><li><p>A number of factors might contribute to this prevalent phenomenon.</p></li><li><p>without any limits imposed by space or time</p></li><li><p>translation plays a key role in a increasingly interdependent world</p></li><li><p>To sum up, translation is <strong>not just about</strong> academic skills. <strong>It is about</strong>  providing the vital linguistic and cultural link between persons and  communities of different races, cultures and languages.</p></li><li><p>Online medical service or offline medical service, which is better?</p><p>Nowadays, with the development of Internet and medical technology, it has become a reality that we can stay at home to be medically served online without  going to the physical hospital. Personally, I think the online medical  service is better that the traditional one for the following three main  points.</p><p>Firstly, as is known to us, the traditional medical service required that we  should not only make an appointment in advance, but also go to the  physical hospital to line up for a long time to see the doctor. What’s  worse, it takes a few hours for us to get there if we are far from the  hospital. Thus, the online one can be said to be better and convenient  for us. We can make use of the waiting time to do a lot of meaningful  things or get more sleep. Second, as the pandemic of CIVID-19 this year, some measures should be taken to reduce the probability of exposing to  the infectious disease. However, if we all go to the physical hospital  when we feel a little sick, we can’t guarantee the occurrence of  infection since some diseases is contagious itself. Lastly, I suggest  that common ailments, such as catching a cold, should be encouraged to  be treated online at home, while the unusual cases should be treated in  the hospital because sometimes we need to be inspected by the  professional medical devices to know our physical condition.</p></li><li><p>City size</p><ul><li>I love the city I am living now~It is of a large scale but can be easily commuted by subway or taxi. It large scale allows it to contain a wide variety of places , like amusement park, museums, universities and countless shopping malls and stylish bookstores. Everyone can find the place he/she loves to be, which really boosts our sense of happiness.</li><li>In my opinion, despite the advantages of the large scale, the expansion of the city should be limited in a reasonable extend. The overexpasion of the city may results in three major problems: Firstly, the commuting costs for the citizens will grow, which add pressure to their lives. Secondly, the oversized city can be a huge pollution source, which will worsen the environment we live in. Last but not least,  if the infrastructure can’t catch up with the speed of the expansion, then the insufficiency of basic life support will decrease our sense of happiness. To sum it up, the scale of city should limited in a reasonable extent or it will result in Urban Disease.</li><li></li></ul></li></ul><h2><span id></span></h2><p>Together with you, I want to idle away the time,</p><p>我想和你虚度时光</p><p>Lowering down our heads and watching the fish</p><p>比如低头看鱼</p><p>Or walking away after leaving the tea cups on the table</p><p>比如把茶杯留在桌子上，离开</p><p>Ignoring the beautiful shadows they cast.</p><p>浪费它们好看的阴影</p><p>I even want to idle away the sunset, taking a walk to kill the time till the stars fill up the night sky.</p><p>我还想连落日一起浪费，比如散步，一直消磨到星光满天</p><p>I also want to idle away the time when the wind arrives, sitting in the corridor entranced</p><p>我还要浪费风起的时候，坐在走廊发呆</p><p>Till the sorrow clouds in your eyes have blown away out of the window.</p><p>直到你眼中乌云，全部被吹到窗外</p><p>I have squandered my world, it passes me by,</p><p>我已经虚度了世界，它经过我</p><p>Tired and seemingly never loved.</p><p>疲倦，又像从未被爱过</p><p>However, tomorrow, I will still do the same, idling.</p><p>但是明天我还要这样，虚度</p><p>An eyeful of flowers, life should be just as beautiful,</p><p>满目的花草，生活应该像它们一样美好</p><p>Or meaningless like a movie having been ignored.</p><p>一样无意义，像被虚度的电影</p><p>Desperate love and life sacrifice bring us a short while of silence.</p><p>那些绝望的爱和赴死</p><p>I want that we squander each other.</p><p>为我们带来短暂的沉默</p><p>Together, idle away the short silence and the long meaninglessness</p><p>我想和你互相浪费，一起虚度短的沉默，长的无意义</p><p>Together, fritter away the delicate ancient universe</p><p>一起消磨精致而苍老的宇宙</p><p>Like leaning against a wooden rail and looking down at a mirror, a watery pool,</p><p>比如靠在栏杆上，低头看水的镜子</p><p>Till all the things that have been squandered, behind our backs, grow thin wings.</p><p>直到所有被虚度的事物，在我们身后，长出薄薄的翅膀</p><p>Your eyes your lips your smile your voice</p><p>你的眼睛、你的嘴唇、你的微笑、你的声音</p><p>Every piece of you is a gift to my life</p><p>你的一丝一毫，都是我今生的礼物</p><p>Bright as the sunshine, clear as the moon light</p><p>艳如暖阳，净如月光</p><p>Cinderella out of a fairy tale</p><p>一如从童话中走出的灰姑娘</p><p>Maybe I should just stay silent</p><p>或许我应就此缄默</p><p>There’s one thing I should find</p><p>(但)我一直在寻找的…</p><p>I will surely keep in mind</p><p>我应永生不忘</p><p>I’ll paint you with my love</p><p>我会用爱将你画下</p><p>And never break apart</p><p>从此永不分离</p><p>Without you I’m like cherry blossom sadly falling down</p><p>没有你，我正如那片片樱花，黯然落下</p><p>May the angels guide</p><p>就让天使指引</p><p>My love to you tonight</p><p>让我的爱在今夜与你相会</p><p>Oh darling please don’t try to hide</p><p>哦亲爱的无需躲藏</p><p>I’ll always by your side</p><p>我会永远伴你左右</p><p>Then we’ll light up the Gray sky/Then we’ll dance in the moon light</p><p>就让我们照亮这漫天阴霾/就让我们于月光中翩翩起舞</p><p>Just like the fate that we defied</p><p>就像我们曾一起反抗过的命运</p><p>No one can deny</p><p>没人可以否认我们的爱</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>线代</title>
      <link href="/2022/11/19/%E7%BA%BF%E4%BB%A3/"/>
      <url>/2022/11/19/%E7%BA%BF%E4%BB%A3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 线性代数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_01_基本概念</title>
      <link href="/2022/11/19/DS-01-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
      <url>/2022/11/19/DS-01-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_01_基本概念">DS_01_基本概念</span></h1><h2><span id="算法">算法</span></h2><h3><span id="定义">定义</span></h3><ul><li>一个有限指令集</li><li>接受一些输入</li><li>产生输出</li><li>一定在有限步骤后终止</li><li>每条指令必须<ul><li>有充分明确的目标，不可以有歧义</li><li>计算机能处理的范围之内</li><li>描述不依赖于任何计算机语言或具体实现手段</li></ul></li></ul><h3><span id="评判">评判</span></h3><p>S（N）</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ahte66a2j30k20e6tbj.jpg" alt="image.png"></p><ul><li>递归调用时，空间随N线性增长</li></ul><h2><span id="复杂度">复杂度</span></h2><h3><span id="分析技巧">分析技巧</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8alalorz0j30pt0ch7b4.jpg" alt="image.png"></p><h3><span id="例题练习">例题练习</span></h3><ol><li></li></ol><pre><code class="language-c">i = 1;while(i&lt;=n)&#123;    i = i * 3;&#125;</code></pre><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221128094433159.png" alt="image-20221128094433159"></p><ol start="2"><li></li></ol><pre><code class="language-c">x = 0;for(i = 1;i &lt; n; i++)&#123;    for(j=1; j &lt;= n-i; j++)&#123;        x++;    &#125;&#125;</code></pre><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221128094411695.png" alt="image-20221128094411695"></p><ol start="3"><li></li></ol><pre><code class="language-c">void fun(int n)&#123;    int i=0,s=0;    while(s&lt;n)&#123;        ++i;        s=s+i;    &#125;&#125;</code></pre><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8klj675eyj31a90jymyn.jpg" alt="lADPD2eDWtaPPKXNAs7NBoE_1665_718.jpg"></p><ol start="4"><li></li></ol><pre><code class="language-c">void mergesort(int i,int j)&#123;    int m;    if(i != j)&#123;        m = (i+j)/2;        mergesort(i,m);        mergesort(m+1,j);        merge(i,j,m); //本函数的时间复杂度为O(n)    &#125;&#125;</code></pre><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8klisjnvmj30oh0qxabf.jpg" alt="lADPKG0OTVjIRunNA8nNA3E_881_969.jpg"></p><h2><span id="最大子列和">最大子列和</span></h2><h3><span id="算法一-on3">算法一 O（N^3^）</span></h3><pre><code class="language-c">#include&lt;stdio.h&gt;int MaxSubSeq1(int n, int *arr)&#123;int i,j,k;int MaxSum,ThisSum = 0;MaxSum = arr[0];for(i = 0; i &lt; n; i++)&#123;for(j = 0; j &lt; n; j++)&#123;for(k = i; k &lt;= j; k++)&#123;ThisSum += arr[k];if(ThisSum &gt; MaxSum)MaxSum = ThisSum;&#125;ThisSum = 0;&#125;&#125;return MaxSum;&#125;int main()&#123;int sum;int a[8] = &#123;0,12,-2,23,-4,-9,20,-7&#125;;sum = MaxSubSeq1(8, a);printf(&quot;%d\n&quot;,sum);return 0;&#125;</code></pre><ul><li>第一遍居然写错了，ThisSum算完了没有清零</li><li>k从i开始，而不是从0开始</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电控_培训_一</title>
      <link href="/2022/11/19/%E7%94%B5%E6%8E%A7-%E5%9F%B9%E8%AE%AD-%E4%B8%80/"/>
      <url>/2022/11/19/%E7%94%B5%E6%8E%A7-%E5%9F%B9%E8%AE%AD-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> RoboMaster </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第2章_有源滤波电路</title>
      <link href="/2022/11/17/%E7%94%B5%E5%9F%BA_%E7%AC%AC2%E7%AB%A0_%E4%B8%80%E9%98%B6%E6%9C%89%E6%BA%90RC%E6%BB%A4%E6%B3%A2%E5%99%A8/"/>
      <url>/2022/11/17/%E7%94%B5%E5%9F%BA_%E7%AC%AC2%E7%AB%A0_%E4%B8%80%E9%98%B6%E6%9C%89%E6%BA%90RC%E6%BB%A4%E6%B3%A2%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第2章-_有源滤波电路">电基_ 第2章 _有源滤波电路</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h1><span id="61-一阶有源rc滤波器">6.1 一阶有源RC滤波器</span></h1><p>有源无源区别在于有无运放</p><h2><span id="滤波器分类">滤波器分类</span></h2><ol><li>低通滤波器</li><li>高通滤波器</li><li>带通滤波器</li><li>带阻滤波器</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h87xfqh01qj30io0dvmzk.jpg" alt="image.png"></p><h2><span id="滤波器特征参数">滤波器特征参数</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h87xhkew4bj30d10alab8.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h87xi089qej30cz0aowft.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h87xj5kwt3j30e00augne.jpg" alt="image.png"></p><h2><span id="一阶有源rc低通滤波器">一阶有源RC低通滤波器</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h87ymfhgt9j30c707wjrp.jpg" alt="image.png"></p><ul><li>具有一个独立电容C，频率特性由RC电路决定</li><li>滤波由RC实现</li><li>运放仅仅起放大作用</li></ul><h3><span id="推导过程">推导过程</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h88be3i9kjj30oa0fu76d.jpg" alt="image.png"></p><h4><span id="低通滤波特性"><strong>低通滤波特性</strong></span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h88bgkd5j5j30ov0emmyx.jpg" alt="image.png"></p><h2><span id="一阶有源rc高通滤波器">一阶有源RC高通滤波器</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8adnu9y0cj30p70h8jt8.jpg" alt="image.png"></p><h3><span id="推导过程">推导过程</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8adpgkc2bj30pv0gljtk.jpg" alt="，u"></p><h4><span id="高通滤波特性"><strong>高通滤波特性</strong></span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8ae4vx2ngj30p40hd76p.jpg" alt="image.png"></p><h2><span id="与rc电路频率响应对比">与RC电路频率响应对比</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8ae8rl5ztj30pv0dw76u.jpg" alt="image.png"></p><ul><li>区别在于通带的衰减</li></ul><h2><span id="一阶有源rc全通滤波器">一阶有源RC全通滤波器</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8aebv2puyj30pm0ezabn.jpg" alt="image.png"></p><h3><span id="推导过程">推导过程</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8aecuqi0mj30p00f2jt2.jpg" alt="image.png"></p><h4><span id="全通滤波特性"><strong>全通滤波特性</strong></span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcgy1h8aefq2oxhj30p80bignk.jpg" alt="image.png"></p><ul><li>输入不同的频率分量，相移不同</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8clw2qfexj30on0fg40q.jpg" alt="image.png"></p><h1><span id="62-二阶有源rc滤波器">6.2 二阶有源RC滤波器</span></h1><ul><li>具有两个独立的储能元件电容<ul><li>滤波器阶数越高，从通带到阻带的过渡越陡</li></ul></li><li>根据频率特性，可以分为低通 高通 带通 带阻 以及全通滤波器</li><li>运放不仅起到信号放大作用，对电路频率选择性也有重要影响</li></ul><h2><span id="二阶低通有源滤波电路">二阶低通有源滤波电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cm1m0ajsj30ot0avgng.jpg" alt="image.png"></p><h3><span id="系统函数">系统函数</span></h3><ul><li>特征角频率</li><li>阻尼因子</li><li>品质因数</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cm80l1n9j30nb0eljth.jpg" alt="image.png"></p><h3><span id="频率响应">频率响应</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cmc2v2h7j30mz0ex768.jpg" alt="image.png"></p><p>改变电阻，获得期望的μ，进而获得特征频率的3db衰减</p><h3><span id="q值影响">Q值影响</span></h3><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121121220667.png" alt="image-20221121121220667"></p><ul><li><p>Q值增大，意味着μ增大了，则通带内增益增大</p></li><li><p>Q值过大近似带通</p></li></ul><h3><span id="波特图">波特图</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cmmmo9ntj30pd0e3td7.jpg" alt="image.png"></p><h2><span id="二阶高通有源滤波电路">二阶高通有源滤波电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cmocld94j30qf0etgnf.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cmp5c2m3j30nz0c3abz.jpg" alt="image.png"></p><h3><span id="系统函数">系统函数</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8cmqvrfg6j30n40exjtr.jpg" alt="image.png"></p><h3><span id="频率响应">频率响应</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d8o7kbwqj30n10epn0q.jpg" alt="image.png"></p><h3><span id="q值影响">Q值影响</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d8ouuye9j30q10ce0xi.jpg" alt="image.png"></p><h3><span id="波特图">波特图</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d8pg9tp3j30nt0dgtco.jpg" alt="image.png"></p><h2><span id="二阶带通有源滤波电路">二阶带通有源滤波电路</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d83gesekj30gm09vq3n.jpg" alt="image.png"></p><h3><span id="系统函数">系统函数</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d85av7lkj30o00e8dhz.jpg" alt="image.png"></p><h3><span id="频率响应">频率响应</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d88f0y7pj30k90d1t9r.jpg" alt="image.png"></p><h3><span id="q值影响">Q值影响</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d89qk02jj30ph0cw41r.jpg" alt="image.png"></p><ul><li>Q值越大，选择性越好</li><li>放大倍数越大，带宽越窄</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d8aoamgzj30pm0dbadu.jpg" alt="image.png"></p><h3><span id="波特图">波特图</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d8ec59h0j30ni0ce0v1.jpg" alt="image.png"></p><h2><span id="滤波器传递函数形式">滤波器传递函数形式</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8d8evlif3j30jk0d9aat.jpg" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_端口</title>
      <link href="/2022/11/16/%E6%B1%87%E7%BC%96-%E7%AB%AF%E5%8F%A3/"/>
      <url>/2022/11/16/%E6%B1%87%E7%BC%96-%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1><span id="端口">端口</span></h1><p><strong>CPU &lt;-&gt; 端口(port)  &lt;-&gt; I/O设备</strong></p><ul><li>端口编号就是端口地址。端口地址的范围是：[0000h, 0FFFFh]，共65536个端口。</li></ul><h3><span id="60h端口cpu与键盘之间可以建立通讯">60h端口——CPU与键盘之间可以建立通讯</span></h3><ul><li>in al, 60h; 从端口60h读取一个字节并存放到AL中</li></ul><h3><span id="70h及71h端口与cmos内部的时钟有关">70h及71h端口——与cmos内部的时钟有关</span></h3><p>70h管理地址，71h管理数据</p><ul><li>其中cmos中的地址4、2、0中分别保存了当前的时、分、秒，并且格式均为BCD码。</li><li>台式机的开机密码储存在cmos中，由一个钮扣电池供电；笔记本的开机密码存储在安全芯片中，不需要电</li></ul><pre><code class="language-asm">; written by blackwhitemov al, 2out 70h, al; 只能是al寄存器in al, 71h; 读取cmos中2号单元的值</code></pre><pre><code class="language-asm">; written by blackwhitemov al, 4out 70h, almov al, 23hout 71h, al; 把cmos4号单元即小时的值改成23点</code></pre><pre><code class="language-asm">; written by blackwhitemov al, 2out 70h, al; 只能是al寄存器mov al, 11hout 71h, al; 把11h写入cmos的2号寄存单元</code></pre><pre><code class="language-asm">; written by blackwhitedata segmentcurrent_time db &quot;00:00:00&quot;, 0Dh, 0Ah, &quot;$&quot;data endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   mov al, 4   out 70h,al; index hour   in al,71h ; AL=hour(e.g. 19h means 19 pm.)   call convert; AL='1', AH='9'   mov word ptr current_time[0],ax; 利用小端规则，使得存入正好是19h相当于下面两句   ;mov current_time[0], al   ;mov current_time[1], ah   mov al,2   out 70h,al; index minute   in  al,71h; AL=minute   call convert   mov word ptr current_time[3],ax;   ;mov current_time[3], al   ;mov current_time[4], ah   mov al,0  ; index second   out 70h,al   in  al,71h; AL=second   call convert   mov word ptr current_time[6],ax   mov ah, 9   mov dx, offset current_time   int 21h   mov ah, 4Ch   int 21h;---------Convert----------------;Input:AL=hour or minute or second;      format:e.g. hour   15h means 3 pm.;                  second 56h means 56s;Output: (e.g. AL=56h);     AL='5';     AH='6';     AL和AH既是input也是outputconvert:    push cx    mov ah,al ; e.g. assume AL=56h    and ah,0Fh; AH=06h    mov cl,4    shr al,cl ; AL=05h    ; shr:shift right右移    add ah, '0'; AH='6'    add al, '0'; AL='5'    pop  cx    ret;---------End of Convert---------code endsend main</code></pre><pre><code class="language-asm">; written by blackwhiteNOTE_1  =  440 ; 音调频率NOTE_2  =  495NOTE_3  =  550NOTE_4  =  587NOTE_5  =  660NOTE_6  =  733NOTE_7  =  825ONE_BEEP  =  600 ; 一拍延时600msHALF_BEEP =  300 ; 半拍延时300msdata segmentticks dw 0music dw  NOTE_5, ONE_BEEPdw  NOTE_3, HALF_BEEPdw  NOTE_5, HALF_BEEPdw  NOTE_1*2, ONE_BEEP*2dw  NOTE_6, ONE_BEEPdw  NOTE_1*2, ONE_BEEPdw  NOTE_5, ONE_BEEP*2dw  NOTE_5, ONE_BEEPdw  NOTE_1, HALF_BEEPdw  NOTE_2, HALF_BEEPdw  NOTE_3, ONE_BEEPdw  NOTE_2, HALF_BEEPdw  NOTE_1, HALF_BEEPdw  NOTE_2, ONE_BEEP*4dw  NOTE_5, ONE_BEEPdw  NOTE_3, HALF_BEEPdw  NOTE_5, HALF_BEEPdw  NOTE_1*2, HALF_BEEP*3dw  NOTE_7, HALF_BEEPdw  NOTE_6, ONE_BEEPdw  NOTE_1*2, ONE_BEEPdw  NOTE_5, ONE_BEEP*2dw  NOTE_5, ONE_BEEPdw  NOTE_2, HALF_BEEPdw  NOTE_3, HALF_BEEPdw  NOTE_4, HALF_BEEP*3dw  NOTE_7/2, HALF_BEEPdw  NOTE_1, ONE_BEEP*4dw  NOTE_6, ONE_BEEPdw  NOTE_1*2, ONE_BEEPdw  NOTE_1*2, ONE_BEEP*2dw  NOTE_7, ONE_BEEPdw  NOTE_6, HALF_BEEPdw  NOTE_7, HALF_BEEPdw  NOTE_1*2, ONE_BEEP*2dw  NOTE_6, HALF_BEEPdw  NOTE_7, HALF_BEEPdw  NOTE_1*2, HALF_BEEPdw  NOTE_6, HALF_BEEPdw  NOTE_6, HALF_BEEPdw  NOTE_5, HALF_BEEPdw  NOTE_3, HALF_BEEPdw  NOTE_1, HALF_BEEPdw  NOTE_2, ONE_BEEP*4dw  NOTE_5, ONE_BEEPdw  NOTE_3, HALF_BEEPdw  NOTE_5, HALF_BEEPdw  NOTE_1*2, HALF_BEEP*3dw  NOTE_7, HALF_BEEPdw  NOTE_6, ONE_BEEPdw  NOTE_1*2, ONE_BEEPdw  NOTE_5, ONE_BEEP*2dw  NOTE_5, ONE_BEEPdw  NOTE_2, HALF_BEEPdw  NOTE_3, HALF_BEEPdw  NOTE_4, HALF_BEEP*3dw  NOTE_7/2, HALF_BEEPdw  NOTE_1, ONE_BEEP*3dw  0, 0data endscode segmentassume cs:code, ds:data, ss:stkmain:   mov ax, data   mov ds, ax   xor ax, ax   mov es, ax   mov bx, 8*4   mov ax, es:[bx]   mov dx, es:[bx+2]   ; 取int 8h的中断向量   mov cs:old_int8h[0], ax   mov cs:old_int8h[2], dx; 保存int 8h的中断向量   cli   mov word ptr es:[bx], offset int_8h   mov es:[bx+2], cs   ; 修改int 8h的中断向量   mov al, 36h   out 43h, al   mov dx, 0012h   mov ax, 34DCh       ; DX:AX=1193180   mov cx, 1000   div cx              ; AX=1193180/1000   out 40h, al   mov al, ah   out 40h, al         ; 设置时钟振荡频率为1000次/秒   sti   mov si, offset music   cldagain:   lodsw   test ax, ax   jz done   call frequency   lodsw   call delay   jmp againdone:   cli   mov ax, cs:old_int8h[0]   mov dx, cs:old_int8h[2]   mov es:[bx], ax   mov es:[bx+2], dx   ; 恢复int 8h的中断向量   mov al, 36h   out 43h, al   mov al, 0   out 40h, al   mov al, 0   out 40h, al         ; 恢复时钟振荡频率为1193180/65536=18.2次/秒   sti   mov ah, 4Ch   int 21hfrequency:   push cx   push dx   mov cx, ax   ; CX=frequency   mov dx, 0012h   mov ax, 34DCh; DX:AX=1193180   div cx       ; AX=1193180/frequency   ; 设ax = 100   ; 每1/1193180倒计数一次   pop dx   pop cx   cli   push ax   mov al, 0B6h   out 43h, al   pop ax   out 42h, al ; n的低8位   mov al, ah   out 42h, al ; n的高8位                ; 每隔n个tick产生一次振荡               ; 振荡频率=1193180/n (次/秒)   sti   retdelay:   push ax   cli   in al, 61h   or al, 3   out 61h, al; 开喇叭   sti   pop ax   mov [ticks], axwait_this_delay:   cmp [ticks], 0   jne wait_this_delay   cli   in al, 61h   and al, not 3   out 61h, al; 关喇叭   sti   retint_8h:   push ax   push ds   mov ax, data   mov ds, ax   cmp [ticks], 0   je skip   dec [ticks]skip:   pop ds   pop ax   jmp dword ptr cs:[old_int8h]old_int8h dw 0, 0code endsstk segment stackdw 100h dup(0)stk endsend main</code></pre>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_控制位</title>
      <link href="/2022/11/16/%E6%B1%87%E7%BC%96-%E6%A0%87%E5%BF%97%E6%8E%A7%E5%88%B6/"/>
      <url>/2022/11/16/%E6%B1%87%E7%BC%96-%E6%A0%87%E5%BF%97%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1><span id="标志位">标志位</span></h1><h2><span id="状态标志">状态标志</span></h2><h3><span id="fl标志寄存器">FL标志寄存器</span></h3><h4><span id="结构">结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z68r2kqqj30nq04z401.jpg" alt="image.png"></p><h4><span id="cf进位标志">CF：进位标志</span></h4><p><strong>作用</strong></p><p><strong>应用示例</strong></p><ul><li>加减有关</li></ul><p>mov ah, 0FFh</p><p>add ah, 1; AH=0, CF=1产生了进位</p><p>add ah, 2; AH=2, CF=0</p><p>sub ah, 3; AH=0FFh, CF=1产生了借位</p><ul><li>移位</li></ul><p>mov ah, 10110110B</p><p>shr ah, 2；该语法要求源代码最前面加.386</p><p>​；并且每个段定义时segement后跟use16</p><p>​；CF=1</p><h3><span id="与cf相关的两条跳转指令">**与CF相关的两条跳转指令: **</span></h3><p>jc</p><p>​有进位则跳转</p><p>jnc</p><p>​无进位则跳转</p><p>adc</p><p>​带进位加，可用于二进制的转换</p><p>clc clean carry flag</p><p>​CF=0</p><p>stc set carry flag</p><p>​CF=1</p><h4><span id="zf-零标志zero-flag">ZF 零标志(zero flag)</span></h4><p>sub ax, ax; AX=0, ZF=1</p><p>add ax, 1; AX=1, ZF=0</p><p>add ax, 0FFFFh; AX=0, ZF=1, CF=1</p><p>jz is_zero; 会发生跳转, 因为当前ZF==1</p><ul><li><p>与jz相反的指令是jnz, jnz是根据ZF==0作出跳转</p></li><li><p>jz=je，jnz=jne</p><ul><li>CPU在做cmp指令时，会做减法运算</li><li>若相减等于0，ZF==1，je跳转，相当于jz</li><li>同理jnz=jne</li></ul></li><li><p>xor ax，ax</p><p>jz/je equal</p><ul><li>会跳转，因为ZF==1</li><li>但je看起来不合逻辑</li></ul></li></ul><h4><span id="注意mov指令不影响任何标志位">注意：mov指令不影响任何标志位</span></h4><pre><code class="language-asm">mov ax, 1234h          mov bx, 1234h          sub ax, bx              mov bx, 1;此mov不影                 ;响sub指令           ;产生的ZF状态jz iszeromov bx, 0      iszero: </code></pre><ul><li>mov非运算指令，不改变ZF的值</li></ul><pre><code class="language-asm">mov ax, 1234hmov bx, 1234h          sub ax, bx              jz iszeromov bx, 0jmp done; 与左边相比; 这里多出一条; jmp指令iszero:    ; 故左边写法更好mov bx, 1done:</code></pre><h3><span id="pf">PF</span></h3><ul><li>只统计第八位中1的个数<ul><li>偶数个1——1</li><li>奇数个1——0</li></ul></li></ul><h4><span id="相关指令">相关指令</span></h4><ul><li>jp<ul><li>当PF==1时则跳</li><li>jp也可以写成jpe(jump if parity even)</li></ul></li><li>jnp<ul><li>当PF==0时则跳</li><li>jnp也可以写成jpo(jump if parity odd)</li></ul></li><li>用于数据传输的校验（串口<ul><li>奇校验: 数据位+校验位合起来，1的个数必须是奇数</li><li>偶校验: 数据位+校验位合起来，1的个数必须是偶数</li><li>举例<ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h876isdsgdj30k207atdn.jpg" alt="image.png"></li></ul></li></ul></li></ul><h3><span id="af-auxiliary-flag-辅助进位标志">AF <strong>(Auxiliary Flag) 辅助进位标志</strong></span></h3><p>低4位向高4位产生进位或借位 或 第三位向第四位进位或借位时 AF=1</p><ul><li><strong>AF跟BCD(Binary Coded Decimal)码有关</strong><ul><li>一般不用除法来获取十位数的十位和个位因为除法不好用，慢</li><li>举例<ul><li>29h<ul><li>29h &gt;&gt; 4 = 02h</li><li>29h &amp; 0Fh = 09h</li></ul></li></ul></li><li>daa指令<ul><li>29h+08 产生AF=1情况</li><li>29h+01 不产生AF=1情况</li></ul></li></ul></li></ul><pre><code class="language-asm">mov al, 29h; 分钟add al, 08 ; 过了8分钟             ; 31hdaa; decimal adjust for addition加法的十进制调整; 这条指令会根据AF=1或(AL &amp; 0Fh)&gt;9，做以; 下运算: AL = AL + 6; AL=37hmov al, 29hadd al, 1; AL=2Ahdaa; AL=AL+6=2Ah+6=30h</code></pre><h4><span id="跳转指令">跳转指令</span></h4><p>无！</p><h3><span id="总结">总结</span></h3><p>CF ZF SF OF AF PF: 这6个称为状态标志</p><p>DF TF IF: 这3个称为控制标志</p><p>DF: direction flag</p><p>TF: trace/trap flag</p><p>IF: interrupt flag</p><h2><span id="控制标志">控制标志</span></h2><h3><span id="dfdirection-flag方向标志-控制字符串的操作方向">DF(Direction Flag)方向标志: 控制字符串的操作方向</span></h3><ul><li>当DF=0时为正方向(低地址到高地址)，当DF=1是反方向<ul><li>顺着复制 ERROR</li><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8778ac34jj30gn06rwgv.jpg" alt="image.png"></li><li>倒着复制</li><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8778ou018j30hg06mjtx.jpg" alt="image.png"></li></ul></li><li>复制规范<ul><li>若源首地址&lt;目标首地址，则复制按反方向</li><li>当源首地址&gt;目标首地址时，复制时按正方向</li></ul></li></ul><h4><span id="相关指令">相关指令</span></h4><ul><li><strong>cld</strong>指令使DF=0， <strong>std</strong>指令使DF=1</li><li>rep movsb；repeat move string by byte</li></ul><h4><span id="相关c语言函数">相关C语言函数</span></h4><p>strcpy(target, source); <strong>永远按正方向复制</strong></p><ul><li>若source和target有部分重叠就可能出问题！</li></ul><p>memcpy(target, source, n);永远按正方向复制</p><p>memmove(target, source, n); 能正确处理部分重叠</p><h3><span id="ifinterrupt-flag中断标志">IF（Interrupt Flag）中断标志</span></h3><p>当IF=1时,允许中断;否则禁止中断</p><h4><span id="相关指令">相关指令</span></h4><ul><li>cli指令使IF=0表示关/禁止硬件中断</li><li>sti指令使IF=1表示开/允许硬件中断<ul><li>硬件中断常见<ul><li>键盘中断<strong>int 09h</strong></li><li>时钟中断<strong>int 08h</strong><ul><li>定时中断请求</li></ul></li></ul></li></ul></li></ul><p><strong>举例</strong></p><pre><code class="language-asm">cli;十万次循环，中途CPU不处理键盘中断sti;CPU会接受键盘中断</code></pre><ul><li>相当于一组括号，使内部内容进入免打扰状态</li><li>多线程：同一时刻运行多个函数</li></ul><h3><span id="tftracetrap-flag跟踪陷阱标志">TF（Trace/Trap Flag）跟踪/陷阱标志</span></h3><p>当TF=1时,CPU会进入单步模式(single-step mode)CPU在每执行完一条指令后,会自动在该条指令与下条指令之间插入一条<strong>int 1h</strong>指令并执行它</p><ul><li>调试器？<ul><li>先设置TF=1</li><li>跳转到第main</li><li>修改int 01h的函数体，控制权到调试器</li><li>从而可以看到一些变量值等</li></ul></li></ul><p>没有相关指令，改变FLAG整体才能改变TF位</p>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_03_LINEAR_LISTS</title>
      <link href="/2022/11/10/DS-03-LINEAR-LISTS/"/>
      <url>/2022/11/10/DS-03-LINEAR-LISTS/</url>
      
        <content type="html"><![CDATA[<h2><span id="abstract-data-type-adt">Abstract Data Type  (ADT)</span></h2><h3><span id="definition_1">Definition_1</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7zvspe5o0j30fz03gdhb.jpg" alt="image.png"></p><h3><span id="definition_2">Definition_2</span></h3><p>An Abstract Data Type (ADT) is a data type that is organized in such a way that the specification on the objects and specification of the operations on the objects are separated from the representation of the objects and the implementation on the operations.</p><h2><span id="the-list-adt">The List ADT</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7zvwj2bdyj30g50aaq7b.jpg" alt="image.png"></p><h2><span id="linked-lists">Linked Lists</span></h2><h3><span id="insertion">Insertion</span></h3><ol><li>temp-&gt;next =  node-&gt;next</li><li>node-&gt;next = temp</li></ol><h3><span id="deletion">Deletion</span></h3><ol><li>pre-&gt;next =  node-&gt;next</li><li>free ( node )</li></ol><p><strong>Question:</strong>  How can wedelete the first node from a list?</p><p><strong>Answer:</strong>  We can add a dummy head node to a list.</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_02_ALGORITHM_ANALYSIS</title>
      <link href="/2022/11/10/DS-ALGORITHM-ANALYSIS/"/>
      <url>/2022/11/10/DS-ALGORITHM-ANALYSIS/</url>
      
        <content type="html"><![CDATA[<h2><span id="definition">Definition</span></h2><p>An algorithm is a finite set of instructions that, if followed, accomplishes a particular task. In addition, all algorithms must satisfy the following criteria:</p><p>(1) <strong>Input</strong> There are zero or more quantities that are externally supplied.</p><p>(2) <strong>Output</strong> At least one quantity is produced.</p><p>(3) <strong>Definiteness</strong> Each instruction is clear and unambiguous.</p><p>(4) <strong>Finiteness</strong> If we trace out the instructions of an algorithm, then for all cases, the algorithm terminates after finite number of steps.</p><p>(5) <strong>Effectiveness</strong> Every instruction must be basic enough to be carried out, in principle, by a person using only pencil and paper. It is not enough that each operation be definite as in(3); it also must be feasible.</p><h3><span id="note">NOTE</span></h3><ul><li>A program is written in some programming language, and <strong>does not have to be finite</strong> (e.g. an operation system).</li><li>An algorithm can be described by human languages, flow charts, some programming languages, or pseudo code</li></ul><h2><span id="what-to-analyze">What to Analyze</span></h2><p><strong>Time &amp; space complexities</strong></p><p>• <strong>Assumptions:</strong></p><ul><li><p>instructions are executed <strong>sequentially</strong></p></li><li><p>each instruction is simple, and takes exactly <strong>one time unit</strong></p></li><li><p><strong>integer size is fixed</strong> and we have <strong>infinite memory</strong></p></li></ul><h2><span id="asymptotic-notation"><strong>Asymptotic Notation</strong></span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7zvjavs87j30kq08jgqy.jpg" alt="image.png"></p><h3><span id="rules-of-asymptotic-notation"><strong>Rules of Asymptotic Notation</strong></span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7zvki5xr8j30he069782.jpg" alt="image.png"></p><h3><span id="general-rules"><strong>General Rules</strong></span></h3><ul><li><p><strong>FOR LOOPS:</strong> The running time of a for loop is at most the running time of the statements inside the for loop (including tests) times the number of iterations.</p></li><li><p><strong>NESTED FOR LOOPS:</strong> The total running time of a statement inside a group of nested loops is the running time of the statements multiplied by the product of the sizes of all the for loops.</p></li><li><p><strong>CONSECUTIVE STATEMENTS:</strong> These just add (which means that the maximum is the one that counts).</p></li><li><p>**IF / ELSE: **For the fragment</p></li></ul><p>​if ( Condition ) S1;</p><p>​else S2;</p><p>​the running time is never more than the running time of the test plus the larger of the running time of S1 and S2</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_HW02</title>
      <link href="/2022/11/09/%E6%B1%87%E7%BC%96-HW02/"/>
      <url>/2022/11/09/%E6%B1%87%E7%BC%96-HW02/</url>
      
        <content type="html"><![CDATA[<h1><span id="汇编程序设计_hw02">汇编程序设计_HW02</span></h1><h2><span id="题目描述">题目描述</span></h2><p>​输入一个2位的十六进制数(字母必须大写),从坐标(0,0)起按纵向输出该值对应的字符(颜色7Ch)及其后续的15个字符,每个字符右侧还须输出其十六进制ASCII码(颜色1Ah)。<br>​例如:输入F4，则会输出以下内容</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7zayfwjfgj301h0chjsi.jpg" alt="ascii2.png"></p><h2><span id="题解">题解</span></h2><blockquote><p>这次代码真的写得非常丑陋（</p></blockquote><ul><li>这题考察图形化编程最基本的命令调用，难度也不大，主要是汇编的逻辑判断比较麻烦，所以C语言实现可能只要59行， 我用汇编写了100行</li><li>要注意9+1后变成A和F+1后变成0的问题，另外若二位十六进制数的第八位为F，其+1后要进位到高八位，而高八位为F的话+1后直接置零就可以了，这部分涉及较多的逻辑判断</li><li>其他就是简单操作，也没什么好讲的（</li></ul><h2><span id="代码实现">代码实现</span></h2><pre><code class="language-asm">code segmentassume cs:codemain:   mov ax, 0B800h;表示屏幕坐标（0，0）对应的显卡内存地址，本身为RAM中的地址，与显卡中内存地址建立了映射   mov es, ax   mov bx, 0   ;读入一个二位十六进制数   mov ah, 01h   int 21h   mov cl, al   mov ah, 01h   int 21h   mov ch, al   mov ax, 0003h   int 10h; 相当于清屏   push cx; 先保存cx的值，因为后面计算ascii值时会直接对cl和ch进行修改ch_is_char_start:   cmp ch, 'A';若ch的ascii码大于A则必然是字母，无需判断是否小于Z   jge ch_char_to_ascii   jmp ch_is_numch_char_to_ascii:   sub ch, 'A'   add ch, 10; 将十六进制转换为十进制   jmp cl_is_char_startch_is_num:   sub ch, '1'; 将十六进制转换为十进制   add ch, 1   jmp cl_is_char_startcl_is_char_start:   cmp cl, 'A'   jge cl_char_to_ascii   jmp cl_is_numcl_char_to_ascii:   sub cl, 'A'    add cl, 10   mov si, 0 ; 循环计数，将高位十六进制转换为十进制   mov dl, cl   jmp hex_to_deccl_is_num:   sub cl, '1'    add cl, 1   mov si, 0   mov dl, cl   jmp hex_to_dechex_to_dec:   add dl, dl   add si, 1   cmp si, 3   jle hex_to_deccal_ascii:   add dl, ch; 将cl和ch分别转成十进制后相加，存放到dl中，作为字符的ascii码   pop cx   mov si, 0   mov di, 0   jmp show_againjudge_ch:   cmp ch, '9'   je  ch_num_char   cmp ch, 'F'   je  ch_carry   add ch, 1   jmp judge_clch_num_char:   mov ch, 'A'   jmp show_againch_carry:   mov ch, '0'   mov di, 1judge_cl:   cmp di, 1   je cl_add   jmp show_againcl_add:   mov di, 0   cmp cl, 'F'   je cl_carry   add cl, 1   jmp show_againcl_carry:   mov cl, '0'   jmp show_againshow_again:   add si, 1   mov byte ptr es:[bx], dl;在该处显示某个字符   mov byte ptr es:[bx+1], 7Ch;7--背景 白 C--前景 红   mov byte ptr es:[bx+2], cl;在该处显示某个字符   mov byte ptr es:[bx+3], 1Ah;1--背景 深蓝 A--前景 绿   mov byte ptr es:[bx+4], ch;在该处显示某个字符   mov byte ptr es:[bx+5], 1Ah   add bx, 160   add dl, 1   cmp si, 15   jle judge_ch   int 16h   mov ax, 0003h   int 10h   mov ah, 4Ch   int 21hcode endsend main</code></pre>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_段和寄存器</title>
      <link href="/2022/11/09/%E6%B1%87%E7%BC%96-%E6%AE%B5%E5%92%8C%E5%AF%84%E5%AD%98%E5%99%A8/"/>
      <url>/2022/11/09/%E6%B1%87%E7%BC%96-%E6%AE%B5%E5%92%8C%E5%AF%84%E5%AD%98%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3><span id="操作系统对寄存器的自动赋值">操作系统对寄存器的自动赋值</span></h3><p>cs=code segement address</p><p>ip=offset main</p><p>ss:sp stack segement ：stack pointer</p><ul><li>堆栈段的段地址</li><li>堆栈空间的总长度</li></ul><p>ds&amp;es</p><ul><li>psp 在data前方</li></ul><h3><span id="堆栈段">堆栈段</span></h3><ul><li>源代码中没有定义堆栈段时，ss=首段的段地址，sp=0</li></ul><pre><code class="language-asm">data segmentabc dw 1234h, 5678hdata endscode segmentassume cs:code, ds:data, ss:stk;ss和sp的值在程序开始运行时由操作系统自动设定,;程序员不需要手工对它们进行赋值。;正如cs:ip也是在程序开始运行时由操作系统进行赋值;一样。main:   mov ax, data   mov ds, ax   push abc[0]   pop abc[2]; 5678h被替换为1234h   mov ah, 4Ch   int 21hcode endsstk segment stack; 堆栈段只能定义一个，段名stk可以改    ; 编译器根据segment后的关键词stack来判断段是普通段还是堆栈段db 200h dup('S'); 或写成dw 100h dup(0) ; 该数组不需要名字 ; dup内容可任意，堆栈空间中的初始值没有用 ; push进入的内容才有意义 ; 改成‘S’便于调试，一眼看出是堆栈，0容易混淆stk ends;堆栈空间是stk:0到stk:1FF;程序开始运行时,ss=stk,sp=1FF+1end main</code></pre><ol><li>关键词</li><li>堆栈空间长度</li></ol><h4><span id="push-pop">push pop</span></h4><ul><li><p>后跟寄存器或变量</p></li><li><p>有些寄存器不能</p><ul><li><ol><li>FL</li></ol></li><li><ol start="2"><li>IP</li></ol></li><li><ol start="3"><li>push cs正确但pop cs错误</li></ol></li><li><p>因为cs不能用mov pop 指令改变，只能通过jmp call int 指令来间接改变</p></li><li><p>mov ax cs 正确 mov cs ax错误</p></li><li><p>实际上任何指令均不能引用FL IP这两个寄存器</p></li><li><p>IP的值跟cs类似，需要通过jmp call int 指令来间接改变</p><ul><li>jmp 1234h；call 1000h； int 21h</li><li>不直接引用IP（隐式改变）</li></ul></li><li></li></ul></li></ul><pre><code class="language-asm">mov ax, 1234hpush ax;(1)mov bx, 5678hpush bx;(2)pop cx;(3)pop dx;(4)</code></pre><p><strong>假设ss=1000h,sp=200h</strong></p><ul><li>push一次操作2字节，可以跟随一个16位的寄存器或16位的变量，32位CPU中，还可以跟32位的寄存器或变量</li><li>不能操作</li><li>堆栈是倒着生长的</li><li>sp箭头指向的位置下方是堆栈中有效的部分，即已经用掉的堆栈空间，上方是空闲的堆栈空间</li><li>sp=0后再push，sp=FFFE，占用别的空间</li><li>FILO first in last out</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r4v4z3vnj30zk1bejxw.jpg" alt="41d162e6c864d6ea121c07f540269b7.jpg"></p><p>(1)</p><ul><li>sp-2</li><li>把ax的值存储到目前sp指向的地址</li></ul><p>(2)</p><ul><li>sp-2</li><li>把bx的值存储到目前sp指向的地址</li></ul><p>(3)</p><ul><li>箭头处内容弹出并赋值给cx</li><li>sp = sp +  2</li></ul><p>(4)</p><ul><li>箭头处内容弹出并赋值给dx</li><li>sp = sp +  2</li><li>堆栈回复平衡</li></ul><h4><span id="段地址起点的条件amp偏移地址和段地址的关系">段地址起点的条件&amp;偏移地址和段地址的关系</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r40xxki4j30ko0k8k4l.jpg" alt="image.png"></p><h4><span id="内存结构">内存结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z4piab18j30rg0esjvs.jpg" alt="image.png"></p><ul><li><p>一开始ss=5DED，sp=0，看起来堆栈溢出了</p></li><li><p>但是做第一次push，ss变到如图位置</p></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z4s9l3bkj30si0etwjt.jpg" alt="image.png"></p><ul><li>堆栈溢出情况如图，最多用到0030h，若继续push，sp则会进入code segement，破坏指令</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z4yugbxcj30vn0dq44r.jpg" alt="image.png"></p><ul><li>A000，B800：显卡内存</li><li>若data+code长度达到FFF0h，剩余堆栈空间只有10h</li></ul><h3><span id="es寄存器的用法">es寄存器的用法</span></h3><pre><code class="language-asm">data1 segmentabc db 1,2,3data1 endsdata2 segmentxyz db 4,5,6data2 endscode segmentassume cs:code, ds:data1, es:data2main:   mov ax, data1   mov ds, ax   mov ax, data2   mov es, ax   mov ah, abc[1]; 编译后变成mov ah, ds:[1]   ;也可以写成mov ah, ds:abc[1]   mov xyz[1], ah; 编译后变成mov es:[1], ah   ;也可以写成mov es:xyz[1], ah   ;错误写法:mov abc[1], xyz[1]; 因两个对象不能都为内存变量   mov ah, 4Ch   int 21hcode endsend main</code></pre><ul><li>除了堆栈段只能有一个外，其他都可以定义多个</li></ul><h3><span id="寄存器">寄存器</span></h3><p>ax,bx,cx,dx；通用寄存器，做算术逻辑运算</p><p>​；不够用时，还可以用bp，si，di</p><p>sp,bp,si,di；指针寄存器，sp不能放在[]内，bx可以放在[]内</p><p>​；表示偏移地址的寄存器：bx，bp，si，di</p><p>cs,ds,es,ss；段寄存器</p><p>ip,fl；cs:ip指向将要执行的指令</p><p>​；fl称为标志寄存器，cf-carry flag，第零位</p><p>​；fl的zf位，缓冲区有无内容的指示位，zf=1，zero is</p><p>true，缓冲区没有内容</p><blockquote><p>建议先把书看完TAT</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_SoftIce使用</title>
      <link href="/2022/11/09/%E6%B1%87%E7%BC%96-SoftEyes%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/11/09/%E6%B1%87%E7%BC%96-SoftEyes%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3><span id="设置指令断点">设置指令断点</span></h3><h4><span id="f2-breakpoint">F2 breakpoint</span></h4><h4><span id="bl-breakpoint-list">bl breakpoint list</span></h4><ul><li>显示目前已有断点信息</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z31vto6dj30xr0hedq4.jpg" alt="image.png"></p><ul><li>C = 01断点发生一次就停下来</li></ul><h4><span id="bc-breakpoint-cleaner">bc breakpoint cleaner</span></h4><ul><li>bc 1 清除一号断点</li><li>bc *  清除全部断点</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z34imvd3j30xw0gwwnw.jpg" alt="image.png"></p><h4><span id="x-execute">x execute</span></h4><ul><li>快速运行，停在断点</li></ul><h3><span id="设置硬件断点">设置硬件断点</span></h3><p>在变量地址处设置断点</p><h4><span id="bpmb-cs3-w">bpmb cs:3 W</span></h4><ul><li>breakpoint on memory byte at cs:3 when it is wirtten</li><li>R-被读取时</li><li>RW-被读取或写入时</li><li>X-执行到时<ul><li>此时也会亮起来</li></ul></li><li>停在写入指令的下一条指令</li></ul><h4><span id="可以用bl来显示两种断点">可以用bl来显示两种断点</span></h4><ul><li>BPMB 硬件断点</li><li>BPX 指令断点</li></ul><h4><span id="bpmw-cs3-w">bpmw cs:3 W</span></h4><ul><li>breakpoint on memory word</li></ul><h4><span id="bpmd-cs3-w">bpmd cs:3 W</span></h4><ul><li>breakpoint on memory dword</li></ul><h4><span id="bpx断点和bpmb断点区别">bpx断点和bpmb断点区别</span></h4><ul><li><p>bpx数量可以很多，bpmb最多四个</p><ul><li>因为CPU里面只有四个硬件断点寄存器</li></ul></li><li><p>bpx will change 1st byte to 0xCC(CC int 3,i.e. software breakpoint)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物联网与信息电子应用导论_绪论</title>
      <link href="/2022/11/08/%E7%89%A9%E8%81%94%E7%BD%91%E4%B8%8E%E4%BF%A1%E6%81%AF%E7%94%B5%E5%AD%90%E5%BA%94%E7%94%A8%E5%AF%BC%E8%AE%BA-%E7%BB%AA%E8%AE%BA/"/>
      <url>/2022/11/08/%E7%89%A9%E8%81%94%E7%BD%91%E4%B8%8E%E4%BF%A1%E6%81%AF%E7%94%B5%E5%AD%90%E5%BA%94%E7%94%A8%E5%AF%BC%E8%AE%BA-%E7%BB%AA%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 通识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_CMOS差分放大电路</title>
      <link href="/2022/11/08/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-CMOS%E5%B7%AE%E5%88%86%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/"/>
      <url>/2022/11/08/%E7%94%B5%E5%9F%BA-%E7%AC%AC6%E7%AB%A0-CMOS%E5%B7%AE%E5%88%86%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_cmos差分放大电路">电基_ 第6章 _CMOS差分放大电路</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="cmos差分放大电路">CMOS差分放大电路</span></h2><ul><li>差分放大电路</li><li>常用于运算放大器的输入级</li></ul><h2><span id="差分输出的差分放大器">差分输出的差分放大器</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oxptao9dj30nu0b93zl.jpg" alt="image.png"></p><ul><li>加反向输入</li></ul><h3><span id="增益">增益</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oxs3oxxbj30od0fvjtg.jpg" alt="image.png"></p><h3><span id="偏置电路">偏置电路</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oxt07dh7j30om0haq5p.jpg" alt="image.png"></p><ul><li>不用“规定电压“的办法来确定直流工作点，因为这里所谓的确定电压其实是输入的共模电压，它在差分输入中不受控制，不可靠</li></ul><h4><span id="mos管实现电流源">MOS管实现电流源</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oxvhgd6cj30ov0e4tbc.jpg" alt="image.png"></p><h3><span id="负载">负载</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oy89mxx6j30os0f9gow.jpg" alt="image.png"></p><h2><span id="单端输出的差分放大器">单端输出的差分放大器</span></h2><ul><li>PMOS电流镜负载</li><li>NMOS差分放大器</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oyezmy2pj30in0cgabb.jpg" alt="image.png"></p><blockquote><p>为啥这里提到这个东西？上面不是还在改负载吗？现在负载没了？</p></blockquote><h3><span id="增益">增益</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p99rhvlhj30k5081402.jpg" alt="image.png"></p><ul><li>不要求画出小信号等效电路模型</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p9df2qaoj30jr092jsi.jpg" alt="image.png"></p><ul><li>该电路增益与PMOS负载的NMOS共源放大器增益一样</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p9jjmt7sj30id0az0uk.jpg" alt="image.png"></p><h3><span id="仿真">仿真</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p9kyc4fdj30jv0ceq4n.jpg" alt="image.png"></p><ul><li>0.8um VDD=5V p08/n08</li><li>0.18um VDD=1.8V p18/n18</li></ul><h4><span id="op与dc仿真">OP与DC仿真</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p9nr4nptj30km0fb0wz.jpg" alt="image.png"></p><ul><li>定义参数：.PARAM</li></ul><h4><span id="增益估算">增益估算</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p9qdjdytj30h80bi0x5.jpg" alt="image.png"></p><h4><span id="直流转移特性">直流转移特性</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p9qsdbebj30k00bzjsz.jpg" alt="image.png"></p><ul><li>输出电压的摆幅：处于线性区的输出电压范围</li></ul><h5><span id="解释">解释</span></h5><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pb3l1z69j30ky0cvjto.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pb4utru2j30km0c9769.jpg" alt="image.png"></p><h4><span id="ac仿真">AC仿真</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p9xx7gb6j30kj0db0wj.jpg" alt="image.png"></p><h4><span id="开环增益">开环增益</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8p9zpnha4j30km0cpwg9.jpg" alt="image.png"></p><h3><span id="共模抑制比">共模抑制比</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pa0gbyt6j30gh0bgjsb.jpg" alt="image.png"></p><h4><span id="共模增益">共模增益</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pa18fb9bj30kf0csdig.jpg" alt="image.png"></p><ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pa273bayj30c908i74q.jpg" alt="image.png"><ul><li>电路偶对称，两边之间断路</li><li>电路及对称，两边之间接地</li></ul></li></ul><p><strong>进一步简化</strong></p><ul><li>忽略沟道调制效应</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pa6bvnjcj30jk0bm408.jpg" alt="image.png"></p><p><strong>结论</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pa7w9g2mj30km0alta0.jpg" alt="image.png"></p><h4><span id="共模增益估算">共模增益估算</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pa93g39jj30i80c2jvt.jpg" alt="image.png"></p><h4><span id="共模抑制比估算">共模抑制比估算</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pa9v5925j30go091t9b.jpg" alt="image.png"></p><h4><span id="共模增益仿真">共模增益仿真</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8paafqfi9j30kd0dh423.jpg" alt="image.png"></p><p><strong>仿真结果</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pabgqy27j30jp0axwfv.jpg" alt="image.png"></p><ul><li>频率高了之后，一些电容的作用体现了，而手算并不考虑这些</li></ul><h2><span id="另一种差分放大电路结构">另一种差分放大电路结构</span></h2><ul><li>NMOS电流镜负载</li><li>PMOS差分放大器</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pae3psukj30m20bpmz5.jpg" alt="image.png"></p><h2><span id="补充">补充</span></h2><h3><span id="偏置电路">偏置电路</span></h3><ul><li>电压偏置</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8paforilzj30kw0ct41i.jpg" alt="image.png"></p><ul><li>电流偏置</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pagt2x36j30ka0c776t.jpg" alt="image.png"></p><h2><span id="单端输出的差分放大器">单端输出的差分放大器</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8paj4dxzaj30gk0bjdhh.jpg" alt="image.png"></p><h2><span id="增益公式的直观解释">增益公式的直观解释</span></h2><h3><span id="nmos共源放大器">NMOS共源放大器</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pak4xfdqj30k30czgny.jpg" alt="image.png"></p><h3><span id="nmos差分放大器">NMOS差分放大器</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8parvbyjmj30m90daq60.jpg" alt="image.png"></p><ul><li>忽略r~ds~中的电流，近似</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8paurnlggj30km0d80vl.jpg" alt="image.png"></p><h2><span id="差分输入">差分输入</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pb0rpmbrj30g50b53zr.jpg" alt="image.png"></p><h2><span id="共模输入">共模输入</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pb1t36vvj30g80a5jss.jpg" alt="image.png"></p><h2><span id="共模输入范围估计">共模输入范围估计</span></h2><h4><span id="最大值估计路径1">最大值估计——路径1</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pb74nd95j30l70eydl7.jpg" alt="image.png"></p><p><strong>推导过程</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pbnvrp7ej311q0sh0vk.jpg" alt="lADPJx8ZzX7y4iXNBAHNBU4_1358_1025.jpg"></p><h4><span id="最大值估计路径2">最大值估计——路径2</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pc4yq1c4j30l908bgnp.jpg" alt="image.png"></p><h4><span id="最小值估计">最小值估计</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pc5awwelj30kc04kq3u.jpg" alt="image.png"></p><p><strong>推导过程</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8pc5u0eedj30sq0o1gn6.jpg" alt="lADPJx8ZzX-bb8TNA2HNBAo_1034_865.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_CMOS共源放大电路</title>
      <link href="/2022/11/08/%E7%94%B5%E5%9F%BA_%E7%AC%AC6%E7%AB%A0_CMOS%E5%85%B1%E6%BA%90%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/"/>
      <url>/2022/11/08/%E7%94%B5%E5%9F%BA_%E7%AC%AC6%E7%AB%A0_CMOS%E5%85%B1%E6%BA%90%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_cmos共源放大电路">电基_ 第6章 _CMOS共源放大电路</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="cmos共源放大电路">CMOS共源放大电路</span></h2><ul><li>共源放大电路是CMOS集成电路中最基础的放大极形式</li><li>无源电阻负载CMOS共源放大电路<ul><li>电路结构</li><li>直流大信号电压转移特性</li><li>电路分析方法</li><li>增益计算与仿真</li></ul></li><li>有源负载CMOS共源放大电路<ul><li>MOS二极管负载</li><li>MOS电流源负载</li></ul></li></ul><h2><span id="无源电阻负载cmos共源放大电路">无源电阻负载CMOS共源放大电路</span></h2><h3><span id="nmos共源放大电路">NMOS共源放大电路</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xo3j2atvj306i0au74n.jpg" alt="image.png"></p><h3><span id="直流转移特性">直流转移特性</span></h3><ul><li>输入电压：0~5V，步长0.1V</li><li>VDD=5V</li><li>M1: 10um/1um，RD=2kW</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xo4rop8uj305u08imxh.jpg" alt="image.png"></p><p>V~GS~ &gt; V~TH~时</p><p>输入电压增大，输出电压减少（电阻分压增大）</p><p>若输出电压太小，小于饱和电压，MOS管进入线性区</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xo5884zuj30dz0by41s.jpg" alt="image.png"></p><ul><li>DGSB</li><li>Vin 从0V到5V 步长为0.1</li><li>.probe vs .print<ul><li>.print把txt结果打印到.lis</li><li>.probe把二进制结果打到.sw0里</li></ul></li></ul><h5><span id="表示图">表示图</span></h5><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xoabqrmij30hc0e8mzk.jpg" alt="image.png"></p><ul><li>转移——输入与输出</li><li>后半段进入线性区</li></ul><h5><span id="确定直流工作点">确定直流工作点</span></h5><p>输入小范围波动，输出大范围波动，选增益大的区域</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xohmswq8j30fp0c0myg.jpg" alt="image.png"></p><h5><span id="交流放大概念">交流放大概念</span></h5><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xojax7blj30ey0cjjsy.jpg" alt="image.png"></p><h3><span id="电路分析方法">电路分析方法</span></h3><ol><li><p>选定直流工作点，为电路选择合适的偏置，保证MOS管工作在饱和区</p><ol><li>通过直流扫描仿真</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8ot9rnq27j30k2094759.jpg" alt="image.png"></p></li><li><p>确定MOS管交流小信号模型参数</p><ol><li>通过OP仿真</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8otakyn07j30ng0fpjxc.jpg" alt="image.png"></p></li><li><p>得到电路的等效交流小信号模型</p><ol><li>MOS管用交流小信号模型替代</li><li>所有对应直流电压的节点改为接地<ul><li>因为交流量为0</li></ul></li></ol></li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xoowksomj30kv0cggpb.jpg" alt="image.png">‘</p><ol start="4"><li>基于等效交流小信号模型，列写电路方程求解，得到期望的电路特性</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8otey7n30j30nq0bc40d.jpg" alt="image.png"></p><h4><span id="直观解释">直观解释</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xot54a5ij30lg0bv0vj.jpg" alt="image.png"></p><h4><span id="增益估算">增益估算</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xoujghi0j30k40ayju6.jpg" alt="image.png"></p><h3><span id="增益仿真">增益仿真</span></h3><h4><span id="ac仿真">AC仿真</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xp5at5k3j30jy0eqn19.jpg" alt="image.png"></p><ul><li>DEC 10 10 1g<ul><li>每十倍频10个点，从10到1g</li></ul></li><li>vdb(2)vp(2)波特图</li></ul><h4><span id="仿真结果">仿真结果</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8otq3324nj30n20hdwi9.jpg" alt="image.png"></p><ul><li>线性仿真——在直流工作点附近做线性化</li></ul><h4><span id="瞬态仿真">瞬态仿真</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xpavq9h4j30jf0ebdk6.jpg" alt="image.png"></p><ul><li>sin（直流分量 交流分量 频率 初始相位 0 0）</li></ul><h5><span id="结果">结果</span></h5><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xpcc00hnj30kv0eu431.jpg" alt="image.png"></p><h3><span id="如果提高增益">如果提高增益</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xpg4h5g3j30lu0b6428.jpg" alt="image.png"></p><h2><span id="有源负载cmos共源放大电路">有源负载CMOS共源放大电路</span></h2><h3><span id="mos管有源负载">MOS管有源负载</span></h3><p>有两种接法</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8oumadaakj30lm0enq5g.jpg" alt="image.png"></p><h3><span id="pmos二极管负载">PMOS二极管负载</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xpl19oudj30l10cgtbh.jpg" alt="image.png"></p><ul><li>大概是1/g~m2~</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xpnu3tmmj30l70eoaec.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xppzc5mbj30kg0esaf7.jpg" alt="image.png"></p><ul><li>受直流增益影响小</li><li>宽长比不对称时增益大（缺点）</li></ul><h3><span id="pmos电流源负载">PMOS电流源负载</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xpsdth3aj30ki0cpgp8.jpg" alt="image.png"></p><h3><span id="两种有源负载的比较">两种有源负载的比较</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7xpwp1f17j30ku0a3juw.jpg" alt="image.png"></p><h2><span id="小结">小结</span></h2><ul><li><p>CMOS共源放大电路及其仿真</p><ul><li>基于HSPICE</li><li>对电路特性有全面的了解</li></ul></li><li><p>采用共源共栅结构</p><ul><li>输出电阻可以进一步提高</li><li>实现更大的电压增益</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大英_课堂笔记</title>
      <link href="/2022/11/08/%E5%A4%A7%E8%8B%B1-%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/08/%E5%A4%A7%E8%8B%B1-%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>经过上次小测突然想听一下大英课了TAT</p></blockquote><h1><span id="unit5">Unit5</span></h1><h3><span id="idiom">idiom</span></h3><ul><li>Homer sometimes nods</li></ul><p><em>智者千虑，必有一失</em></p><ul><li>birds of a feather flock together</li></ul><p><em>物以类聚，人以群分</em></p>]]></content>
      
      
      <categories>
          
          <category> 大学英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经济法理论与实务_经济法理论基础</title>
      <link href="/2022/11/07/%E7%BB%8F%E6%B5%8E%E6%B3%95%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AE%9E%E5%8A%A1/"/>
      <url>/2022/11/07/%E7%BB%8F%E6%B5%8E%E6%B3%95%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AE%9E%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1><span id="一-经济法基础理论">一 经济法基础理论</span></h1><h2><span id="课程体系介绍">课程体系介绍</span></h2><h3><span id="民法典">民法典</span></h3><ol><li>唯一一部1000条以上</li><li>合同编526条，占半壁江山</li><li>讲究用字精确性<ol><li>违反合同-&gt;违约</li><li>取消月的表达，改为30日60日90日</li><li>签名（顿号）盖章或按指印：顿号-&gt; &amp;&amp; 不是 ||<ol><li>按指印作为唯一生效条件风险太大</li><li>硬性管理制度：任何内部员工拿出只盖了公章的文书无效；必须要法律代表人同时签名</li></ol></li><li>一般写按指印而不是按手印</li><li>取消了所有的签字表达，用签名代替</li></ol></li></ol><h3><span id="第三章-公司法">第三章 公司法</span></h3><p><strong>对赌协议</strong></p><p>​<a href="https://baike.baidu.com/item/%E5%AF%B9%E8%B5%8C%E5%8D%8F%E8%AE%AE/3004345?fr=aladdin">对赌协议</a>实践中俗称的“对赌协议”，又称估值调整协议，是指投资方与融资方在达成股权性融资协议时，为解决交易双方对目标公司未来发展的不确定性、信息不对称以及代理成本而设计的包含了股权回购、金钱补偿等对未来目标公司的估值进行调整的协议。</p><h3><span id="第六章-经济竞争法">第六章 经济竞争法</span></h3><p>反不正当竞争法</p><p>消费者权益保护法</p><ul><li><p>宣传不用极限词：最好吃的</p><ul><li><p>一个极限词罚20万</p></li><li><blockquote><p>理想车营销</p><p>西溪糖炒板栗</p></blockquote></li></ul></li></ul><h3><span id="第七章-知识产权法">第七章 知识产权法</span></h3><p>商标法</p><p>专利法</p><ul><li>不要随意转发公众号文章</li><li>公司作宣传不要随便用字体和图片，容易被告侵权</li></ul><h3><span id="第八章-金融法">第八章 金融法</span></h3><p>银行法</p><h3><span id="第九章-税法">第九章 税法</span></h3><p>税法基础知识和简单计算</p><p>新的税种及风险</p><h3><span id="第十章-劳动法">第十章 劳动法</span></h3><p>工伤认定：上下班途中发生交通事故是不是工伤？</p><ol><li>如果劳动者承担事故主要责任以上的就不是工伤，否则是工伤</li><li>另外还要看路线是否是合理路线</li><li>请假是否合理理由</li></ol><blockquote><ol><li>加班下班 电瓶车出车祸</li><li>玉泉女教师下班</li><li>员工没请假，提前15分钟下班，同等责任</li><li>上班途中撞护栏，单方事故全责</li></ol></blockquote><h3><span id="第十一章-经济仲裁">第十一章 经济仲裁</span></h3><h2><span id="正式内容">正式内容</span></h2><h3><span id="何为法">何为法？</span></h3><h4><span id="外国的法律图腾">外国的法律图腾</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wsy9pj4kj30go0x07ei.jpg" alt="src=http __www.zhongzhengtd.com_upload_image_20200601_15909977434968366.jpg&amp;refer=http __www.zhongzhengtd.webp"></p><h4><span id="中国的法律图腾">中国的法律图腾</span></h4><ul><li>法，刑法。量刑标准平得像水面一样，因此字形采用“水”作边旁；廌，是用来在疑犯中撞触不正直真犯的动物，判别出真犯后将其除灭，所以字形也采用“去”作边旁。“法”，今天文字的写法省去“廌”。</li><li>法院门口放：獬豸又称獬廌、解豸（xiè zhì），是中国古代神话传说中的<a href="https://baike.baidu.com/item/%E7%A5%9E%E5%85%BD/24510?fromModule=lemma_inlink">神兽</a>，体形大者如牛，小者如羊，类似<a href="https://baike.baidu.com/item/%E9%BA%92%E9%BA%9F/5574?fromModule=lemma_inlink">麒麟</a>，全身长着浓密黝黑的毛，双目明亮有神，额上通常长一角。獬豸拥有很高的智慧，懂人言知人性。它怒目<strong>圆睁</strong>，能辨是非曲直，能识善恶忠奸，发现奸邪的官员，就用角把他触倒，然后吃下肚子。它能辨曲直，又有神羊之称，它是勇猛、公正的象征，是司法“正大光明”“清平公正”“光明天下”的象征。<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wssomnv4j30rp0t119j.jpg" alt="5366d0160924ab18972b3127d4b2f1cd7b899e519dc0.png"></li></ul><blockquote><p>貔貅：招财 银行门口</p><p>狴犴：监狱门口</p><p>香港法院门口也是正义女神</p><p>孝感监狱欢迎您</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wt2ukzatj30b407tt9h.jpg" alt="5b5565a0441b3b8fc4880742068d384c.jpg"></p></blockquote><h3><span id="何为法商">何为法商</span></h3><p>法商，是具有不同先天禀赋的公民对法律及其他社会规范的认知、体会、实践乃至达到信仰的程度体现，是内心对法律和其他社会规范作用的认同感受和外在行为的有机统一。</p><p><a href="https://baike.baidu.com/item/%E9%BB%84%E5%85%89%E8%A3%95/216703?fromModule=lemma-qiyi_sense-lemma">黄光裕</a></p><h3><span id="二-法律关系三要素">二 法律关系（三要素）</span></h3><h4><span id="1-主体">1. 主体</span></h4><ol><li>自然人</li><li>法人</li></ol><p>==自然人==</p><h4><span id="1-民事权利能力">1. 民事权利能力</span></h4><p>享有民事权利承担民事义务的资格</p><p>始于出生，终于死亡</p><ul><li><p>出生</p><ul><li><p>独立呼吸说</p></li><li><p>脱离母体说</p></li><li><p>头出来说</p></li></ul></li><li><p>死亡</p><ul><li>脑死亡</li></ul></li><li><p>罪犯有民事权利能力</p><blockquote><p>第一顺序继承人：配偶子女父母</p></blockquote></li><li><p>怀孕期间丈夫去世</p><ul><li>胎儿有继承权，保留继承份额</li><li>胎儿是死胎，遗产是张三的，张三父母作为第一顺序继承人可以继承</li><li>胎儿出生重大疾病，抢救后一分钟死亡，遗产是胎儿的，胎儿母亲继承</li></ul></li><li><p>宣告死亡</p><ul><li>下落不明满四年</li><li>因意外事件，下落不明满二年</li><li>婚姻关系：自宣告死亡之日解除，撤销宣告死亡之日起自行恢复；配偶不愿恢复除外</li><li>子女关系：收养关系不得撤销</li></ul></li></ul><h4><span id="2-民事行为能力">2. 民事行为能力</span></h4><p>完全民事行为能力人：18以上</p><p>限制民事行为能力人：8-18</p><p>无民事行为能力人：8以下；完全不能辨认行为后果精神病人</p><p>==法人==</p><h4><span id="四要素">四要素</span></h4><ol><li>依法成立</li><li>名称，组织机构和场所</li><li>资金</li><li>独立承担民事责任<ol><li>母公司子公司总公司都是法人，分公司不是</li></ol></li></ol><h3><span id="三-所有权">三 所有权</span></h3><ol><li>定义</li></ol><p>所有权，是指所有权人依法对自己的财产享有的占有、使用、收益和处分的权利，它是最为重要的物权形式。所有权是最重要的物权与财产权，它是交易发生的前提，也是交易追求的结果。</p><p>处分是核心权</p><ol start="2"><li>特征<ol><li>绝对性：不需要借助他人的积极行为</li><li>排他性：属于物权，排除他人对其行使权利的干涉，<strong>同一物上只能存在一个所有权</strong></li><li>完整充分的物权</li></ol></li><li>共有<ol><li>按份共有</li><li>共同共有</li></ol></li><li>所有权的保护<ol><li>请求确认所有权</li><li>请求恢复原状</li><li>请求返还原物</li><li>请求排除妨害</li><li>请求损害赔偿</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 通识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子电路设计实验_绪论</title>
      <link href="/2022/11/07/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C-%E7%BB%AA%E8%AE%BA/"/>
      <url>/2022/11/07/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C-%E7%BB%AA%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1><span id="课程安排">课程安排</span></h1><h2><span id="主要内容">主要内容</span></h2><p>心电图信号采集处理</p><h5><span id="主要指标">主要指标</span></h5><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wn40z52hj30d50b3n29.jpg" alt="image.png"></p><h2><span id="注意事项">注意事项</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wn7c4po6j33kg2ocnpe.jpg" alt="lADPKG0OS0nJrszNDYzNEhA_4624_3468.jpg"></p><h2><span id="课程进度">课程进度</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wn8zi13jj31be0zkn5r.jpg" alt="6396079a5ff96dafdf935b50e425909.jpg"></p><h1><span id="实验过程">实验过程</span></h1><ol><li><p>AD搭建</p></li><li><p>PCB制作</p><ol><li>PCB板设计</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wnmhcm7qj31be0zkn7t.jpg" alt="97363380a468fecb31d7b75496afd66.jpg"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wnpxon48j31be0zk142.jpg" alt="36d1b743e69ce3845d9b0d0e5a2f6fa.jpg"></p><ol start="2"><li>AD软件使用</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7woiabf28j31be0zkaj1.jpg" alt="e144594a1bbc14266f902c5d21ab54c.jpg"></p><ul><li>滤波电容一定要放在电原附近</li><li>安装孔：中间3mm 外圈6mm</li></ul></li><li><p>仿真测试</p></li><li><p>人体实验</p></li><li><p>撰写报告</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 电子电路设计实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_GRAPH ALGORITHMS</title>
      <link href="/2022/11/07/DS-GRAPH-ALGORITHMS/"/>
      <url>/2022/11/07/DS-GRAPH-ALGORITHMS/</url>
      
        <content type="html"><![CDATA[<h2><span id="definitions">Definitions</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wahxht1dj30g009fwjd.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wam17jw8j30ft0asq8o.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wauw8socj30fv0bbq9h.jpg" alt="image.png"></p><h3><span id="adjacency-matrix">Adjacency Matrix</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7wazo72j8j30tc03vq3k.jpg" alt="image.png"></p><h3><span id="adjacency-lists">Adjacency Lists</span></h3><blockquote><p>if there are little edges</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_THE DISJOINT SET ADT</title>
      <link href="/2022/11/07/DS-THE-DISJOINT-SET-ADT/"/>
      <url>/2022/11/07/DS-THE-DISJOINT-SET-ADT/</url>
      
        <content type="html"><![CDATA[<h2><span id="the-dynamic-equivalence-problem">The Dynamic Equivalence Problem</span></h2><h3><span id="ds">DS</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w8o6nilkj30ki05ktbx.jpg" alt="image.png"></p><h3><span id="operations">Operations</span></h3><p>(1)  Union( i, j ) ::= Replace Si and Sj by S = Si  S∪j</p><p>(2)  Find( i ) ::= Find the set Sk which contains the element i.</p><h2><span id="basic-data-structure">Basic Data Structure</span></h2><h3><span id="union-i-j">Union ( i, j )</span></h3><blockquote><p>Make Si a subtree of Sj , or vice versa.  That is, we can set the parent pointer of one of the roots to the other root.</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w8qze3loj30gs03xgmx.jpg" alt="image.png"></p><h4><span id="implementation_1">implementation_1</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w8sce2g8j30hc05wq4n.jpg" alt="image.png"></p><p><em>remove the green ptr</em></p><p>store the name of sets in an array</p><h4><span id="implementation_2">implementation_2</span></h4><p>S [ element ] = the element’s parent</p><p>S [ root ] = 0  and  set name = root index</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w8x2353sj30bu03gq3n.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w8xcq6e6j30ob03gq40.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w8y6hg10j30ic0200sx.jpg" alt="image.png"></p><pre><code class="language-c">void  SetUnion ( DisjSet S, SetType Rt1, SetType Rt2 )&#123; S [ Rt2 ] = Rt1 ; &#125;</code></pre><h3><span id="find-i">Find ( i )</span></h3><h4><span id="implementation_1">implementation_1</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w953uco1j30e2052weu.jpg" alt="image.png"></p><h4><span id="implementation_2">implementation_2</span></h4><pre><code class="language-c">SetType  Find ( ElementType X, DisjSet S )&#123;       for ( ; S[X] &gt; 0; X = S[X] ) ;    return  X ;&#125;</code></pre><h3><span id="analysis">Analysis</span></h3><p>Practically speaking, union and find are always paired.</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w9dznocdj30io0c5tb8.jpg" alt="image.png"></p><h2><span id="smart-union-algorithms">Smart Union Algorithms</span></h2><h3><span id="union-by-size">Union-by-Size</span></h3><h3><span id="always-change-the-smaller-tree">– Always change the smaller tree</span></h3><p>S [ Root ] = – size;</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w9l8326pj30er03rabx.jpg" alt="image.png"></p><h3><span id="union-by-height">Union-by-Height</span></h3><h3><span id="always-change-the-shallow-tree">– Always change the shallow tree</span></h3><h2><span id="path-compression">Path Compression</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7w9vynbx8j305l020glm.jpg" alt="image.png"></p><pre><code class="language-c">SetType  Find ( ElementType  X, DisjSet  S )&#123;   ElementType  root,  trail,  lead;    for ( root = X; S[ root ] &gt; 0; root = S[ root ] )        ;  /* find the root */    for ( trail = X; trail != root; trail = lead ) &#123;       lead = S[ trail ] ;          S[ trail ] = root ;       &#125;  /* collapsing */    return  root ;&#125;</code></pre><h2><span id="worst-case-for">Worst Case for</span></h2><p>???</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_错题</title>
      <link href="/2022/11/06/DS-%E9%94%99%E9%A2%98/"/>
      <url>/2022/11/06/DS-%E9%94%99%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2><span id="tree">TREE</span></h2><blockquote><p>1</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7v2gcdpu4j31570iewii.jpg" alt="image.png"></p><p>这题有点坑的，中序遍历顺序是左中右，这样的话不是从左下角的结点开始，而是最左的那个，所以建树的结果是这样的</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7v2n99om7j3105123adb.jpg" alt="lADPKHQpSHeRcqbNBVvNBRU_1301_1371.jpg"></p><p>因此选B</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 错题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二上_期中_复习笔记</title>
      <link href="/2022/11/04/%E5%A4%A7%E4%BA%8C%E4%B8%8A-%E6%9C%9F%E4%B8%AD-%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/04/%E5%A4%A7%E4%BA%8C%E4%B8%8A-%E6%9C%9F%E4%B8%AD-%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1><span id="大物">大物</span></h1><h2><span id="公式amp定理">公式&amp;定理</span></h2><ol><li>静电场环路定理</li><li>常见体的电势分布<ol><li>点电荷</li><li>圆环</li><li>无限长直线</li><li>半圆环</li><li>球壳</li></ol></li><li>常见体的电场分布<ol><li>点电荷</li><li>圆环</li><li>无限长直线</li><li>圆柱形电容器</li><li>无限大平板</li></ol></li><li>常见电容<ol><li>圆柱形</li><li>平行板</li><li>球形</li></ol></li><li>常见体磁场<ol><li>无限长直线</li><li>圆线圈</li><li>螺线管</li><li>载流圆柱体</li><li>环柱体</li><li>螺绕环</li><li>无限长薄片</li><li>无限大薄片</li><li>运动点电荷</li></ol></li></ol><h2><span id="易错">易错</span></h2><ol><li>磁力矩 pm×B</li><li>多用高斯定理</li><li>D = 自由电荷，与极化电荷无关</li><li>相对介电常数和介电常数</li></ol><h2><span id="错题">错题</span></h2><blockquote><ol><li>这题一开始没看懂</li></ol></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7v8jip05kj335s2dc7wj.jpg" alt="lADPJxDj0By_p8vNDADNEAA_4096_3072.jpg"></p><blockquote><ol start="2"><li>对于线密度的理解不到位</li></ol></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7v8ky42djj335s1hnu0x.jpg" alt="lADPKG0OSzC5ztbNB4vNEAA_4096_1931.jpg"></p><blockquote><ol start="3"><li>作业里错过一次惹</li></ol></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7v8ln6or7j334g0nqe26.jpg" alt="lADPKG0OSzC5zuvNA1bND9A_4048_854.jpg"></p><p><img src="C:%5CUsers%5Cants%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221106111725019.png" alt="image-20221106111725019"></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二上_期中_复习</title>
      <link href="/2022/11/04/%E5%A4%A7%E4%BA%8C%E4%B8%8A-%E6%9C%9F%E4%B8%AD-%E5%A4%8D%E4%B9%A0/"/>
      <url>/2022/11/04/%E5%A4%A7%E4%BA%8C%E4%B8%8A-%E6%9C%9F%E4%B8%AD-%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2><span id="大物">大物</span></h2><ul><li>[x] 11.4 PPT+课本证明+完善笔记</li><li>[ ] 11.4 作业不会的重写</li><li>[x] 11.5 刷完期中真题</li></ul><blockquote><p>11.4那天有半天浪费在路上，作业就没看了直接上真题</p></blockquote><h2><span id="ds">DS</span></h2><ul><li>[ ] 11.10复习完知识点，写掉HW06和HW07以及HW04的代码</li><li>[ ] 11.11刷题</li><li>[ ] 11.13下午整理复习</li><li>[ ] 11.13下午晚上抓紧补课补作业</li></ul><h2><span id="复变">复变</span></h2><ul><li>[ ] 11.11刷完PPT和上面题目</li><li>[ ] 11.12刷完真题</li></ul><h2><span id="电基">电基</span></h2><ul><li>[ ] 11.15开始考虑</li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概统_讨论题四_用excel进行数据分析</title>
      <link href="/2022/11/03/%E6%A6%82%E7%BB%9F-%E8%AE%A8%E8%AE%BA%E9%A2%98%E4%B8%89-%E7%94%A8EXCEL%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
      <url>/2022/11/03/%E6%A6%82%E7%BB%9F-%E8%AE%A8%E8%AE%BA%E9%A2%98%E4%B8%89-%E7%94%A8EXCEL%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1><span id="概统-讨论题四-用excel进行数据分析">概统  讨论题四  用EXCEL进行数据分析</span></h1><p>​</p><blockquote><p>本文参考经典案例：泰坦尼克号生存率的分析</p><p>出处：<a href="https://www.finebi.com/2021/jdcbj">FineBI</a></p></blockquote><h3><span id="一-明确目的">一、明确目的</span></h3><p>1912年泰坦尼克号撞上冰山沉没，船上2224名乘客和机组人员中有1502人遇难，幸存下来的人是出于运气还是存在一定的规律？这是我们比较关心的，所以就要提出问题：</p><p>那些人士生还的可能性大？</p><p>其次了解数据，数据集总共有以下的字段，其中name、sex、cabin、embarked、ticket是字符串类型，pclass和survived虽然是数值型，但其含义是标签，我们分别从舱位、乘客、船票和地域的维度出发来分析。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B1.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><h3><span id="二-数据处理">二、数据处理</span></h3><p>通过查看，发现Age、fare、embarked、cabin字段都是有缺失的，下面我们一个一个来看。</p><h4><span id="1-age缺失值处理">1、age缺失值处理</span></h4><p>筛选age一列为空的有263条数据，缺失率为20%，可以全部填充为年龄的均值或众数，也可以进一步地分析，发现年龄缺失的数据里三等舱的最多，占总缺失值的79%，而三等舱里的未生还的男性占比最多，因此也可以用三等舱年龄的平均值来填充。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B2.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>这里为了保持数据的真实性，就不做填充处理了</p><h4><span id="2-fare缺失值处理">2、fare缺失值处理</span></h4><p>筛选发现fare（票价）只缺失了一个值，我们把它找出来，发现可以用同类型的均值填充掉。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B3.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>因此我们筛选三等舱、年龄大于60岁的，登船港口为S的男性的均值票价7来填充这个缺失值。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B4.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><h4><span id="3-embarked缺失值处理">3、embarked缺失值处理</span></h4><p>embarked登船港口字段也有2个缺失值，筛选出来看下。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B5.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>进一步观察到，这两个旅客都是单独出行，没有家人（从sibsp和parch列均为0得知)，延续对fare缺失值处理的思路，寻找同类型的进行填充。对第一个旅客，筛选出头等舱的年龄在35~40岁的女性中，港口最多的值填充进去，结果是S。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B6.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>同样的方法，对第二个旅客，筛选头等舱年龄在60~65岁的女性中，登陆港口最多的值，结果也为S。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B7.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><h4><span id="4-cabin缺失值处理">4、cabin缺失值处理</span></h4><p>对于cabin（客舱）字段缺失值达到了77%，缺失太多了，就不做填充处理了，直接保留或删除，这里先保留着吧。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B8.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><h3><span id="三-数据分析">三、数据分析</span></h3><h4><span id="1-舱位维度">1、舱位维度</span></h4><p>****pclass****对舱位和生还情况分析，插入数据透视表</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B9.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>生还的人里，头等舱的占比达到了40%。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B10.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>对每个舱位的生存死亡情况做百分比堆积柱形图，可以看到，头等舱生还的人数占比最多，达到61.92%，三等舱的生还人数占比最少，仅25.33%，所以还是那句老话，钱虽然不是万能的，但没钱@#%&amp;^…</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B11.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>****carbin****对carbin（客舱号）做透视，可以看到有295个唯一值，基本上是一个客舱只住一个人。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B12.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>但是也发现了有1个客舱对应2个人以上的情况，进一步地把舱位拉进去对比一下，发现三等舱的数值很少，说明carbin缺失值大部分是三等舱缺失的，意思是三等舱的人没有客舱？大通铺？这个有待进一步查证。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B13.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>另外发现三等舱有客舱的都是E/F/G开头的客舱号，而头等舱A/B/C就较多，猜测客舱号是随着舱位的降低按字母升序排列的。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B14.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><h4><span id="2-乘客维度">2、乘客维度</span></h4><p>****name****name姓名列没有什么有价值的信息，不过可以进一步思考的是，姓名里其实是对应了头衔的，比如Mr是已婚男士，Mrs是已婚女士等，但是这里就先删除了。</p><p>****sex****对性别和生还情况进行分析</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B15.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>生还的人中女性占比67.8%，远高于男性的32.2%。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B16.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>女性生还人数占女性总数的72.75%，远远大于男性生还人数占男性总数的19.10%。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B17.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"> <img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B17.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>****性别&amp;舱位****可以顺便看一下舱位和性别的关系，因为男性人口基数大，所以不管是哪个舱位，男性人数都是多于女性的，同理，各个舱位都是女性获救的人数最多。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B18.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>但是呢，头等舱女性的生还比例为97%，远高于其他两个舱位，且三等舱女性的生还比例只有49%。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B19.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>****age****对年龄和生还情况进行分析，这里因为年龄有缺失，仅对有数值的进行分析。</p><p>首先对年龄做一个简单的描述统计，用【数据分析】里的【描述统计】功能，可以看到年龄最大值为80岁，最小值为0.17岁，平均值为29.88岁，年龄中位数为28岁，众数为24岁。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B20.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>进一步地，可以观察一下年龄的分布情况，做直方图，5岁为一组，可以看到，乘客的年龄主要集中在15-30岁，其中20-25岁的年轻人最多。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B21.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>了解了年龄大致的分布后，就要来看特定人群的生还情况了，我们将年龄分为：</p><p>少年（0~15岁）</p><p>青年（15~40岁）</p><p>中年（41~65岁）</p><p>老年（66岁以上）</p><p>先做一个分组的表，用vlookup的模糊匹配实现分组<br>在age旁新建一列age分组的辅助列，输入公式</p><p>=VLOOKUP(E2,Sheet2!$B<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>18</mn><mo>:</mo></mrow><annotation encoding="application/x-tex">18:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>C$21,2,1)</p><p>Sheet2!18:21这个区域就是上图预先设置好的分组区域。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B22.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>再对age分组和survived进行透视</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B23.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>可以看到生还的人中青年、少年的占比最多，老年占比最少。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B24.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>对各年龄段分组的死亡、生存情况做百分比堆积柱形图，得到结果，少年获救的人数比例最高</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B25.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>****sibsp****对sibsp字段（兄弟姐妹妹/配偶的个数）分析，透视后可以看到标签为0，也就是说没有亲戚的人是船上乘客的大多数。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B26.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>同样因为基数大的缘故，生存下来的人中，亲戚数为0的占比最多达到了61.8%。<br>对各标签做百分比堆积柱形图，这才是比较有意义的结果，可以看到，有1个亲戚数的人群获救的比例最高。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B28.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>****parch****对parch字段分析（父母/小孩个数），同样可以看到，没有父母/小孩的人数是船上总人数的76%，同样，这部分人群获救的数量也最多。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B29.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"> <img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B30.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>做百分比堆积柱形图，可以看到有3个父母/小孩的人群获救的比例最大，达到了62.5%。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B31.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><h4><span id="3-船票维度">3、船票维度</span></h4><p>****fare****对Fare（票价）字段分析，首先比较关注的是票价和舱位是否存在相关性，正常的逻辑是舱位越高，票价越高，这里算出pclass和fare的相关系数是-0.56，还是比较相关。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B32.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>还记得上面我们用vlookup的模糊匹配分组，还可以直接用数据透视表分组。透视以后组合，选择50步长一组，可以再对票价和舱位透视看看，看到100以上的高票价全都是头等舱，二等舱和三等舱的票价大部分为0~50。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B33.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B34.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>****性别&amp;票价****女性的票价均价要高于男性</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B35.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>****性别&amp;舱位&amp;票价****头等舱的均价远高于其他两个舱，每个舱女性的均价都要高于男性，其中票价的最大值512出自头等舱的女性。另外一个比较有意思的现象是，票价为0的居然都是男性。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B36.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>都写到这儿了，可以再引申出一个问题，票价到底和什么有关？性别？登陆港口？舱位？客舱？这里我们就不探索下去了。</p><p>接下来，50一组看一下fare的分布情况，可以看到票价为0~50的占了船上乘客的82%。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B37.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>同时存活数量最多的还是0~50票价的人群，因为它的基数本身就很大。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B38.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>从各票价分组的角度来看，做百分比堆积柱形图，可以看到，500-550票价的人群存活比例为100%，而0-50票价的存活比例只有32%。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B39.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>****ticket****ticket字段是船票信息/代号，没有特别大的分析意义，这里也就直接删除了。</p><h4><span id="4-地域维度">4、地域维度</span></h4><p>****embarked****对embarked（登船港口）字段分析，透视后发现S港口登船的人数最多，从堆积柱形图中可以看到，C扣登船的生成比例最高。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B40.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"> <img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B41.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p><strong>四、生还率同什么有关</strong></p><p>生还率同什么相关？这个是我们最关心的，这个问题其实就是survived字段同其他字段的相关系数。</p><p>sex列是字符型数据，要映射成数值，我们添加一列命名为性别的辅助列，male为1，female为0.</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B42.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>再添加一列f_num字段，是sibsp和parch的和，意思是家庭成员数。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B43.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>embarked字段分解为3个辅助列，港口-S，港口-C，港口-Q，同时输入公式：</p><p>=IF(N2=“S”,1,0)</p><p>如果embarked这个字段是S，那么港口-S列为1，港口-C、港口-Q为0，以此类推。</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B44.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>同理对舱位pclass也做同样的处理</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B45.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>用【数据分析】里的【相关系数】功能，可以看到每个字段的相关系数</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B46.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"><br>降序排列一下，就可以看出生还率同什么相关了</p><p><img src="https://www.fanruan.com/bw/wp-content/uploads/2020/09/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A1%88%E4%BE%8B47.jpg" alt="excel数据分析案例,excel数据分析实战,怎么用excel数据分析,数据分析维度"></p><p>所以回到我们最初的问题：</p><p>哪些人生还的可能性大？</p><p><em><strong>*总结一下:*</strong></em></p><p>虽然三等舱的人数最多（54%），但头等舱生还的比例最高（62%）</p><p>虽然男性的人数（64%）多于女性，但女性的生还率（72%）远高于男性（19%）</p><p>头等舱女性的生还比例（97%）远高于三等舱女性的生还比例（49%）</p><p>15-40岁的青年人数最多（53%），生还率最高的是0~15岁的少年（56%）</p><p>亲戚的个数为0的人数最多（68%），为1的生还率最高（51%）</p><p>父母/孩子个数为0的人数最多（76%），为3的生还率最高（63%）</p><p>票价在0-50范围内的人数最多（82%），但500~550范围内票价的人生还率为100%</p><p>S港口登船的人数最多（70%），但是C港口生还率最高（56%）</p>]]></content>
      
      
      <categories>
          
          <category> 概率论与数理统计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS_Project2_Hard_VotingTree</title>
      <link href="/2022/11/03/DS-Project2-Hard-VotingTree/"/>
      <url>/2022/11/03/DS-Project2-Hard-VotingTree/</url>
      
        <content type="html"><![CDATA[<h1><span id="ds_project2_hard_votingtree">DS_Project2_Hard_VotingTree</span></h1><blockquote><p>这是我见过的最难懂的题目</p></blockquote><h2><span id="题目描述">题目描述</span></h2><p>Given two 2-dimentional shapes A and B which are represented as closed  polygons（闭合多边形）, our goal is to find the optimal correspondences (or “match”)  between points in A and B. A simple example is illustrated below.</p><p><img src="https://images.ptausercontent.com/a90feeb0-6daf-4625-9fee-fb7a54bd4823.JPG" alt="sample.JPG"></p><p>An optimal correspondence (match) between the two shapes are {(a,q),(b,r),(c,p)}.</p><p>In this project, you are supposed to solve the aforementioned problem with a combination of various data structures including arrays and  voting trees. The basic idea is to <strong>build trees, where each pair of  points in A and B can form a treenode</strong>. Starting from a node (as a root  node), you can expand a tree by adding another tree node conditional on  that the expanded child node contributes to a valid match between A and  B. For example, if you start from (m1,n1) and extend it with (m2,n2), then the following conditions must hold: m1\=m2, n1\=n2, and more importantly the match should be <strong>monotonic</strong>, that is, the list of indices of { m1,m2,m3,⋯ } should be monotonically increasing or decreasing, so is true with { n1,n2,n3,⋯ }. All these extensions lead to a set of trees within which each tree  path represents a potential match between A and B. Then your task is to  let these paths <strong>vote</strong> for the confidences of possible matches.</p><p>Obviously, if we simply aggregate all valid paths, the search will  quickly grow to an exponential complexity (count how many possible paths out there!). Thus, an efficient expanding strategy is required to <strong>stop  tree expansion if some requirements are violated</strong>. If the current tree  path is obviously a bad match, for example, the match {(a,p),(c,r)} in  the above figure has a large variance measure in terms of path lengths  and interior angles, the tree expansion from that node should be  terminated. We leave here for you to <strong>design and experiment out the  stopping conditions</strong>. These conditions also determine how efficient your  algorithm will be. So, take your risk.</p><p>After the tree expansion, we start the voting process, which operates as follows: for each tree path P=(m1,n1),(m2,n2),⋯,(mk,nk), each pair within the path will receive a vote. To implement this, we  can put all elements in shape A and all elements in shape B into a vote  table. Take the above example for an instance, the table will look like  the following:</p><p><img src="https://images.ptausercontent.com/cb578c94-1316-4e6d-afb8-6dc40dc40a5a.JPG" alt="table.JPG"></p><p>Each element in the table stores the total votes of that pair. If a pair (mi,ni) appears in a tree path, then the corresponding score in the table will  increase by 1. A pair with higher votes indicates a more reliable match. Finally, our task is to search for the best match between A and B.</p><p>Various approaches can be taken here to solve the problem. <strong>Bonus  points (+2 pts.)</strong> would be given if you could experiment out at least 2  different solutions to find an optimal match from the table and compare  their performances in the report. Make sure that your best solution does not violate the monotonicity property of the match.</p><h3><span id="input-specification">Input Specification:</span></h3><p>Each input file contains one test case. For each case, the first line gives two positive integers M and N (3≤M,N≤100) which are the total number of points in shape A and B respectively. The next M+N lines each contains the x and the y coordinates (in float type) of a point in shape A and B, respectively, in clockwise order. Hence for each shape, the i-th point given is indexed as i (i=1,⋯,M or N).</p><h3><span id="output-specification">Output Specification:</span></h3><p>For each test case, print the correspondence points in the best match in the format “(i1,i2)”, where i1 is the index of a point in shape A, and i2 in shape B. Each pair in a line, given in increasing order of shape A indices.</p><h3><span id="sample-input">Sample Input:</span></h3><pre><code class="language-in">3 40 43 00 08 48 14.25 68 6</code></pre><h3><span id="sample-output">Sample Output:</span></h3><pre><code class="language-out">(1, 2)(2, 3)(3, 4)</code></pre><p><strong>Remarks:</strong> an interesting observation you may find in  this problem is that if there is a good set of good matches at the root  level, then the expansion may quickly lead to an explosion as the node  number is large and there will be many repeated tree paths participating in the voting process. In this project you are not required to solve  this issue. But you can think on it. Another thing to consider is how to extend this technique to solve graph matching problems, in which cases  you may require that the graphs do not contain nodes with degree of 2.</p><h3><span id="grading-policy">Grading Policy:</span></h3><ul><li>Chapter 1: Introduction (6 pts.)</li><li>Chapter 2: Algorithm Specification (12 pts.)</li><li>Chapter 3: Testing Results (20 pts.)</li><li>Chapter 4: Analysis and Comments (10 pts.)</li><li>Write the program (50 pts.) with sufficient comments.</li><li>Overall style of documentation (2 pts.)</li></ul><blockquote><p>看完已经懵了，别急，整理一下题目要求</p></blockquote><h2><span id="题目要求">题目要求</span></h2><ol><li>产生两组测试点，一组用于被拟合，一组用来找点拟合，并且满足第一组点个数小于第二组点</li><li>自己建立“足够相似”的判断标准</li><li>以这个标准在第二组数中找到对应的点，其生成的图形要与第一组点“足够相似”</li><li>建树，每个节点是两组数中匹配的数对</li><li>若在找路径的过程中发现该匹配一定不对就停止建树</li></ol><h2><span id="题目难点">题目难点</span></h2><ol><li>随机生成保证有匹配的点集，或者，至少要保证有匹配的概率不能过小。这里一定需要人为增大匹配成功的概率</li><li>足够相似的标准该如何制定？</li></ol><blockquote><p>艹还是懵了TAT</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大英期中复习</title>
      <link href="/2022/11/03/%E5%A4%A7%E8%8B%B1%E6%9C%9F%E4%B8%AD%E5%A4%8D%E4%B9%A0/"/>
      <url>/2022/11/03/%E5%A4%A7%E8%8B%B1%E6%9C%9F%E4%B8%AD%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1><span id="vocabulary">Vocabulary</span></h1><blockquote><p>艹 错这么多是我没想到的55555/(ㄒoㄒ)/~~</p></blockquote><h2><span id="book2">BOOK2</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rnz0rey3j319d0k3grm.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro0yaq7gj31490jgtci.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro1q076aj30y90jojuh.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro2mt1h5j30z30jsq4s.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro3ux6zkj311y0jojw0.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro4e5kryj31010ja41r.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro5d9wvtj31130kegox.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro6jedg9j30wd0k941c.jpg" alt="image.png"><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro625zs9j313e0jitck.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro6wk2zej312y0lbq6g.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro7agsq6j311v0jkwi9.jpg" alt="image.png"><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7ro865pr3j311x0k3q7l.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rq4qqe71j30yz0miad7.jpg" alt="image.png"><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7roatufqhj30tv0jhacn.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rod54zk3j31ca0j9djm.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7roebyjowj30wt0k9ac4.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7roeq0flwj31c30iuwie.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rofaxheoj30v80js76s.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rog8akgwj31360jz0vz.jpg" alt="image.png"><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rohaeirjj30xc0jijv1.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rozsrocpj31c30jiq7j.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rp29drftj30z90lkdj5.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rp6zcbs8j30xw0k3jv4.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rp7cc0nlj30yx0khq65.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rp83qyqej319p0jbgpv.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpaeam1rj30q40ldjt9.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpb9s8otj30qc0ktdhu.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpdzfbkpj30rg0jqtar.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpetvo9rj30uk0kqmzs.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpg6bnrij30zo0jvn05.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpjrjhekj31390ks77u.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpnaow8pj30zy0jytbq.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpo5jmq7j30v40j377y.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rposce6ej312v0jq0vu.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpptzcftj30yd0ke777.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpqt8drvj31cf0jd7a7.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rprdojrlj30xj0iuacy.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpryuvbej311c0j4dl4.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpsamrb2j30x10kswh1.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpvtp3bhj30r70jkmy9.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpx40zxbj30wp0jj75v.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rpyddrhsj311y0jfn0b.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rq009v5mj316s0is41r.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rq0tigosj31490jgn0f.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7rq1rsvs5j30wu0l1n16.jpg" alt="image.png"></p><h1><span id="writing">Writing</span></h1><ul><li>try out for that</li><li>respond to your call</li><li>long-cherished chance</li><li>spontaneous willingness</li><li>serve as an inspiration to my peers</li><li>be exposed to authentic English background</li><li>problem-solving skills</li><li>once-in-a-lifetime</li><li>long-lasting anticipation</li><li>When it comes to my understanding of this position, it promises to be a fantastic/ terrific platform where I could fulfill my goal of making a difference in the life of the less fortunate.</li><li>serve others heart and soul</li><li>commit myself to the just cause</li><li>with my competence brought to full play</li><li>adjust to the new learning routine</li><li>ready myself in advance</li><li>to tackle the potential culturde shock and altered learning mode</li><li>worth paying attention to</li><li>natural splendor</li><li>meander through valleys and mountains</li><li>breathe some life into the city</li><li>cultural legacy</li><li>a witness of Chinese glorious civilization</li><li>trace back to</li><li>five millennia of human history</li><li>get a good view of the dramatic skyline</li><li>an iconic landmark that is equivalent to any in the world</li><li>be held in awe for</li><li>be charmed by</li><li>flock to</li><li>embrace the luxury of a relaxed homey stay</li><li>step away from the hustle and bustle of urban life</li><li>its charm lies in</li><li>a popular holiday getaway</li><li>the craddle of</li></ul><blockquote><p>考前祈祷一下课文填空不要不会做啊aaaa</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大学英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_05图形模式编程</title>
      <link href="/2022/11/02/%E6%B1%87%E7%BC%96_05_%E5%9B%BE%E5%BD%A2%E6%A8%A1%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
      <url>/2022/11/02/%E6%B1%87%E7%BC%96_05_%E5%9B%BE%E5%BD%A2%E6%A8%A1%E5%BC%8F%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1><span id="汇编_05图形模式编程">汇编_05图形模式编程</span></h1><h2><span id="基本概念">基本概念</span></h2><h3><span id="屏幕坐标">屏幕坐标</span></h3><p>(0,0) (79,0) (0,24) (79,24)</p><p>文本模式下，屏幕宽为80字符，高为25行</p><h3><span id="显卡两种模式">显卡两种模式</span></h3><ol><li>text mode  只能画字符</li><li>graphics mode 可以画点</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r55ftfhzj30z80ifjvu.jpg" alt="image.png"></p><pre><code class="language-asm">mov ax, 0B800h;表示屏幕坐标（0，0）对应的显卡内存地址，本身为RAM中的地址，与显卡中内存地址建立了映射mov es, axmov bx, 0;点亮红色字母Amov byte ptr es:[bx], 'A';在该处显示某个字符mov byte ptr es:[bx+1], 71h;7--背景 白 1--前景 蓝;点亮蓝色字母Bmov byte ptr es:[bx+2], 'B'mov byte ptr es:[bx+3], 74h;7--背景 白 1--前景 红;显卡里每两个字符决定一个字符的形状和颜色，体现在计算公式中要×2</code></pre><h2><span id="示例代码">示例代码</span></h2><h3><span id="文本模式下画字母">文本模式下画字母</span></h3><h4><span id="xy对应显卡内存偏移地址y80-x2">（x,y）对应显卡内存偏移地址（y×80 + x)×2</span></h4><pre><code class="language-asm">code segmentassume cs:codemain:   mov ax, 0B800h   mov ds, ax   mov di, 0   mov al, 'A'   mov ah, 17h; 蓝色背景,白色前景   mov cx, 2000again:   mov ds:[di], ax   mov bx, 200hwait_wait:   mov dx, 0wait_a_while:   sub dx, 1   jnz wait_a_while; jnz 不为0则跳转   sub bx, 1   jnz wait_wait   mov word ptr ds:[di], 0020h   add di, 2   sub cx, 1   jnz again   mov ah, 1   int 21h; 相当于AL=getchar();   mov ah, 4Ch   int 21hcode endsend main</code></pre><h3><span id="图形模式下画方块">图形模式下：画方块</span></h3><h4><span id="图形模式下求x-y显卡内偏移地址y320-x">图形模式下求（x, y）显卡内偏移地址：y*320 + x</span></h4><pre><code class="language-asm">code segmentassume cs:code; cs不需要赋值会自动等于codemain:   jmp begini  dw 0; 16位整数，控制行数 可以在code里定义变量   ; 编译后i 和 dw 均会消失，最后变成00h， 00h 两个字节   ; CPU会把变量的值当作指令来执行（若ffff，CPU解释指令失败，会死机(*Φ皿Φ*)   ; 将变量定义在code segement中时，1. 放末尾 2. 用jmp跳过   ; 也可以把这句移动到int 21后begin:   mov ax, 0013h; 显卡模式编号13：320*200 图形模式   int 10h;10号中断   mov ax, 0A000h;图形模式 16进制数最左若是字母，加0前缀，（和后缀h）以认为是数字   mov es, ax   ;(320/2, 200/2)   mov di, (100-20)*320+(160-20); (160-20,100-20) *320 转化为显卡内部的偏移地址 常数表达式，编译器会计算   ;mov cx, 41; rows=41   mov i, 41; 41行next_row:   ;push cx   push di; 把di的值暂时保存在堆栈中   mov al, 4; color=red   mov cx, 41; dots=41next_dot:   mov es:[di], al   add di, 1   sub cx, 1   jnz next_dot   pop di; 恢复di原值，左上角(x,y)对应的地址   ;pop cx; cx=41   add di, 320; 下一行的起点的地址   ;sub cx, 1; 行数-1   sub i, 1   jnz next_row   mov ah,0   int 16h;bios键盘输入,类似int 21h的01h功能   mov ax, 0003h; 显卡模式03：80*25文本模式   ;mov ah 00h   ;mov al 03h   int 10h; 切换到80*25文本模式   mov ah, 4Ch   int 21hcode endsend main</code></pre><h4><span id="常数表达式要求">常数表达式要求</span></h4><ul><li>只能包含常数，不能有变量or寄存器（要求在<strong>编译</strong>时就能算出值</li></ul><h4><span id="寄存器和变量">寄存器和变量</span></h4><ul><li>寄存器用光时可以用变量（在内存内，访问要消耗时间）</li><li>尽可能先把寄存器用光，（在CPU内）它速度比较快</li></ul><h4><span id="bios">BIOS</span></h4><ul><li>BIOS (basic input/output system) is the program a computer’s <a href="https://www.techtarget.com/whatis/definition/microprocessor-logic-chip">microprocessor</a> uses to start the computer system after it is powered on.</li><li>It also  manages data flow between the computer’s operating system (OS) and  attached devices, such as the hard disk, video adapter, keyboard, mouse  and printer.</li></ul><h3><span id="图形模式下画汉字">图形模式下：画汉字</span></h3><pre><code class="language-asm">data segmenthz db 04h,80h,0Eh,0A0h,78h,90h,08h,90h   db 08h,84h,0FFh,0FEh,08h,80h,08h,90h   db 0Ah,90h,0Ch,60h,18h,40h,68h,0A0h   db 09h,20h,0Ah,14h,28h,14h,10h,0Chdata endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   mov ax, 0A000h   mov es, ax   mov di, 0   mov ax, 0013h   int 10h   mov dx, 16   mov si, 0next_row:   mov ah, hz[si]   mov al, hz[si+1]; AX = 0480h = 0000 0100 1000 0000   add si, 2   mov cx, 16check_next_dot:   shl ax, 1; 刚移出的位会自动进入CF(进位标志)，fl寄存器中的CF位   jnc no_dot; 若没有进位即CF=0则跳到no_dot   ; jnc Jump near if not carry (CF=0) is_dot:   mov byte ptr es:[di], 0Ch; 0C 亮红色 4 + 8no_dot:   add di, 1   sub cx, 1   jnz check_next_dot   sub di, 16   add di, 320   sub dx, 1   jnz next_row   mov ah, 1   int 21h   mov ax, 0003h   int 10h   mov ah, 4Ch   int 21hcode endsend main</code></pre><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r0cdoterj30zp0k7app.jpg" alt="image.png"></p><h5><span id="循环左移">循环左移</span></h5><h5><span id="fl寄存器">FL寄存器</span></h5><ul><li>C语言无法控制，移位没有A方便</li></ul><h3><span id="文本模式下有花花的我">文本模式下：有花花的“我”</span></h3><pre><code class="language-asm">data segmenthz db 04h,80h,0Eh,0A0h,78h,90h,08h,90h   db 08h,84h,0FFh,0FEh,08h,80h,08h,90h   db 0Ah,90h,0Ch,60h,18h,40h,68h,0A0h   db 09h,20h,0Ah,14h,28h,14h,10h,0Chdata endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   mov ax, 0B800h   mov es, ax   mov ax, 0003h   int 10h   mov di, 0   mov dx, 16   mov si, 0next_row:   mov ah, hz[si]   mov al, hz[si+1]   add si, 2   mov cx, 16check_next_dot:   shl ax, 1   jnc no_dotis_dot:   mov byte ptr es:[di], '*'   mov byte ptr es:[di+1], 0Chno_dot:   add di, 2   sub cx, 1   jnz check_next_dot   sub di, 32   add di, 160   sub dx, 1   jnz next_row   mov ah, 1   int 21h   mov ah, 4Ch   int 21hcode endsend main</code></pre><h2><span id="语法分析">语法分析</span></h2><h3><span id="两个输入中断的比较">两个输入中断的比较</span></h3><pre><code class="language-asm">mov ah, 0int 16h; bois 输入键盘    ; 能输入方向键等控制键   ; 且输入的键盘不回显   ; 返回值为ax 六万mov ah, 1int 21h; 不接受特殊字符，page up等   ; 屏幕有回显echo   ; 返回值为al 256mov ah, 1int 16h; 检查键盘缓冲，若键盘缓冲有内容，则返回ZF=0（zero is true   ; 若键盘缓冲没有内容则返回ZF=1（zero is not true   ; 在缓冲区中检测曾经是否敲过键   ; 不会卡住循环，只是检测曾经敲的按键jz nokey; jump if zero(ZF=1时跳转)mov ah, 0int 16h; 读取缓冲中的键盘并保存到cmp ax, 4800h; 朝上键je isup···nokey:刷新屏幕jmp again</code></pre><h5><span id="共同缺陷">共同缺陷</span></h5><ul><li>程序执行到此，就会等待用户敲键盘，否则程序会卡住不动，游戏设计中不合理</li></ul><h3><span id="assume-的用法">Assume 的用法</span></h3><pre><code class="language-asm">data segmentabc db 1,2,3,4data endscode segmentassume cs:code, es:data;, ds:data 此时es句失效;assume并不会把ds赋值给data;必须手工对ds赋值;同一个段名与多个段寄存器有关联时:ds &gt; ss &gt; es &gt; csmain:   jmp beginxyz db 1,2,3,4begin:   mov ax, data   mov es, ax   mov al, abc[1]; 编译后变成mov al, es:[0001]   ;先替换成mov al, data:[abc + 0001]   ;再替换成mov al, data:[0001]   ;data是常数，必须替换成段寄存器   ;依据assume es:data   ;再替换成mov al, es:[0001](若没有对es赋值，运行到这句话时，es的值不等于data)   ;在替换时编译器并不检查es与data是否相等   ;假定前面assume ds:data,则这句话就会替换成   ;mov al, ds:[0001]并简化成mov al, [0001]   ;因为[]中没有bp时，默认的段地址一定是ds且ds   ;可以省略。   mov al, xyz[1]; 编译后变成   ; mov al, code:[xyz + 1]   ; 依据assume   ; mov al, cs:[4]   mov ah, 4Ch   int 21hcode endsend main</code></pre><h3><span id="操作系统对寄存器的自动赋值">操作系统对寄存器的自动赋值</span></h3><p>cs=code segement address</p><p>ip=offset main</p><p>ss:sp stack segement ：stack pointer</p><ul><li>堆栈段的段地址</li><li>堆栈空间的总长度</li></ul><p>ds&amp;es</p><ul><li>psp 在data前方</li></ul><h3><span id="堆栈段">堆栈段</span></h3><ul><li>源代码中没有定义堆栈段时，ss=首段的段地址，sp=0</li></ul><pre><code class="language-asm">data segmentabc dw 1234h, 5678hdata endscode segmentassume cs:code, ds:data, ss:stk;ss和sp的值在程序开始运行时由操作系统自动设定,;程序员不需要手工对它们进行赋值。;正如cs:ip也是在程序开始运行时由操作系统进行赋值;一样。main:   mov ax, data   mov ds, ax   push abc[0]   pop abc[2]; 5678h被替换为1234h   mov ah, 4Ch   int 21hcode endsstk segment stack; 堆栈段只能定义一个，段名stk可以改    ; 编译器根据segment后的关键词stack来判断段是普通段还是堆栈段db 200h dup('S'); 或写成dw 100h dup(0) ; 该数组不需要名字 ; dup内容可任意，堆栈空间中的初始值没有用 ; push进入的内容才有意义 ; 改成‘S’便于调试，一眼看出是堆栈，0容易混淆stk ends;堆栈空间是stk:0到stk:1FF;程序开始运行时,ss=stk,sp=1FF+1end main</code></pre><ol><li>关键词</li><li>堆栈空间长度</li></ol><h4><span id="push-pop">push pop</span></h4><pre><code class="language-asm">mov ax, 1234hpush ax;(1)mov bx, 5678hpush bx;(2)pop cx;(3)pop dx;(4)</code></pre><p><strong>假设ss=1000h,sp=200h</strong></p><ul><li>push一次操作2字节，可以跟随一个16位的寄存器或16位的变量，32位CPU中，还可以跟32位的寄存器或变量</li><li>不能操作</li><li>堆栈是倒着生长的</li><li>sp箭头指向的位置下方是堆栈中有效的部分，即已经用掉的堆栈空间，上方是空闲的堆栈空间</li><li>sp=0后再push，sp=FFFE，占用别的空间</li><li>FILO first in last out</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r4v4z3vnj30zk1bejxw.jpg" alt="41d162e6c864d6ea121c07f540269b7.jpg"></p><p>(1)</p><ul><li>sp-2</li><li>把ax的值存储到目前sp指向的地址</li></ul><p>(2)</p><ul><li>sp-2</li><li>把bx的值存储到目前sp指向的地址</li></ul><p>(3)</p><ul><li>箭头处内容弹出并赋值给cx</li><li>sp = sp +  2</li></ul><p>(4)</p><ul><li>箭头处内容弹出并赋值给dx</li><li>sp = sp +  2</li><li>堆栈回复平衡</li></ul><h4><span id="段地址起点的条件amp偏移地址和段地址的关系">段地址起点的条件&amp;偏移地址和段地址的关系</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r40xxki4j30ko0k8k4l.jpg" alt="image.png"></p><h4><span id="内存结构">内存结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z4piab18j30rg0esjvs.jpg" alt="image.png"></p><ul><li><p>一开始ss=5DED，sp=0，看起来堆栈溢出了</p></li><li><p>但是做第一次push，ss变到如图位置</p></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z4s9l3bkj30si0etwjt.jpg" alt="image.png"></p><ul><li>堆栈溢出情况如图，最多用到0030h，若继续push，sp则会进入code segement，破坏指令</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z4yugbxcj30vn0dq44r.jpg" alt="image.png"></p><ul><li>A000，B800：显卡内存</li><li>若data+code长度达到FFF0h，剩余堆栈空间只有10h</li></ul><h3><span id="es寄存器的用法">es寄存器的用法</span></h3><pre><code class="language-asm">data1 segmentabc db 1,2,3data1 endsdata2 segmentxyz db 4,5,6data2 endscode segmentassume cs:code, ds:data1, es:data2main:   mov ax, data1   mov ds, ax   mov ax, data2   mov es, ax   mov ah, abc[1]; 编译后变成mov ah, ds:[1]   ;也可以写成mov ah, ds:abc[1]   mov xyz[1], ah; 编译后变成mov es:[1], ah   ;也可以写成mov es:xyz[1], ah   ;错误写法:mov abc[1], xyz[1]; 因两个对象不能都为内存变量   mov ah, 4Ch   int 21hcode endsend main</code></pre><ul><li>除了堆栈段只能有一个外，其他都可以定义多个</li></ul><h3><span id="寄存器">寄存器</span></h3><p>ax,bx,cx,dx；通用寄存器，做算术逻辑运算</p><p>​；不够用时，还可以用bp，si，di</p><p>sp,bp,si,di；指针寄存器，sp不能放在[]内，bx可以放在[]内</p><p>​；表示偏移地址的寄存器：bx，bp，si，di</p><p>cs,ds,es,ss；段寄存器</p><p>ip,fl；cs:ip指向将要执行的指令</p><p>​；fl称为标志寄存器，cf-carry flag，第零位</p><p>​；fl的zf位，缓冲区有无内容的指示位，zf=1，zero is</p><p>true，缓冲区没有内容</p><blockquote><p>建议先把书看完TAT</p></blockquote><h3><span id="fl标志寄存器">FL标志寄存器</span></h3><h4><span id="结构">结构</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7z68r2kqqj30nq04z401.jpg" alt="image.png"></p><h4><span id="cf进位标志">CF：进位标志</span></h4><p><strong>作用</strong></p><p><strong>应用示例</strong></p><ul><li>加减有关</li></ul><p>mov ah, 0FFh</p><p>add ah, 1; AH=0, CF=1产生了进位</p><p>add ah, 2; AH=2, CF=0</p><p>sub ah, 3; AH=0FFh, CF=1产生了借位</p><ul><li>移位</li></ul><p>mov ah, 10110110B</p><p>shr ah, 2；该语法要求源代码最前面加.386</p><p>​；并且每个段定义时segement后跟use16</p><p>​；CF=1</p><h3><span id="与cf相关的两条跳转指令">**与CF相关的两条跳转指令: **</span></h3><p>jc</p><p>​有进位则跳转</p><p>jnc</p><p>​无进位则跳转</p><p>adc</p><p>​带进位加，可用于二进制的转换</p><p>clc clean carry flag</p><p>​CF=0</p><p>stc set carry flag</p><p>​CF=1</p><h4><span id="zf-零标志zero-flag">ZF 零标志(zero flag)</span></h4><p>sub ax, ax; AX=0, ZF=1</p><p>add ax, 1; AX=1, ZF=0</p><p>add ax, 0FFFFh; AX=0, ZF=1, CF=1</p><p>jz is_zero; 会发生跳转, 因为当前ZF==1</p><ul><li><p>与jz相反的指令是jnz, jnz是根据ZF==0作出跳转</p></li><li><p>jz=je，jnz=jne</p><ul><li>CPU在做cmp指令时，会做减法运算</li><li>若相减等于0，ZF==1，je跳转，相当于jz</li><li>同理jnz=jne</li></ul></li><li><p>xor ax，ax</p><p>jz/je equal</p><ul><li>会跳转，因为ZF==1</li><li>但je看起来不合逻辑</li></ul></li></ul><h4><span id="注意mov指令不影响任何标志位">注意：mov指令不影响任何标志位</span></h4><pre><code class="language-asm">mov ax, 1234h          mov bx, 1234h          sub ax, bx              mov bx, 1;此mov不影                 ;响sub指令           ;产生的ZF状态jz iszeromov bx, 0      iszero: </code></pre><ul><li>mov非运算指令，不改变ZF的值</li></ul><pre><code class="language-asm">mov ax, 1234hmov bx, 1234h          sub ax, bx              jz iszeromov bx, 0jmp done; 与左边相比; 这里多出一条; jmp指令iszero:    ; 故左边写法更好mov bx, 1done:</code></pre>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_MOS晶体管直流特性</title>
      <link href="/2022/11/01/%E7%94%B5%E5%9F%BA_%E7%AC%AC6%E7%AB%A0_MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E7%9B%B4%E6%B5%81%E7%89%B9%E6%80%A7/"/>
      <url>/2022/11/01/%E7%94%B5%E5%9F%BA_%E7%AC%AC6%E7%AB%A0_MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E7%9B%B4%E6%B5%81%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_mos晶体管直流特性">电基_ 第6章 _MOS晶体管直流特性</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h3><span id="共源极接法">共源极接法</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pn64fqrwj30hr0a5mz1.jpg" alt="image.png"></p><h2><span id="mos管特性曲线">MOS管特性曲线</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pn6vax46j30jn0bkjws.jpg" alt="image.png"></p><h3><span id="转移特性">转移特性</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmugntrbj30kc0ekq6l.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmvqgbysj30jg0fqn4d.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmx9tzubj30jl0do0xg.jpg" alt="image.png"></p><h2><span id="mos管特性的数学关系表示">MOS管特性的数学关系表示</span></h2><blockquote><p>不要求记忆掌握，只是为了便于理解原理</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pn8v4duhj30jt06cq5z.jpg" alt="image.png"></p><h3><span id="长沟道近似下简单直流mos管模型">长沟道近似下，简单直流MOS管模型</span></h3><ol><li><p>栅极电流方程</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>~G~ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">= 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p></li><li><p>漏极电流方程</p></li></ol><ul><li><p>截止区 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>~D~ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">= 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p></li><li><p>线性区</p></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dlj3unzcj30r50ckjtw.jpg" alt="image.png"></p><blockquote><p>反应工艺，材料，结构参数的影响</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dlmg1kvmj30qo0cpadi.jpg" alt="image.png"></p></blockquote><ul><li>饱和区</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dlnzi7rgj30lo06nt9e.jpg" alt="image.png"></p><ul><li>饱和区修正公式</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dlodk6haj30oo0al76h.jpg" alt="image.png"></p><h4><span id="沟道长度调制效应图示">沟道长度调制效应图示</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dlqfegjgj30kw0h80v8.jpg" alt="image.png"></p><h4><span id="背栅效应">背栅效应</span></h4><blockquote><p>若VBS≠0，必须考虑背栅效应</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dlsgzkgnj30s00cddjp.jpg" alt="image.png"></p><h3><span id="长沟道近似下nmos管直流特性方程">长沟道近似下NMOS管直流特性方程</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dltlejz0j30o50eejtb.jpg" alt="image.png"></p><h3><span id="长沟道近似下pmos管直流特性方程">长沟道近似下PMOS管直流特性方程</span></h3><p>在NMOS管直流特性方程的基础上</p><ul><li>相关变量取绝对值（ID,VGS,VDS等）</li><li>迁移率使用空穴迁移率</li></ul><h2><span id="小结">小结</span></h2><ul><li>长沟道近似下的简单直流MOS管模型，只适用于MOS管工作原理、特性的教学</li><li>电路仿真软件提供的模型，会在上述公式基础上，增加许多修正，并且同时提供不同精度和复杂度的模型，供用户选择使用</li><li>代工厂提供的模型，与工艺节点、器件结构直接相关，复杂度还要远远超过，几乎不可能提供解析表达式</li><li>实际电路设计，都是基于特定代工厂的特定模型</li><li>借助电路仿真软件，对器件特性充分熟悉，是开始设计前的必备工作，直流特性成为基础</li></ul><h2><span id="习题讲解">习题讲解</span></h2><ul><li>差模输入电阻</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dm6fwv6hj30zl0h7adm.jpg" alt="image.png"></p><ul><li>V~2~端输入电阻</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dm6w1a2bj30n20bbdhr.jpg" alt="image.png"></p><ul><li>V~1~端输入电阻</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dmd35f6nj30mu0hoju0.jpg" alt="image.png"></p><ul><li>共模输入电阻</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dmhhyy6aj30nl0baq45.jpg" alt="image.png"></p><ul><li>直流电阻与交流电阻</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7po34wjh8j30oi0gw0u3.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dn5f7bmaj30l50dj40b.jpg" alt="image.png"></p><h2><span id="hspice仿真">Hspice仿真</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h8dnbr4cpzj30kh0e9gpe.jpg" alt="image.png"></p><ul><li>M1后四位 D G S B的接法</li><li>n08 是MOS管型号</li><li>0接地</li></ul>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_MOS晶体管类型</title>
      <link href="/2022/11/01/%E7%94%B5%E5%9F%BA_%E7%AC%AC6%E7%AB%A0_MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E7%B1%BB%E5%9E%8B/"/>
      <url>/2022/11/01/%E7%94%B5%E5%9F%BA_%E7%AC%AC6%E7%AB%A0_MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_mos晶体管类型">电基_ 第6章 _MOS晶体管类型</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="mos晶体管类型">MOS晶体管类型</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7plqyhwd0j30h309vwgy.jpg" alt="image.png"></p><h3><span id="增强型nmos晶体管">增强型NMOS晶体管</span></h3><h4><span id="图示">图示</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pls5y0dbj30j00czwhs.jpg" alt="image.png"></p><h4><span id="特点">特点</span></h4><ul><li>衬底接地<ul><li>避免两个PN结同时正偏</li><li>VBS=0，避免背栅效应</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7plvy6pmdj30ig0e4dka.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7plwonnlsj30hg0b8juc.jpg" alt="image.png"></p><h3><span id="耗尽型nmos晶体管">耗尽型NMOS晶体管</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7plxgw4k9j30jh0dkn1g.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7plxssneij30jg0draf8.jpg" alt="image.png"></p><ul><li>阈值电压是负电压，关闭沟道的电压</li></ul><h3><span id="增强型nmos管-vs-耗尽型nmos管">增强型NMOS管 vs 耗尽型NMOS管</span></h3><ul><li>打开/关闭条件 |V~GS~|&lt;|V~T~|</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pm0blqeaj30h607gmzm.jpg" alt="image.png"></p><h3><span id="增强型pmos晶体管">增强型PMOS晶体管</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pm1f6yazj30jl0d9q77.jpg" alt="image.png"></p><h3><span id="n阱cmos工艺">N阱CMOS工艺</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pm50glmzj30jx0d6wi5.jpg" alt="image.png"></p><h2><span id="增强型pmos晶体管导电原理">增强型PMOS晶体管导电原理</span></h2><p><strong>衬底必须接最高电压，以避免两个PN结同时正偏</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pm5otb0gj30ij0bcwhs.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pm896xmlj30j50c2n1m.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pm9kdmy5j30jl0dywkx.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmb83jm8j30il0c5wi1.jpg" alt="image.png"></p><h2><span id="耗尽型pmos管">耗尽型PMOS管</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmchjtrpj30ij0dj41n.jpg" alt="image.png"></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmcxuyr8j30j30cutcz.jpg" alt="image.png"></p><ul><li>关掉沟道的电压—阈值电压</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmdmeqeyj30jq0dyjwn.jpg" alt="image.png"></p><h2><span id="pmos晶体管的加电方式">PMOS晶体管的加电方式</span></h2><ul><li>不需要使用负电压</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmevtkvwj30hm0dmae3.jpg" alt="image.png"></p><h2><span id="mos晶体管转移特性">MOS晶体管转移特性</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmg0aqvej30hj0dbmzy.jpg" alt="image.png"></p><h2><span id="mos晶体管输出特性">MOS晶体管输出特性</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pmi70n9rj30ij0dj0w4.jpg" alt="image.png"></p><ul><li>增强型和耗尽型的区别：阈值电压V~TH~大小不同</li><li>NMOS和PMOS的区别：I~D~V~DS~V~GS~都反向</li></ul><h2><span id="小结">小结</span></h2><ul><li>常见的MOS管以增强型为主<ul><li>NMOS管默认指增强型NMOS管</li><li>PMOS管默认指增强型PMOS管</li></ul></li><li>NMOS管和PMOS管：</li><li>除了电压、电流的极性不同之外，因为载流子不一样（NMOS管是电子，PMOS管是空穴），两者特性也会有所区别<ul><li>PMOS管噪声会更小</li><li>NMOS管放大能力更强</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Q&amp;A</title>
      <link href="/2022/11/01/Q-A/"/>
      <url>/2022/11/01/Q-A/</url>
      
        <content type="html"><![CDATA[<h1><span id="111">11.1</span></h1><h2><span id="电基">电基</span></h2><ol><li><p>PN结正偏</p><p><a href="https://zhidao.baidu.com/question/183492474.html">https://zhidao.baidu.com/question/183492474.html</a></p><p><a href="https://www.zhihu.com/question/51643334">pn结正偏时，自由电子是怎样通过耗尽层的？</a></p></li><li><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pl1ita19j30ox0ka0xn.jpg" alt="image.png"></p></li><li><p>背栅效应</p></li><li><p>N阱CMOS工艺</p></li><li><p><img src="D:%5Cblog%5Cblog%5Csource_posts%5CQ-A.assets%5Cimage-20221101143429849.png" alt="image-20221101143429849"></p></li><li><p><img src="D:%5Cblog%5Cblog%5Csource_posts%5CQ-A.assets%5Cimage-20221101152100991.png" alt="image-20221101152100991"></p></li></ol><h2><span id="112">11.2</span></h2><ol><li>寄存器和变量？</li></ol><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7qzwxhr76j30e503m74t.jpg" alt="image.png"></p><ul><li>变量—寄存器用光时</li></ul><ol start="2"><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r0jprlfsj30o506vacs.jpg" alt="image.png"><ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r42omcbcj30lo04640n.jpg" alt="image.png"></li></ul></li><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r24naa1ij306703574g.jpg" alt="image.png"><ul><li>对段地址的赋值只能来源于其他寄存器</li></ul></li><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r2uwhg05j30px08mju0.jpg" alt="image.png"><ul><li>会占用别的空间</li></ul></li><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r399vjkrj3093049aak.jpg" alt="image.png"></li></ol><ul><li><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7r40xxki4j30ko0k8k4l.jpg" alt="image.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>汇编_HW01</title>
      <link href="/2022/10/31/%E6%B1%87%E7%BC%96_HW01/"/>
      <url>/2022/10/31/%E6%B1%87%E7%BC%96_HW01/</url>
      
        <content type="html"><![CDATA[<h1><span id="汇编程序设计_hw01">汇编程序设计_HW01</span></h1><h2><span id="题目描述">题目描述</span></h2><p><strong>请在数据段中定义以下2个数组:</strong><br>s db 100 dup(0)<br>t db 100 dup(0)<br><strong>代码段中实现以下功能:</strong><br>输入一行字符(敲回车结束输入)并保存到数组s中,<br>其中回车转化成ASCII码00h保存到数组中,<br>再把s中的每个元素逐个取出判断:<br>(1) 若元素为小写字母则把它转化成大写并保存到数组t中;<br>(2) 若元素为空格则丢弃该元素,不要保存到t中;<br>(3) 若元素为其它字符则原样保存到t中;<br>最后输出t中的全部元素再输出回车换行。<br><strong>提示:</strong><br>(1) 可以循环调用int 21h的01h功能实现一行字符的输入,完成输入后应输出回车及换行;<br>(2) 可以循环调用int 21h的02h功能实现一行字符的输出;<br>(3) 数组s和t的下标可以分别用寄存器SI、DI表示;</p><h2><span id="题解">题解</span></h2><ul><li>这道题考察了最基本的汇编指令使用以及对于编程过程的理解，难度较低，课上好好听就能写出来</li><li>小白已经给我们提供了数组定义，直接赋值到data segement即可；输入输出也提供了函数参考，直接上中断大全，查看定义调用即可 <a href="http://cc.zju.edu.cn/bhh/intr/int.htm">中断大全</a></li><li>简化来看这个题目，要我们实现的主要流程就是：循环读入，存到数组中 -&gt; 读到sentinel后，终止读入 -&gt; 遍历数组s，逐个取出，依据条件判断 -&gt; 存入数组t中</li><li>其中需要注意：<ul><li>使用寄存器的时候一定要明确其大小，是16位的还是32位的</li><li>小写字母和大写字母在ASCII码表中的顺序不要搞反了！！！</li><li>有很多跳转和循环，在这过程中不要自己把自己弄糊涂了，把label写清楚</li></ul></li></ul><h2><span id="代码实现">代码实现</span></h2><pre><code class="language-asm">;把字符数组中的元素逐个取出并输出data segments db 100 dup(0)t db 100 dup(0)data endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   mov bx, 0   mov SI, 0;用于存放数组s的下标   mov DI, 0;用于存放数组t的下标input_next:   mov ah, 01h; 调用21h函数的01子函数，读入标准输入的字符   int 21h   mov s[SI], al; 读入的返回值存放到al寄存器中，将其存入数组s中   add SI, 1; 下标+1   cmp al, 0Dh; 若读到回车   je input_done ; 输入结束   jmp input_next; 循环读入input_done:   mov al, 00h; 将回车转化为00h   mov s[SI], al; 存入数组s中   mov ah, 2   mov dl, 0Dh   int 21h; 输出回车   mov ah, 2   mov dl, 0Ah   int 21h; 输出换行   mov SI, 0store_next_start:   mov cl, s[SI]; 将数组s中元素存入CL中，便于转换大小写   cmp cl, 00h; 若读到回车   je  store_done; 读入结束store_space:   cmp cl, ' '; 若读到空格   je  store_delete_space; 删除空格   jmp store_alphbetstore_delete_space:   add SI, 1   jmp store_next_startstore_alphbet:   cmp cl, 'a'; 与字符a比较   jge store_alphbet_next; ASCII大于a则继续与z比较   jmp store_nextstore_alphbet_next:   cmp cl, 'z'; 与字符z比较   jle store_alphbet_done; 若小于z则进行小写转大写   jmp store_next; 若不是小写字母，直接读入store_alphbet_done:   sub cl, 'a'-'A'; 转为大写store_next:   mov t[DI], cl; 存入数组t中   add DI, 1   add SI, 1   jmp store_next_startstore_done:   mov DI, 0output_next:   mov dl, t[DI]; 将数组t的元素存入dl中输出   cmp dl, 00h; 若为00h   je output_done; 结束输出   mov ah, 2   int 21h; 输出DL中的字符   add DI, 1   jmp output_nextoutput_done:   mov ah, 2   mov dl, 0Dh   int 21h; 输出回车   mov ah, 2   mov dl, 0Ah   int 21h; 输出换行exit:   mov ah, 4Ch   int 21hcode endsend main</code></pre>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编_02_16位32位汇编语言编程步骤</title>
      <link href="/2022/10/31/%E6%B1%87%E7%BC%96_02_16%E4%BD%8D32%E4%BD%8D%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E6%AD%A5%E9%AA%A4/"/>
      <url>/2022/10/31/%E6%B1%87%E7%BC%96_02_16%E4%BD%8D32%E4%BD%8D%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E6%AD%A5%E9%AA%A4/</url>
      
        <content type="html"><![CDATA[<h1><span id="汇编_02_16位32位汇编语言编程步骤">汇编_02_16位32位汇编语言编程步骤</span></h1><h2><span id="文件载入步骤演示">文件载入步骤演示</span></h2><p><a href="http://10.71.45.100/bhh/sum.zip">sum.zip</a></p><p>①下载上述链接中的压缩包，解压缩后，里面有一个sum.asm是32位汇编程序的源代码;</p><p><a href="http://10.71.45.100/bhh/masm32.zip">masm32.zip</a></p><p>②下载上述链接中的压缩包，解压缩后，生成masm32文件夹，里面包含了32位汇编语言的编译程序(xp虚拟机中32位汇编编译器已预装在d:\masm32, 不需要做第②步);</p><p>③双击masm32\qeditor.exe运行32位汇编语言集成环境</p><p>④在集成环境中打开sum.asm(此文件要事先拷到masm32文件夹内,即和qeditor.exe放在一起);</p><p>⑤点菜单project-&gt;build all进行编译，生成sum.exe</p><p>⑥点菜单project-&gt;run program运行sum.exe</p><h2><span id="16位汇编与32位汇编的区别与相似">16位汇编与32位汇编的区别与相似</span></h2><ol><li><h3><span id="宽度的区别">宽度的区别</span></h3></li></ol><ul><li>16位汇编只能使用16位地址,32位汇编只能使用32位地址</li><li>但两者均可以使用8位、16位、32位寄存器;</li></ul><ol start="2"><li><h3><span id="运行环境的区别">运行环境的区别</span></h3></li></ol><ul><li>16位汇编是在dos环境下的汇编语言;</li><li>32位汇编是在windows或linux环境下的汇编语言;</li></ul><ol start="3"><li><h3><span id="调用操作系统函数时有区别"><strong>调用操作系统函数时有区别</strong></span></h3></li></ol><ul><li>例如在屏幕上输出一句话<ul><li>32位汇编可以调用MessageBoxA这个函数弹框输出;</li><li>16位汇编要调用int 21h的9号功能;</li></ul></li></ul><ol start="4"><li><h3><span id="地址与寄存器差别不大">地址与寄存器差别不大</span></h3></li></ol><ul><li><p>使用16位的寄存器及地址与使用32位的寄存器及地址在语法上差别不大，例如：</p><p>mov ax, 1; 16位寄存器</p><p>mov eax, 1; 32位寄存器</p><p>mov word ptr ds:[1000h], 1234h; 16位地址</p><p>mov word ptr ds:[00401000h], 1234h; 32位地址</p></li></ul><h2><span id="编译步骤">编译步骤</span></h2><h3><span id="汇编源程序从写出到执行的过程">汇编源程序从写出到执行的过程</span></h3><h4><span id="源程序">源程序</span></h4><p>程序指的是源程序中最终由计算机执行、处理的指令或数据。而伪指令只被编译器识别，所以程序是由汇编指令组成的。</p><h4><span id="汇编源程序示例"><strong>汇编源程序示例</strong></span></h4><pre><code class="language-asm">assume cs:codesgcodesg segmentmov ax,0123Hmov bx,0456Hadd ax,bxadd bx,bxmov ax,4c00Hint 21Hcodesg endsend</code></pre><h4><span id="伪指令">伪指令</span></h4><blockquote><p>下面介绍三种伪指令</p></blockquote><ol><li>segment和ends</li></ol><pre><code class="language-asm">XXX segment:::XXX ends</code></pre><ul><li>segment和ends是一对成对使用的伪指令，在编辑文本时必须用到。、</li><li>segment和ends的功能是定义一个段（这个段可以是代码段也可以是数据段），segment说明一个段的开始，ends说明一个段的结束。</li><li>段必须有段名来标识：</li></ul><pre><code class="language-asm">段名 segment：段名 ends</code></pre><ol start="2"><li>end<ul><li>end是一个汇编程序的结束标记，编译器在编译的过程中，如果碰到了伪指令end，就结束对原程序的编译。</li></ul></li><li>assume<ul><li>assume的含义为“假设”。它假设某一段寄存器 和程序中的某一个segment…ends定义的段 相关联，在有需要的情况下，编译程序可以将某一段寄存器 和程序中的某一个segment…ends定义的段 相关联。</li><li><strong>具体用法</strong>：</li><li>要用assume把段跟段寄存器对应起来的原因是：</li><li>原来的DOS找到的空闲内存的地址不是固定的，无法找到一个地址在任何时候都是空闲的。于是DOS需要可以重定位的程序</li><li>而当时的定位方式就是设置段寄存器的值使该程序能在可分配（空闲）的内存中可用。</li><li>那就需要知道某个段被重定位时候需要修改哪个段寄存器的值才能正确执行。</li><li>assume提供这种段和重定位代码时需要对应修改的寄存器的关系给编译器，编译器再这个信息写到二进制文件中去。比如DOS下的exe程序记录在文件头中。</li></ul></li></ol><h4><span id="标号">标号</span></h4><p>汇编源程序中，除了汇编指令和伪指令外，还有一些标号。一个标号指代了一个<strong>地址</strong>。例如前面说的codesg，作为一个<strong>段的名称</strong>，这个段的名称最终被编译、连接程序处理为一个段的<strong>段地址</strong>。</p><h4><span id="程序的结构">程序的结构</span></h4><p>1）定义一个段，设定这个段的名称end<br>2）在这个段中写入汇编指令<br>3）程序结束（end指令）</p><h4><span id="程序返回">程序返回</span></h4><ul><li>在DOS操作系统中，一个程序p2在可执行文件中，要运行p2就必须要有一个正在运行的程序p1将p2从可执行文件中加载入内存后，将CPU的控制权交给p2，p2才能得以运行。</li><li>p2开始运行后，p1暂停运行。</li><li>在p2运行完毕后，将CPU的控制权交还给使它得以运行的程序p1使得p1继续运行。</li><li>在这里将CPU的控制权交还给使它得以运行的程序，我们称为<strong>程序返回</strong>。</li></ul><p>如下示例</p><pre><code class="language-asm">assume cs:codesgcodesg segmentmov ax,0123Hmov bx,0456Hadd ax,bxadd bx,bxmov ax,4c00Hint 21Hcodesg endsend</code></pre><p>其中</p><pre><code class="language-asm">mov ax,4c00Hint 21H</code></pre><p>这两条指令所实现的功能就是程序返回</p><ul><li>在汇编语言中int是一个向CPU发送中断的指令。格式为INT vec。</li><li>vec为中断向量号，其值为0~255。CPU根据这个向量号去调用内核对应的中断例程。</li><li>而在这里调用中断程序21H；ah放置中断程序的子程序编号，al放置传给他的值。4c子程序用于函数的返回，al放置返回值。</li><li>ax取值范围是4c00h—4cffh。</li></ul><h4><span id="编辑源程序">编辑源程序</span></h4><ul><li>任意文本编辑器</li></ul><h4><span id="编译连接运行">编译连接运行</span></h4><blockquote><p>xp环境下运行</p></blockquote><p>(1) 复制h02.asm到d:\masm</p><p>(2) 开始-&gt;运行-&gt;command  进入虚拟dos窗口</p><p>(3) d:     进入d:盘</p><p>(4) cd \masm  进入d:\masm文件夹</p><p>(5) masm h02; 把h02.asm编译成h02.obj,末尾有分号</p><p>(6) link h02; 把h02.obj连接成h02.exe,末尾有分号</p><p>(7) h02     运行h02.exe</p><p>(8) td h02.exe; 用Turbo Debugger调试h02.exe</p><p>(9) exit    关闭dos窗口</p><h2><span id="语法补充">语法补充</span></h2><h3><span id="代码示例">代码示例</span></h3><pre><code class="language-asm">.386.model flat, stdcalloption casemap :none;假定masm32是安装在c:\masm32里面的include include\windows.inc ;.inc 文件中声明了windows系统函数include include\kernel32.inc; 相对路径，要求文件都拷到masm32里了include include\user32.inc;.lib文件即库文件中包含的是库函数的机器语言代码，将函数.c-&gt;.obj放在lib中供用户调用includelib lib\kernel32.libincludelib lib\user32.lib.dataresult db 100 dup(0); dup:duplicate重复;char result[100]=&#123;0&#125;;format db &quot;%d&quot;,0; db:define byte字节类型; char format[3]=&quot;%d&quot;;prompt db &quot;The result&quot;,0.codemain:         ; 标号    mov eax, 0; eax:extended ax    mov ebx, 1again:     add eax, ebx; eax=0+1+2+3    add ebx, 1  ; ebx=4    cmp ebx, 100; cmp:compare    jbe again   ; jbe:jump if below or equalinvoke wsprintf, offset result, offset format, eaxinvoke MessageBox,0,offset result,offset prompt,0    retend main; 指定程序的起始执行点         ; end后面的标号决定了程序刚开始         ; 运行时的eip的值。</code></pre><pre><code class="language-asm">;把字符数组中的元素逐个取出并输出data segmenta db &quot;ABC&quot;s db &quot;Hello$world!&quot;, 0Dh, 0Ah, 0data endscode segmentassume cs:code, ds:datamain:   mov ax, data   mov ds, ax   mov bx, 0next:   mov dl, s[bx]; 经过编译后变成mov dl, ds:[3+bx]   cmp dl, 0   je exit   mov ah, 2   int 21h   add bx, 1   jmp nextexit:   mov ah, 4Ch   int 21hcode endsend main</code></pre><ol><li>执行代码开头标志可以是：main begin start 等等<ol><li>汇编代码不一定从源代码第一行开始执行</li><li>end : 源代码中任意标号 该标号即成为程序执行时的第一句</li></ol></li><li>汇编中单引号与双引号无区别</li><li>.data 编译指示语句 表示变量数组定义由此开始（其实也可以在其下写程序）</li><li>.code 识别代码 （其实也可以在其下定义变量）</li><li>db – define byte 字节类型</li><li>单行注释 ; 多行注释 comment @comments@或#comments#，comment中不允许出现@或#</li></ol>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电控会议_一_10.30</title>
      <link href="/2022/10/30/%E7%94%B5%E6%8E%A7%E4%BC%9A%E8%AE%AE_%E4%B8%80_10.30/"/>
      <url>/2022/10/30/%E7%94%B5%E6%8E%A7%E4%BC%9A%E8%AE%AE_%E4%B8%80_10.30/</url>
      
        <content type="html"><![CDATA[<h2><span id="赛季目标">赛季目标</span></h2><p>无模型-&gt;半依赖性模型</p><h3><span id="23季规则变化">23季规则变化</span></h3><ol><li>哨兵</li></ol><h2><span id="管理条例">管理条例</span></h2><h3><span id="日常规范">日常规范</span></h3><ol><li>全员大会<ol><li>随车组汇报项目进度</li></ol></li><li>电控小会<ol><li>组内项目进展</li><li>组内知识库<ol><li>汇总问题，研发过程中使用</li></ol></li><li>组内培训</li></ol></li><li>每周周结</li><li>日常工作<ol><li>赛季前期<ol><li>熟悉代码</li><li>模块优化</li></ol></li><li>中后期<ol><li>部署代码</li></ol></li><li>赛季进行<ol><li>可能有代码规范更新</li></ol></li></ol></li><li>沟通</li></ol><h2><span id="代码管理">代码管理</span></h2><h3><span id="飞书">飞书</span></h3><h3><span id="github">Github</span></h3><ol><li>仓库</li><li>申请 merge push</li></ol><h3><span id="代码规范">代码规范</span></h3><ol><li>原理</li><li>readme</li></ol>]]></content>
      
      
      <categories>
          
          <category> RoboMaster </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电基_第6章_MOS晶体管工作原理</title>
      <link href="/2022/10/27/%E7%94%B5%E5%9F%BA_%E7%AC%AC6%E7%AB%A0_MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
      <url>/2022/10/27/%E7%94%B5%E5%9F%BA_%E7%AC%AC6%E7%AB%A0_MOS%E6%99%B6%E4%BD%93%E7%AE%A1%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1><span id="电基_-第6章-_mos晶体管工作原理">电基_ 第6章 _MOS晶体管工作原理</span></h1><blockquote><p>声明：本文图片及内容基本来自浙江大学《电子电路基础》课程课件</p></blockquote><h2><span id="mos晶体管工作原理">MOS晶体管工作原理</span></h2><p>CMOS：Complementary Metal Oxide Semiconductor</p><p>MOS：金属氧化物半导体</p><p>C：互补，把NMOS和PMOS晶体管同时制作在同一硅衬底</p><h2><span id="导体绝缘体半导体">导体/绝缘体/半导体</span></h2><p>电导率/电阻率：衡量材料导电能力</p><p>导体</p><p>绝缘体</p><p>半导体</p><h2><span id="硅">硅</span></h2><ul><li>制造MOS晶体管最通用的半导体</li><li>本征硅：纯净的硅晶体</li><li>载流子（carrier）：电子和空穴</li><li>导电能力很差</li></ul><h2><span id="n型ampp型硅">N型&amp;P型硅</span></h2><h4><span id="n型">N型</span></h4><p>掺入As和P等五价原子</p><p>导电能力由主要载流子浓度绝对</p><h4><span id="p型">P型</span></h4><h2><span id="pn结junction">PN结（Junction）</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxfa9a0wj307a04bt8y.jpg" alt></p><p>P型半导体和N型半导体接触，交界处附近形成PN结</p><h2><span id="pn结单向导电性">PN结单向导电性</span></h2><h4><span id="反向偏置">反向偏置</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrqh13j306k05mglq.jpg" alt></p><p>截止，手算时认为电流为0——很小的反向饱和电流</p><h4><span id="正向偏置">正向偏置</span></h4><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrqs1bj306305haa6.jpg" alt></p><p>导通</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>=</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">I = I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>~S~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>e</mi><mi>V</mi></msup><mi mathvariant="normal">/</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">(e^V/V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>~t~ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">- 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrrbmbj309004zgm6.jpg" alt></p><h2><span id="mos晶体管结构">MOS晶体管结构</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrvw6yj30kp0by0wk.jpg" alt></p><p>p-掺少一点 不导电</p><p>n+掺五价，多掺</p><h2><span id="符号">符号</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrtzggj30fz08674u.jpg" alt></p><p>DS之间有两个背靠背的PN结，目前电流无法导通</p><p><strong>衬底必须接最低电压，以免两个PN结同时正偏</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrwt6ej30is0c4783.jpg" alt></p><h2><span id="mos晶体管导电原理">MOS晶体管导电原理</span></h2><h3><span id="过程">过程</span></h3><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrx787j30kd0e0afv.jpg" alt></p><ol><li><p>G加正电压，衬底中栅极正下方区域电子不够，将衬底其他地方电子也吸引过来，将空穴排掉</p></li><li><p>继续增大电压，占优势的空穴减少，占劣势的电子增多</p></li><li><p>达到均势 此时为<strong>阈值电压</strong><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrz4tjj30ki0dm79l.jpg" alt="image-20221027110730574"></p></li><li><p>继续增大栅极电压，电子占优势 达到<strong>反型层</strong><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrz53cj30j80drgqc.jpg" alt="image-20221027110810709"></p></li><li><p>栅极电压不变，漏极加正电压 得到<strong>增强型NMOS管</strong><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhs93d2j30ix0aladl.jpg" alt="image-20221027111140673"></p></li></ol><h4><span id="补充耗尽型nmos管在二氧化硅中固定正电荷有天然沟道">补充：耗尽型NMOS管，在二氧化硅中固定正电荷，有天然沟道</span></h4><h3><span id="原理">原理</span></h3><ul><li>栅源电压VGS&gt;阈值电压，可以导电<ul><li>如果漏源电压VDS&gt;0，对应会有漏源电流IDS</li></ul></li><li>栅源电压VGS越大，导电能力越强<ul><li>对于同样大小的漏源电压VDS，漏源电流IDS越大</li></ul></li><li>栅源电压VGS&lt;阈值电压，不可以导电</li><li><em>压控器件：漏源电流IDS受栅源电压VGS控制</em></li></ul><h2><span id="漏源电压影响">漏源电压影响</span></h2><ol><li><p>栅极电压不变，漏极加正电压<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhsv42lj30ji0du0y7.jpg" alt="image-20221027111633383"></p><ol><li>栅极与源极电压差更大，沟道更深</li><li>栅极与漏极电压差更小，沟道更浅</li></ol><p><strong>暂时认为沟道电阻不变，对应电流线性增大</strong></p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhrz8tlj30fq0bh76g.jpg" alt="image-20221027111750431"></p><p>继续增加漏极电压</p><p><strong>漏源电压较大，影响沟道形状，电阻增大，电流增大速度减慢</strong><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhs103uj30fy0bxmzr.jpg" alt="image-20221027111906485"></p></li><li><p>继续增大漏极电压 <strong>沟道恰好夹断</strong> <img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhs7wb6j30jy0f5gq9.jpg" alt="image-20221027111832676"></p><p>V~D~达到饱和电压V~D0~</p></li><li><p>继续增大漏极电压 <strong>夹断点左移</strong><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhsag5uj30j80d342r.jpg" alt="image-20221027112339846"></p><ol><li>电流仍然存在</li><li>夹断点仍为V~D0~</li></ol><p><strong>若L较大，认为夹断后加电压，沟道形状基本不变</strong><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhsccxnj30jt0ec447.jpg" alt="image-20221027112543834"></p><p>相当于无视▲L</p><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhs07m8j30fk0bsdgz.jpg" alt="image-20221027112716883"></p><ul><li>相当于恒流源，也可用作电阻（此时电压不可过大）</li><li>正常工作在CD区域</li><li>电子跑过L~eff~后，几乎贴着绝缘层下表面，沿着$$夹断区向右跑</li><li>实际上电阻略有减小</li></ul></li><li><p>继续增大漏极电压<img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7oxhs20yhj30g60bidhb.jpg" alt="image-20221027112815460"></p></li></ol><h2><span id="nmos管输出特性">NMOS管输出特性</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pkzlr6wfj30ln0dlq5x.jpg" alt="image.png"></p><p>V~GS~大小影响总体的过电流能力</p><p>若V~GS~小于阈值电压，则不能生成沟道，截止区</p><h2><span id="nmos管共源接法">NMOS管共源接法</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pl2n9h09j30k90dv41o.jpg" alt="image.png"></p><ul><li>栅极输入电压和漏极输入电压都以源作为公共参考点——共源</li><li>关注的是端子间的电压差</li></ul><h2><span id="nmos管转移特性">NMOS管转移特性</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pl4xtbvbj30l10dngp5.jpg" alt="image.png"></p><ul><li>压控电流转移特性，V~DS~定时观察I~D~和V~GS~</li></ul><h2><span id="背栅效应"><strong>背栅效应</strong></span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pl96u43vj30ko0e9whn.jpg" alt="image.png"></p><ul><li>二阶效应，可不考虑</li><li>影响压控电流的大小</li></ul><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7pla4vajij30ji0bngoc.jpg" alt="image.png"></p><ul><li>有时候不能这样接，此时背栅效应仍要考虑</li></ul><h2><span id="mos晶体管结构参数">MOS晶体管结构参数</span></h2><p><img src="https://tva1.sinaimg.cn/large/008qZDPcly1h7plbmw1oqj30ja0bldi9.jpg" alt="image.png"></p><ul><li>短沟道优势：电子容易跑，开关速度快</li><li>短沟道劣势：电压大了，容易击穿</li></ul><h2><span id="小结">小结</span></h2><ul><li>MOS晶体管导电沟道的形状，决定导电能力</li><li>宽长比决定沟道的宽度和长度<ul><li>宽长比越大，导电能力越大</li></ul></li><li><strong>栅源电压</strong>决定沟道是否<strong>形成</strong>，以及形成沟道的深度，是否截止<ul><li>沟道越深，导电能力越大</li></ul></li><li><strong>漏源电压</strong>决定沟道是否<strong>夹断</strong><ul><li>夹断之前，线性区，电流随漏源电压线性变化</li><li>夹断之后，饱和区，电流几乎不随漏源电压变化</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电基 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大一暑期总结</title>
      <link href="/2022/09/01/%E5%A4%A7%E4%B8%80%E6%9A%91%E6%9C%9F%E6%80%BB%E7%BB%93/"/>
      <url>/2022/09/01/%E5%A4%A7%E4%B8%80%E6%9A%91%E6%9C%9F%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<ul><li>不知不觉暑假已经到尾声了，这个假期过得还是很充实的</li><li>不过学习的时间感觉不够多，单片机只是入门，还做不了什么东西（但是大二上学期就会定期做了！计划是一个月做一个项目），电路原理也只是很快地过了一下，开学前这几天还打算学一下模电数电，数据结构，PCB和面包板绘制，multisim仿真</li><li>不过其他事情看起来是做了不少，小小总结一下吧~</li></ul><h3><span id="大一暑期buketlist">大一暑期Buketlist</span></h3><ol><li>练了考了科目二（虽然没过呜呜呜）</li><li>练了科目三</li><li>家教挣了两千多（花得也差不多了）</li><li>参加了学长组和迎新志愿者</li><li>和臭宝出去玩了两天</li><li>挑战了从没敢玩的过山车，跳楼机，海盗船</li><li>第一次见麋鹿羊驼火烈鸟鹈鹕</li><li>第一次喂黑天鹅</li><li>入门了stm32单片机</li><li>决定并规划了出国留学</li><li>线上支教了几天（虽然实话实说，我不太喜欢教小朋友，但是小朋友还是很可爱的）</li><li>看了五部电影<ol><li>《穆赫兰道》（这个真的刷新了我对好电影的认知，感觉可以二刷）</li><li>《布达佩斯大饭店》也是很棒的电影</li><li>《恋恋笔记本》或许就是爱情最动人的样子</li><li>《门锁》不太可怕，但是立意挺不错的</li><li>《美丽心灵的永恒阳光》呀，写到才发现没看完哈哈哈哈</li></ol></li></ol><h3><span id="下学期的规划">下学期的规划</span></h3><ol><li>最重要的就是专业能不能转成功（祈祷aaaaa真的好紧张）and成功后能不能很好地完成本专业的课程学习</li><li>考出笔译证书和六级650+</li><li>实验室做出成绩来</li><li>还有其他规划都在规划表里这里不一一列举了</li></ol><p>希望自己好好吸取大一的教训，把握好时间</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2022/08/31/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/08/31/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面</strong></p><ul><li>这是我的第一篇博客</li></ul><p><strong>测试</strong><br>试一试这个网址能不能粘上<a href="https://www.baidu.com/">baidu</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
